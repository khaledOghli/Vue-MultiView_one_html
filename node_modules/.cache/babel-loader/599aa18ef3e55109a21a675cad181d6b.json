{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\n  throw error;\n}\n\nfunction defaultOnWarn(msg) {\n  process.env.NODE_ENV !== 'production' && console.warn(`[Vue warn] ${msg.message}`);\n}\n\nfunction createCompilerError(code, loc, messages, additionalMessage) {\n  const msg = process.env.NODE_ENV !== 'production' || !true ? (messages || errorMessages)[code] + (additionalMessage || ``) : code;\n  const error = new SyntaxError(String(msg));\n  error.code = code;\n  error.loc = loc;\n  return error;\n}\n\nconst errorMessages = {\n  // parse errors\n  [0\n  /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */\n  ]: 'Illegal comment.',\n  [1\n  /* CDATA_IN_HTML_CONTENT */\n  ]: 'CDATA section is allowed only in XML context.',\n  [2\n  /* DUPLICATE_ATTRIBUTE */\n  ]: 'Duplicate attribute.',\n  [3\n  /* END_TAG_WITH_ATTRIBUTES */\n  ]: 'End tag cannot have attributes.',\n  [4\n  /* END_TAG_WITH_TRAILING_SOLIDUS */\n  ]: \"Illegal '/' in tags.\",\n  [5\n  /* EOF_BEFORE_TAG_NAME */\n  ]: 'Unexpected EOF in tag.',\n  [6\n  /* EOF_IN_CDATA */\n  ]: 'Unexpected EOF in CDATA section.',\n  [7\n  /* EOF_IN_COMMENT */\n  ]: 'Unexpected EOF in comment.',\n  [8\n  /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */\n  ]: 'Unexpected EOF in script.',\n  [9\n  /* EOF_IN_TAG */\n  ]: 'Unexpected EOF in tag.',\n  [10\n  /* INCORRECTLY_CLOSED_COMMENT */\n  ]: 'Incorrectly closed comment.',\n  [11\n  /* INCORRECTLY_OPENED_COMMENT */\n  ]: 'Incorrectly opened comment.',\n  [12\n  /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */\n  ]: \"Illegal tag name. Use '&lt;' to print '<'.\",\n  [13\n  /* MISSING_ATTRIBUTE_VALUE */\n  ]: 'Attribute value was expected.',\n  [14\n  /* MISSING_END_TAG_NAME */\n  ]: 'End tag name was expected.',\n  [15\n  /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */\n  ]: 'Whitespace was expected.',\n  [16\n  /* NESTED_COMMENT */\n  ]: \"Unexpected '<!--' in comment.\",\n  [17\n  /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */\n  ]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\n  [18\n  /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */\n  ]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\n  [19\n  /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */\n  ]: \"Attribute name cannot start with '='.\",\n  [21\n  /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */\n  ]: \"'<?' is allowed only in XML context.\",\n  [20\n  /* UNEXPECTED_NULL_CHARACTER */\n  ]: `Unexpected null character.`,\n  [22\n  /* UNEXPECTED_SOLIDUS_IN_TAG */\n  ]: \"Illegal '/' in tags.\",\n  // Vue-specific parse errors\n  [23\n  /* X_INVALID_END_TAG */\n  ]: 'Invalid end tag.',\n  [24\n  /* X_MISSING_END_TAG */\n  ]: 'Element is missing end tag.',\n  [25\n  /* X_MISSING_INTERPOLATION_END */\n  ]: 'Interpolation end sign was not found.',\n  [27\n  /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */\n  ]: 'End bracket for dynamic directive argument was not found. ' + 'Note that dynamic directive argument cannot contain spaces.',\n  [26\n  /* X_MISSING_DIRECTIVE_NAME */\n  ]: 'Legal directive name was expected.',\n  // transform errors\n  [28\n  /* X_V_IF_NO_EXPRESSION */\n  ]: `v-if/v-else-if is missing expression.`,\n  [29\n  /* X_V_IF_SAME_KEY */\n  ]: `v-if/else branches must use unique keys.`,\n  [30\n  /* X_V_ELSE_NO_ADJACENT_IF */\n  ]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\n  [31\n  /* X_V_FOR_NO_EXPRESSION */\n  ]: `v-for is missing expression.`,\n  [32\n  /* X_V_FOR_MALFORMED_EXPRESSION */\n  ]: `v-for has invalid expression.`,\n  [33\n  /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */\n  ]: `<template v-for> key should be placed on the <template> tag.`,\n  [34\n  /* X_V_BIND_NO_EXPRESSION */\n  ]: `v-bind is missing expression.`,\n  [35\n  /* X_V_ON_NO_EXPRESSION */\n  ]: `v-on is missing expression.`,\n  [36\n  /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */\n  ]: `Unexpected custom directive on <slot> outlet.`,\n  [37\n  /* X_V_SLOT_MIXED_SLOT_USAGE */\n  ]: `Mixed v-slot usage on both the component and nested <template>.` + `When there are multiple named slots, all slots should use <template> ` + `syntax to avoid scope ambiguity.`,\n  [38\n  /* X_V_SLOT_DUPLICATE_SLOT_NAMES */\n  ]: `Duplicate slot names found. `,\n  [39\n  /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */\n  ]: `Extraneous children found when component already has explicitly named ` + `default slot. These children will be ignored.`,\n  [40\n  /* X_V_SLOT_MISPLACED */\n  ]: `v-slot can only be used on components or <template> tags.`,\n  [41\n  /* X_V_MODEL_NO_EXPRESSION */\n  ]: `v-model is missing expression.`,\n  [42\n  /* X_V_MODEL_MALFORMED_EXPRESSION */\n  ]: `v-model value must be a valid JavaScript member expression.`,\n  [43\n  /* X_V_MODEL_ON_SCOPE_VARIABLE */\n  ]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\n  [44\n  /* X_INVALID_EXPRESSION */\n  ]: `Error parsing JavaScript expression: `,\n  [45\n  /* X_KEEP_ALIVE_INVALID_CHILDREN */\n  ]: `<KeepAlive> expects exactly one child component.`,\n  // generic errors\n  [46\n  /* X_PREFIX_ID_NOT_SUPPORTED */\n  ]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\n  [47\n  /* X_MODULE_MODE_NOT_SUPPORTED */\n  ]: `ES module mode is not supported in this build of compiler.`,\n  [48\n  /* X_CACHE_HANDLER_NOT_SUPPORTED */\n  ]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\n  [49\n  /* X_SCOPE_ID_NOT_SUPPORTED */\n  ]: `\"scopeId\" option is only supported in module mode.`,\n  // just to fulfill types\n  [50\n  /* __EXTEND_POINT__ */\n  ]: ``\n};\nconst FRAGMENT = Symbol(process.env.NODE_ENV !== 'production' ? `Fragment` : ``);\nconst TELEPORT = Symbol(process.env.NODE_ENV !== 'production' ? `Teleport` : ``);\nconst SUSPENSE = Symbol(process.env.NODE_ENV !== 'production' ? `Suspense` : ``);\nconst KEEP_ALIVE = Symbol(process.env.NODE_ENV !== 'production' ? `KeepAlive` : ``);\nconst BASE_TRANSITION = Symbol(process.env.NODE_ENV !== 'production' ? `BaseTransition` : ``);\nconst OPEN_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? `openBlock` : ``);\nconst CREATE_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? `createBlock` : ``);\nconst CREATE_ELEMENT_BLOCK = Symbol(process.env.NODE_ENV !== 'production' ? `createElementBlock` : ``);\nconst CREATE_VNODE = Symbol(process.env.NODE_ENV !== 'production' ? `createVNode` : ``);\nconst CREATE_ELEMENT_VNODE = Symbol(process.env.NODE_ENV !== 'production' ? `createElementVNode` : ``);\nconst CREATE_COMMENT = Symbol(process.env.NODE_ENV !== 'production' ? `createCommentVNode` : ``);\nconst CREATE_TEXT = Symbol(process.env.NODE_ENV !== 'production' ? `createTextVNode` : ``);\nconst CREATE_STATIC = Symbol(process.env.NODE_ENV !== 'production' ? `createStaticVNode` : ``);\nconst RESOLVE_COMPONENT = Symbol(process.env.NODE_ENV !== 'production' ? `resolveComponent` : ``);\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol(process.env.NODE_ENV !== 'production' ? `resolveDynamicComponent` : ``);\nconst RESOLVE_DIRECTIVE = Symbol(process.env.NODE_ENV !== 'production' ? `resolveDirective` : ``);\nconst RESOLVE_FILTER = Symbol(process.env.NODE_ENV !== 'production' ? `resolveFilter` : ``);\nconst WITH_DIRECTIVES = Symbol(process.env.NODE_ENV !== 'production' ? `withDirectives` : ``);\nconst RENDER_LIST = Symbol(process.env.NODE_ENV !== 'production' ? `renderList` : ``);\nconst RENDER_SLOT = Symbol(process.env.NODE_ENV !== 'production' ? `renderSlot` : ``);\nconst CREATE_SLOTS = Symbol(process.env.NODE_ENV !== 'production' ? `createSlots` : ``);\nconst TO_DISPLAY_STRING = Symbol(process.env.NODE_ENV !== 'production' ? `toDisplayString` : ``);\nconst MERGE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? `mergeProps` : ``);\nconst NORMALIZE_CLASS = Symbol(process.env.NODE_ENV !== 'production' ? `normalizeClass` : ``);\nconst NORMALIZE_STYLE = Symbol(process.env.NODE_ENV !== 'production' ? `normalizeStyle` : ``);\nconst NORMALIZE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? `normalizeProps` : ``);\nconst GUARD_REACTIVE_PROPS = Symbol(process.env.NODE_ENV !== 'production' ? `guardReactiveProps` : ``);\nconst TO_HANDLERS = Symbol(process.env.NODE_ENV !== 'production' ? `toHandlers` : ``);\nconst CAMELIZE = Symbol(process.env.NODE_ENV !== 'production' ? `camelize` : ``);\nconst CAPITALIZE = Symbol(process.env.NODE_ENV !== 'production' ? `capitalize` : ``);\nconst TO_HANDLER_KEY = Symbol(process.env.NODE_ENV !== 'production' ? `toHandlerKey` : ``);\nconst SET_BLOCK_TRACKING = Symbol(process.env.NODE_ENV !== 'production' ? `setBlockTracking` : ``);\nconst PUSH_SCOPE_ID = Symbol(process.env.NODE_ENV !== 'production' ? `pushScopeId` : ``);\nconst POP_SCOPE_ID = Symbol(process.env.NODE_ENV !== 'production' ? `popScopeId` : ``);\nconst WITH_CTX = Symbol(process.env.NODE_ENV !== 'production' ? `withCtx` : ``);\nconst UNREF = Symbol(process.env.NODE_ENV !== 'production' ? `unref` : ``);\nconst IS_REF = Symbol(process.env.NODE_ENV !== 'production' ? `isRef` : ``);\nconst WITH_MEMO = Symbol(process.env.NODE_ENV !== 'production' ? `withMemo` : ``);\nconst IS_MEMO_SAME = Symbol(process.env.NODE_ENV !== 'production' ? `isMemoSame` : ``); // Name mapping for runtime helpers that need to be imported from 'vue' in\n// generated code. Make sure these are correctly exported in the runtime!\n// Using `any` here because TS doesn't allow symbols as index type.\n\nconst helperNameMap = {\n  [FRAGMENT]: `Fragment`,\n  [TELEPORT]: `Teleport`,\n  [SUSPENSE]: `Suspense`,\n  [KEEP_ALIVE]: `KeepAlive`,\n  [BASE_TRANSITION]: `BaseTransition`,\n  [OPEN_BLOCK]: `openBlock`,\n  [CREATE_BLOCK]: `createBlock`,\n  [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\n  [CREATE_VNODE]: `createVNode`,\n  [CREATE_ELEMENT_VNODE]: `createElementVNode`,\n  [CREATE_COMMENT]: `createCommentVNode`,\n  [CREATE_TEXT]: `createTextVNode`,\n  [CREATE_STATIC]: `createStaticVNode`,\n  [RESOLVE_COMPONENT]: `resolveComponent`,\n  [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\n  [RESOLVE_DIRECTIVE]: `resolveDirective`,\n  [RESOLVE_FILTER]: `resolveFilter`,\n  [WITH_DIRECTIVES]: `withDirectives`,\n  [RENDER_LIST]: `renderList`,\n  [RENDER_SLOT]: `renderSlot`,\n  [CREATE_SLOTS]: `createSlots`,\n  [TO_DISPLAY_STRING]: `toDisplayString`,\n  [MERGE_PROPS]: `mergeProps`,\n  [NORMALIZE_CLASS]: `normalizeClass`,\n  [NORMALIZE_STYLE]: `normalizeStyle`,\n  [NORMALIZE_PROPS]: `normalizeProps`,\n  [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\n  [TO_HANDLERS]: `toHandlers`,\n  [CAMELIZE]: `camelize`,\n  [CAPITALIZE]: `capitalize`,\n  [TO_HANDLER_KEY]: `toHandlerKey`,\n  [SET_BLOCK_TRACKING]: `setBlockTracking`,\n  [PUSH_SCOPE_ID]: `pushScopeId`,\n  [POP_SCOPE_ID]: `popScopeId`,\n  [WITH_CTX]: `withCtx`,\n  [UNREF]: `unref`,\n  [IS_REF]: `isRef`,\n  [WITH_MEMO]: `withMemo`,\n  [IS_MEMO_SAME]: `isMemoSame`\n};\n\nfunction registerRuntimeHelpers(helpers) {\n  Object.getOwnPropertySymbols(helpers).forEach(s => {\n    helperNameMap[s] = helpers[s];\n  });\n} // AST Utilities ---------------------------------------------------------------\n// Some expressions, e.g. sequence and conditional expressions, are never\n// associated with template nodes, so their source locations are just a stub.\n// Container types like CompoundExpression also don't need a real location.\n\n\nconst locStub = {\n  source: '',\n  start: {\n    line: 1,\n    column: 1,\n    offset: 0\n  },\n  end: {\n    line: 1,\n    column: 1,\n    offset: 0\n  }\n};\n\nfunction createRoot(children, loc = locStub) {\n  return {\n    type: 0\n    /* ROOT */\n    ,\n    children,\n    helpers: [],\n    components: [],\n    directives: [],\n    hoists: [],\n    imports: [],\n    cached: 0,\n    temps: 0,\n    codegenNode: undefined,\n    loc\n  };\n}\n\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\n  if (context) {\n    if (isBlock) {\n      context.helper(OPEN_BLOCK);\n      context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\n    } else {\n      context.helper(getVNodeHelper(context.inSSR, isComponent));\n    }\n\n    if (directives) {\n      context.helper(WITH_DIRECTIVES);\n    }\n  }\n\n  return {\n    type: 13\n    /* VNODE_CALL */\n    ,\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent,\n    loc\n  };\n}\n\nfunction createArrayExpression(elements, loc = locStub) {\n  return {\n    type: 17\n    /* JS_ARRAY_EXPRESSION */\n    ,\n    loc,\n    elements\n  };\n}\n\nfunction createObjectExpression(properties, loc = locStub) {\n  return {\n    type: 15\n    /* JS_OBJECT_EXPRESSION */\n    ,\n    loc,\n    properties\n  };\n}\n\nfunction createObjectProperty(key, value) {\n  return {\n    type: 16\n    /* JS_PROPERTY */\n    ,\n    loc: locStub,\n    key: isString(key) ? createSimpleExpression(key, true) : key,\n    value\n  };\n}\n\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0\n/* NOT_CONSTANT */\n) {\n  return {\n    type: 4\n    /* SIMPLE_EXPRESSION */\n    ,\n    loc,\n    content,\n    isStatic,\n    constType: isStatic ? 3\n    /* CAN_STRINGIFY */\n    : constType\n  };\n}\n\nfunction createInterpolation(content, loc) {\n  return {\n    type: 5\n    /* INTERPOLATION */\n    ,\n    loc,\n    content: isString(content) ? createSimpleExpression(content, false, loc) : content\n  };\n}\n\nfunction createCompoundExpression(children, loc = locStub) {\n  return {\n    type: 8\n    /* COMPOUND_EXPRESSION */\n    ,\n    loc,\n    children\n  };\n}\n\nfunction createCallExpression(callee, args = [], loc = locStub) {\n  return {\n    type: 14\n    /* JS_CALL_EXPRESSION */\n    ,\n    loc,\n    callee,\n    arguments: args\n  };\n}\n\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\n  return {\n    type: 18\n    /* JS_FUNCTION_EXPRESSION */\n    ,\n    params,\n    returns,\n    newline,\n    isSlot,\n    loc\n  };\n}\n\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\n  return {\n    type: 19\n    /* JS_CONDITIONAL_EXPRESSION */\n    ,\n    test,\n    consequent,\n    alternate,\n    newline,\n    loc: locStub\n  };\n}\n\nfunction createCacheExpression(index, value, isVNode = false) {\n  return {\n    type: 20\n    /* JS_CACHE_EXPRESSION */\n    ,\n    index,\n    value,\n    isVNode,\n    loc: locStub\n  };\n}\n\nfunction createBlockStatement(body) {\n  return {\n    type: 21\n    /* JS_BLOCK_STATEMENT */\n    ,\n    body,\n    loc: locStub\n  };\n}\n\nfunction createTemplateLiteral(elements) {\n  return {\n    type: 22\n    /* JS_TEMPLATE_LITERAL */\n    ,\n    elements,\n    loc: locStub\n  };\n}\n\nfunction createIfStatement(test, consequent, alternate) {\n  return {\n    type: 23\n    /* JS_IF_STATEMENT */\n    ,\n    test,\n    consequent,\n    alternate,\n    loc: locStub\n  };\n}\n\nfunction createAssignmentExpression(left, right) {\n  return {\n    type: 24\n    /* JS_ASSIGNMENT_EXPRESSION */\n    ,\n    left,\n    right,\n    loc: locStub\n  };\n}\n\nfunction createSequenceExpression(expressions) {\n  return {\n    type: 25\n    /* JS_SEQUENCE_EXPRESSION */\n    ,\n    expressions,\n    loc: locStub\n  };\n}\n\nfunction createReturnStatement(returns) {\n  return {\n    type: 26\n    /* JS_RETURN_STATEMENT */\n    ,\n    returns,\n    loc: locStub\n  };\n}\n\nconst isStaticExp = p => p.type === 4\n/* SIMPLE_EXPRESSION */\n&& p.isStatic;\n\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\n\nfunction isCoreComponent(tag) {\n  if (isBuiltInType(tag, 'Teleport')) {\n    return TELEPORT;\n  } else if (isBuiltInType(tag, 'Suspense')) {\n    return SUSPENSE;\n  } else if (isBuiltInType(tag, 'KeepAlive')) {\n    return KEEP_ALIVE;\n  } else if (isBuiltInType(tag, 'BaseTransition')) {\n    return BASE_TRANSITION;\n  }\n}\n\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\n\nconst isSimpleIdentifier = name => !nonIdentifierRE.test(name);\n\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\n\nconst isMemberExpressionBrowser = path => {\n  // remove whitespaces around . or [ first\n  path = path.trim().replace(whitespaceRE, s => s.trim());\n  let state = 0\n  /* inMemberExp */\n  ;\n  let stateStack = [];\n  let currentOpenBracketCount = 0;\n  let currentOpenParensCount = 0;\n  let currentStringType = null;\n\n  for (let i = 0; i < path.length; i++) {\n    const char = path.charAt(i);\n\n    switch (state) {\n      case 0\n      /* inMemberExp */\n      :\n        if (char === '[') {\n          stateStack.push(state);\n          state = 1\n          /* inBrackets */\n          ;\n          currentOpenBracketCount++;\n        } else if (char === '(') {\n          stateStack.push(state);\n          state = 2\n          /* inParens */\n          ;\n          currentOpenParensCount++;\n        } else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\n          return false;\n        }\n\n        break;\n\n      case 1\n      /* inBrackets */\n      :\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state);\n          state = 3\n          /* inString */\n          ;\n          currentStringType = char;\n        } else if (char === `[`) {\n          currentOpenBracketCount++;\n        } else if (char === `]`) {\n          if (! --currentOpenBracketCount) {\n            state = stateStack.pop();\n          }\n        }\n\n        break;\n\n      case 2\n      /* inParens */\n      :\n        if (char === `'` || char === `\"` || char === '`') {\n          stateStack.push(state);\n          state = 3\n          /* inString */\n          ;\n          currentStringType = char;\n        } else if (char === `(`) {\n          currentOpenParensCount++;\n        } else if (char === `)`) {\n          // if the exp ends as a call then it should not be considered valid\n          if (i === path.length - 1) {\n            return false;\n          }\n\n          if (! --currentOpenParensCount) {\n            state = stateStack.pop();\n          }\n        }\n\n        break;\n\n      case 3\n      /* inString */\n      :\n        if (char === currentStringType) {\n          state = stateStack.pop();\n          currentStringType = null;\n        }\n\n        break;\n    }\n  }\n\n  return !currentOpenBracketCount && !currentOpenParensCount;\n};\n\nconst isMemberExpressionNode = NOOP;\nconst isMemberExpression = isMemberExpressionBrowser;\n\nfunction getInnerRange(loc, offset, length) {\n  const source = loc.source.slice(offset, offset + length);\n  const newLoc = {\n    source,\n    start: advancePositionWithClone(loc.start, loc.source, offset),\n    end: loc.end\n  };\n\n  if (length != null) {\n    newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\n  }\n\n  return newLoc;\n}\n\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\n  return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\n} // advance by mutation without cloning (for performance reasons), since this\n// gets called a lot in the parser\n\n\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\n  let linesCount = 0;\n  let lastNewLinePos = -1;\n\n  for (let i = 0; i < numberOfCharacters; i++) {\n    if (source.charCodeAt(i) === 10\n    /* newline char code */\n    ) {\n      linesCount++;\n      lastNewLinePos = i;\n    }\n  }\n\n  pos.offset += numberOfCharacters;\n  pos.line += linesCount;\n  pos.column = lastNewLinePos === -1 ? pos.column + numberOfCharacters : numberOfCharacters - lastNewLinePos;\n  return pos;\n}\n\nfunction assert(condition, msg) {\n  /* istanbul ignore if */\n  if (!condition) {\n    throw new Error(msg || `unexpected compiler condition`);\n  }\n}\n\nfunction findDir(node, name, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n\n    if (p.type === 7\n    /* DIRECTIVE */\n    && (allowEmpty || p.exp) && (isString(name) ? p.name === name : name.test(p.name))) {\n      return p;\n    }\n  }\n}\n\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n\n    if (p.type === 6\n    /* ATTRIBUTE */\n    ) {\n      if (dynamicOnly) continue;\n\n      if (p.name === name && (p.value || allowEmpty)) {\n        return p;\n      }\n    } else if (p.name === 'bind' && (p.exp || allowEmpty) && isStaticArgOf(p.arg, name)) {\n      return p;\n    }\n  }\n}\n\nfunction isStaticArgOf(arg, name) {\n  return !!(arg && isStaticExp(arg) && arg.content === name);\n}\n\nfunction hasDynamicKeyVBind(node) {\n  return node.props.some(p => p.type === 7\n  /* DIRECTIVE */\n  && p.name === 'bind' && (!p.arg || // v-bind=\"obj\"\n  p.arg.type !== 4\n  /* SIMPLE_EXPRESSION */\n  || // v-bind:[_ctx.foo]\n  !p.arg.isStatic) // v-bind:[foo]\n  );\n}\n\nfunction isText(node) {\n  return node.type === 5\n  /* INTERPOLATION */\n  || node.type === 2\n  /* TEXT */\n  ;\n}\n\nfunction isVSlot(p) {\n  return p.type === 7\n  /* DIRECTIVE */\n  && p.name === 'slot';\n}\n\nfunction isTemplateNode(node) {\n  return node.type === 1\n  /* ELEMENT */\n  && node.tagType === 3\n  /* TEMPLATE */\n  ;\n}\n\nfunction isSlotOutlet(node) {\n  return node.type === 1\n  /* ELEMENT */\n  && node.tagType === 2\n  /* SLOT */\n  ;\n}\n\nfunction getVNodeHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\n}\n\nfunction getVNodeBlockHelper(ssr, isComponent) {\n  return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\n}\n\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\n\nfunction getUnnormalizedProps(props, callPath = []) {\n  if (props && !isString(props) && props.type === 14\n  /* JS_CALL_EXPRESSION */\n  ) {\n    const callee = props.callee;\n\n    if (!isString(callee) && propsHelperSet.has(callee)) {\n      return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\n    }\n  }\n\n  return [props, callPath];\n}\n\nfunction injectProp(node, prop, context) {\n  let propsWithInjection;\n  /**\r\n   * 1. mergeProps(...)\r\n   * 2. toHandlers(...)\r\n   * 3. normalizeProps(...)\r\n   * 4. normalizeProps(guardReactiveProps(...))\r\n   *\r\n   * we need to get the real props before normalization\r\n   */\n\n  let props = node.type === 13\n  /* VNODE_CALL */\n  ? node.props : node.arguments[2];\n  let callPath = [];\n  let parentCall;\n\n  if (props && !isString(props) && props.type === 14\n  /* JS_CALL_EXPRESSION */\n  ) {\n    const ret = getUnnormalizedProps(props);\n    props = ret[0];\n    callPath = ret[1];\n    parentCall = callPath[callPath.length - 1];\n  }\n\n  if (props == null || isString(props)) {\n    propsWithInjection = createObjectExpression([prop]);\n  } else if (props.type === 14\n  /* JS_CALL_EXPRESSION */\n  ) {\n    // merged props... add ours\n    // only inject key to object literal if it's the first argument so that\n    // if doesn't override user provided keys\n    const first = props.arguments[0];\n\n    if (!isString(first) && first.type === 15\n    /* JS_OBJECT_EXPRESSION */\n    ) {\n      first.properties.unshift(prop);\n    } else {\n      if (props.callee === TO_HANDLERS) {\n        // #2366\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]);\n      } else {\n        props.arguments.unshift(createObjectExpression([prop]));\n      }\n    }\n\n    !propsWithInjection && (propsWithInjection = props);\n  } else if (props.type === 15\n  /* JS_OBJECT_EXPRESSION */\n  ) {\n    let alreadyExists = false; // check existing key to avoid overriding user provided keys\n\n    if (prop.key.type === 4\n    /* SIMPLE_EXPRESSION */\n    ) {\n      const propKeyName = prop.key.content;\n      alreadyExists = props.properties.some(p => p.key.type === 4\n      /* SIMPLE_EXPRESSION */\n      && p.key.content === propKeyName);\n    }\n\n    if (!alreadyExists) {\n      props.properties.unshift(prop);\n    }\n\n    propsWithInjection = props;\n  } else {\n    // single v-bind with expression, return a merged replacement\n    propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [createObjectExpression([prop]), props]); // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\n    // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\n    // the `guardReactiveProps` will no longer be needed\n\n    if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\n      parentCall = callPath[callPath.length - 2];\n    }\n  }\n\n  if (node.type === 13\n  /* VNODE_CALL */\n  ) {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.props = propsWithInjection;\n    }\n  } else {\n    if (parentCall) {\n      parentCall.arguments[0] = propsWithInjection;\n    } else {\n      node.arguments[2] = propsWithInjection;\n    }\n  }\n}\n\nfunction toValidAssetId(name, type) {\n  // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\n  return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\n    return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\n  })}`;\n} // Check if a node contains expressions that reference current context scope ids\n\n\nfunction hasScopeRef(node, ids) {\n  if (!node || Object.keys(ids).length === 0) {\n    return false;\n  }\n\n  switch (node.type) {\n    case 1\n    /* ELEMENT */\n    :\n      for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n\n        if (p.type === 7\n        /* DIRECTIVE */\n        && (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\n          return true;\n        }\n      }\n\n      return node.children.some(c => hasScopeRef(c, ids));\n\n    case 11\n    /* FOR */\n    :\n      if (hasScopeRef(node.source, ids)) {\n        return true;\n      }\n\n      return node.children.some(c => hasScopeRef(c, ids));\n\n    case 9\n    /* IF */\n    :\n      return node.branches.some(b => hasScopeRef(b, ids));\n\n    case 10\n    /* IF_BRANCH */\n    :\n      if (hasScopeRef(node.condition, ids)) {\n        return true;\n      }\n\n      return node.children.some(c => hasScopeRef(c, ids));\n\n    case 4\n    /* SIMPLE_EXPRESSION */\n    :\n      return !node.isStatic && isSimpleIdentifier(node.content) && !!ids[node.content];\n\n    case 8\n    /* COMPOUND_EXPRESSION */\n    :\n      return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\n\n    case 5\n    /* INTERPOLATION */\n    :\n    case 12\n    /* TEXT_CALL */\n    :\n      return hasScopeRef(node.content, ids);\n\n    case 2\n    /* TEXT */\n    :\n    case 3\n    /* COMMENT */\n    :\n      return false;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') ;\n      return false;\n  }\n}\n\nfunction getMemoedVNodeCall(node) {\n  if (node.type === 14\n  /* JS_CALL_EXPRESSION */\n  && node.callee === WITH_MEMO) {\n    return node.arguments[1].returns;\n  } else {\n    return node;\n  }\n}\n\nfunction makeBlock(node, {\n  helper,\n  removeHelper,\n  inSSR\n}) {\n  if (!node.isBlock) {\n    node.isBlock = true;\n    removeHelper(getVNodeHelper(inSSR, node.isComponent));\n    helper(OPEN_BLOCK);\n    helper(getVNodeBlockHelper(inSSR, node.isComponent));\n  }\n}\n\nconst deprecationData = {\n  [\"COMPILER_IS_ON_ELEMENT\"\n  /* COMPILER_IS_ON_ELEMENT */\n  ]: {\n    message: `Platform-native elements with \"is\" prop will no longer be ` + `treated as components in Vue 3 unless the \"is\" value is explicitly ` + `prefixed with \"vue:\".`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\n  },\n  [\"COMPILER_V_BIND_SYNC\"\n  /* COMPILER_V_BIND_SYNC */\n  ]: {\n    message: key => `.sync modifier for v-bind has been removed. Use v-model with ` + `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` + `\\`v-model:${key}\\`.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\n  },\n  [\"COMPILER_V_BIND_PROP\"\n  /* COMPILER_V_BIND_PROP */\n  ]: {\n    message: `.prop modifier for v-bind has been removed and no longer necessary. ` + `Vue 3 will automatically set a binding as DOM property when appropriate.`\n  },\n  [\"COMPILER_V_BIND_OBJECT_ORDER\"\n  /* COMPILER_V_BIND_OBJECT_ORDER */\n  ]: {\n    message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` + `object spread: it will now overwrite an existing non-mergeable attribute ` + `that appears before v-bind in the case of conflict. ` + `To retain 2.x behavior, move v-bind to make it the first attribute. ` + `You can also suppress this warning if the usage is intended.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\n  },\n  [\"COMPILER_V_ON_NATIVE\"\n  /* COMPILER_V_ON_NATIVE */\n  ]: {\n    message: `.native modifier for v-on has been removed as is no longer necessary.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\n  },\n  [\"COMPILER_V_IF_V_FOR_PRECEDENCE\"\n  /* COMPILER_V_IF_V_FOR_PRECEDENCE */\n  ]: {\n    message: `v-if / v-for precedence when used on the same element has changed ` + `in Vue 3: v-if now takes higher precedence and will no longer have ` + `access to v-for scope variables. It is best to avoid the ambiguity ` + `with <template> tags or use a computed property that filters v-for ` + `data source.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\n  },\n  [\"COMPILER_NATIVE_TEMPLATE\"\n  /* COMPILER_NATIVE_TEMPLATE */\n  ]: {\n    message: `<template> with no special directives will render as a native template ` + `element instead of its inner content in Vue 3.`\n  },\n  [\"COMPILER_INLINE_TEMPLATE\"\n  /* COMPILER_INLINE_TEMPLATE */\n  ]: {\n    message: `\"inline-template\" has been removed in Vue 3.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\n  },\n  [\"COMPILER_FILTER\"\n  /* COMPILER_FILTERS */\n  ]: {\n    message: `filters have been removed in Vue 3. ` + `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` + `Use method calls or computed properties instead.`,\n    link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\n  }\n};\n\nfunction getCompatValue(key, context) {\n  const config = context.options ? context.options.compatConfig : context.compatConfig;\n  const value = config && config[key];\n\n  if (key === 'MODE') {\n    return value || 3; // compiler defaults to v3 behavior\n  } else {\n    return value;\n  }\n}\n\nfunction isCompatEnabled(key, context) {\n  const mode = getCompatValue('MODE', context);\n  const value = getCompatValue(key, context); // in v3 mode, only enable if explicitly set to true\n  // otherwise enable for any non-false value\n\n  return mode === 3 ? value === true : value !== false;\n}\n\nfunction checkCompatEnabled(key, context, loc, ...args) {\n  const enabled = isCompatEnabled(key, context);\n\n  if (process.env.NODE_ENV !== 'production' && enabled) {\n    warnDeprecation(key, context, loc, ...args);\n  }\n\n  return enabled;\n}\n\nfunction warnDeprecation(key, context, loc, ...args) {\n  const val = getCompatValue(key, context);\n\n  if (val === 'suppress-warning') {\n    return;\n  }\n\n  const {\n    message,\n    link\n  } = deprecationData[key];\n  const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\n  const err = new SyntaxError(msg);\n  err.code = key;\n  if (loc) err.loc = loc;\n  context.onWarn(err);\n} // The default decoder only provides escapes for characters reserved as part of\n// the template syntax, and is only used if the custom renderer did not provide\n// a platform-specific decoder.\n\n\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\nconst decodeMap = {\n  gt: '>',\n  lt: '<',\n  amp: '&',\n  apos: \"'\",\n  quot: '\"'\n};\nconst defaultParserOptions = {\n  delimiters: [`{{`, `}}`],\n  getNamespace: () => 0\n  /* HTML */\n  ,\n  getTextMode: () => 0\n  /* DATA */\n  ,\n  isVoidTag: NO,\n  isPreTag: NO,\n  isCustomElement: NO,\n  decodeEntities: rawText => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\n  onError: defaultOnError,\n  onWarn: defaultOnWarn,\n  comments: process.env.NODE_ENV !== 'production'\n};\n\nfunction baseParse(content, options = {}) {\n  const context = createParserContext(content, options);\n  const start = getCursor(context);\n  return createRoot(parseChildren(context, 0\n  /* DATA */\n  , []), getSelection(context, start));\n}\n\nfunction createParserContext(content, rawOptions) {\n  const options = extend({}, defaultParserOptions);\n  let key;\n\n  for (key in rawOptions) {\n    // @ts-ignore\n    options[key] = rawOptions[key] === undefined ? defaultParserOptions[key] : rawOptions[key];\n  }\n\n  return {\n    options,\n    column: 1,\n    line: 1,\n    offset: 0,\n    originalSource: content,\n    source: content,\n    inPre: false,\n    inVPre: false,\n    onWarn: options.onWarn\n  };\n}\n\nfunction parseChildren(context, mode, ancestors) {\n  const parent = last(ancestors);\n  const ns = parent ? parent.ns : 0\n  /* HTML */\n  ;\n  const nodes = [];\n\n  while (!isEnd(context, mode, ancestors)) {\n    const s = context.source;\n    let node = undefined;\n\n    if (mode === 0\n    /* DATA */\n    || mode === 1\n    /* RCDATA */\n    ) {\n      if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\n        // '{{'\n        node = parseInterpolation(context, mode);\n      } else if (mode === 0\n      /* DATA */\n      && s[0] === '<') {\n        // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\n        if (s.length === 1) {\n          emitError(context, 5\n          /* EOF_BEFORE_TAG_NAME */\n          , 1);\n        } else if (s[1] === '!') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n          if (startsWith(s, '<!--')) {\n            node = parseComment(context);\n          } else if (startsWith(s, '<!DOCTYPE')) {\n            // Ignore DOCTYPE by a limitation.\n            node = parseBogusComment(context);\n          } else if (startsWith(s, '<![CDATA[')) {\n            if (ns !== 0\n            /* HTML */\n            ) {\n              node = parseCDATA(context, ancestors);\n            } else {\n              emitError(context, 1\n              /* CDATA_IN_HTML_CONTENT */\n              );\n              node = parseBogusComment(context);\n            }\n          } else {\n            emitError(context, 11\n            /* INCORRECTLY_OPENED_COMMENT */\n            );\n            node = parseBogusComment(context);\n          }\n        } else if (s[1] === '/') {\n          // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\n          if (s.length === 2) {\n            emitError(context, 5\n            /* EOF_BEFORE_TAG_NAME */\n            , 2);\n          } else if (s[2] === '>') {\n            emitError(context, 14\n            /* MISSING_END_TAG_NAME */\n            , 2);\n            advanceBy(context, 3);\n            continue;\n          } else if (/[a-z]/i.test(s[2])) {\n            emitError(context, 23\n            /* X_INVALID_END_TAG */\n            );\n            parseTag(context, 1\n            /* End */\n            , parent);\n            continue;\n          } else {\n            emitError(context, 12\n            /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */\n            , 2);\n            node = parseBogusComment(context);\n          }\n        } else if (/[a-z]/i.test(s[1])) {\n          node = parseElement(context, ancestors); // 2.x <template> with no directive compat\n\n          if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\"\n          /* COMPILER_NATIVE_TEMPLATE */\n          , context) && node && node.tag === 'template' && !node.props.some(p => p.type === 7\n          /* DIRECTIVE */\n          && isSpecialTemplateDirective(p.name))) {\n            process.env.NODE_ENV !== 'production' && warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\"\n            /* COMPILER_NATIVE_TEMPLATE */\n            , context, node.loc);\n            node = node.children;\n          }\n        } else if (s[1] === '?') {\n          emitError(context, 21\n          /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */\n          , 1);\n          node = parseBogusComment(context);\n        } else {\n          emitError(context, 12\n          /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */\n          , 1);\n        }\n      }\n    }\n\n    if (!node) {\n      node = parseText(context, mode);\n    }\n\n    if (isArray(node)) {\n      for (let i = 0; i < node.length; i++) {\n        pushNode(nodes, node[i]);\n      }\n    } else {\n      pushNode(nodes, node);\n    }\n  } // Whitespace handling strategy like v2\n\n\n  let removedWhitespace = false;\n\n  if (mode !== 2\n  /* RAWTEXT */\n  && mode !== 1\n  /* RCDATA */\n  ) {\n    const shouldCondense = context.options.whitespace !== 'preserve';\n\n    for (let i = 0; i < nodes.length; i++) {\n      const node = nodes[i];\n\n      if (!context.inPre && node.type === 2\n      /* TEXT */\n      ) {\n        if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\n          const prev = nodes[i - 1];\n          const next = nodes[i + 1]; // Remove if:\n          // - the whitespace is the first or last node, or:\n          // - (condense mode) the whitespace is adjacent to a comment, or:\n          // - (condense mode) the whitespace is between two elements AND contains newline\n\n          if (!prev || !next || shouldCondense && (prev.type === 3\n          /* COMMENT */\n          || next.type === 3\n          /* COMMENT */\n          || prev.type === 1\n          /* ELEMENT */\n          && next.type === 1\n          /* ELEMENT */\n          && /[\\r\\n]/.test(node.content))) {\n            removedWhitespace = true;\n            nodes[i] = null;\n          } else {\n            // Otherwise, the whitespace is condensed into a single space\n            node.content = ' ';\n          }\n        } else if (shouldCondense) {\n          // in condense mode, consecutive whitespaces in text are condensed\n          // down to a single space.\n          node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\n        }\n      } // Remove comment nodes if desired by configuration.\n      else if (node.type === 3\n      /* COMMENT */\n      && !context.options.comments) {\n        removedWhitespace = true;\n        nodes[i] = null;\n      }\n    }\n\n    if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\n      // remove leading newline per html spec\n      // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\n      const first = nodes[0];\n\n      if (first && first.type === 2\n      /* TEXT */\n      ) {\n        first.content = first.content.replace(/^\\r?\\n/, '');\n      }\n    }\n  }\n\n  return removedWhitespace ? nodes.filter(Boolean) : nodes;\n}\n\nfunction pushNode(nodes, node) {\n  if (node.type === 2\n  /* TEXT */\n  ) {\n    const prev = last(nodes); // Merge if both this and the previous node are text and those are\n    // consecutive. This happens for cases like \"a < b\".\n\n    if (prev && prev.type === 2\n    /* TEXT */\n    && prev.loc.end.offset === node.loc.start.offset) {\n      prev.content += node.content;\n      prev.loc.end = node.loc.end;\n      prev.loc.source += node.loc.source;\n      return;\n    }\n  }\n\n  nodes.push(node);\n}\n\nfunction parseCDATA(context, ancestors) {\n  advanceBy(context, 9);\n  const nodes = parseChildren(context, 3\n  /* CDATA */\n  , ancestors);\n\n  if (context.source.length === 0) {\n    emitError(context, 6\n    /* EOF_IN_CDATA */\n    );\n  } else {\n    advanceBy(context, 3);\n  }\n\n  return nodes;\n}\n\nfunction parseComment(context) {\n  const start = getCursor(context);\n  let content; // Regular comment.\n\n  const match = /--(\\!)?>/.exec(context.source);\n\n  if (!match) {\n    content = context.source.slice(4);\n    advanceBy(context, context.source.length);\n    emitError(context, 7\n    /* EOF_IN_COMMENT */\n    );\n  } else {\n    if (match.index <= 3) {\n      emitError(context, 0\n      /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */\n      );\n    }\n\n    if (match[1]) {\n      emitError(context, 10\n      /* INCORRECTLY_CLOSED_COMMENT */\n      );\n    }\n\n    content = context.source.slice(4, match.index); // Advancing with reporting nested comments.\n\n    const s = context.source.slice(0, match.index);\n    let prevIndex = 1,\n        nestedIndex = 0;\n\n    while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\n      advanceBy(context, nestedIndex - prevIndex + 1);\n\n      if (nestedIndex + 4 < s.length) {\n        emitError(context, 16\n        /* NESTED_COMMENT */\n        );\n      }\n\n      prevIndex = nestedIndex + 1;\n    }\n\n    advanceBy(context, match.index + match[0].length - prevIndex + 1);\n  }\n\n  return {\n    type: 3\n    /* COMMENT */\n    ,\n    content,\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseBogusComment(context) {\n  const start = getCursor(context);\n  const contentStart = context.source[1] === '?' ? 1 : 2;\n  let content;\n  const closeIndex = context.source.indexOf('>');\n\n  if (closeIndex === -1) {\n    content = context.source.slice(contentStart);\n    advanceBy(context, context.source.length);\n  } else {\n    content = context.source.slice(contentStart, closeIndex);\n    advanceBy(context, closeIndex + 1);\n  }\n\n  return {\n    type: 3\n    /* COMMENT */\n    ,\n    content,\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseElement(context, ancestors) {\n  // Start tag.\n  const wasInPre = context.inPre;\n  const wasInVPre = context.inVPre;\n  const parent = last(ancestors);\n  const element = parseTag(context, 0\n  /* Start */\n  , parent);\n  const isPreBoundary = context.inPre && !wasInPre;\n  const isVPreBoundary = context.inVPre && !wasInVPre;\n\n  if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\n    // #4030 self-closing <pre> tag\n    if (isPreBoundary) {\n      context.inPre = false;\n    }\n\n    if (isVPreBoundary) {\n      context.inVPre = false;\n    }\n\n    return element;\n  } // Children.\n\n\n  ancestors.push(element);\n  const mode = context.options.getTextMode(element, parent);\n  const children = parseChildren(context, mode, ancestors);\n  ancestors.pop(); // 2.x inline-template compat\n\n  {\n    const inlineTemplateProp = element.props.find(p => p.type === 6\n    /* ATTRIBUTE */\n    && p.name === 'inline-template');\n\n    if (inlineTemplateProp && checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\"\n    /* COMPILER_INLINE_TEMPLATE */\n    , context, inlineTemplateProp.loc)) {\n      const loc = getSelection(context, element.loc.end);\n      inlineTemplateProp.value = {\n        type: 2\n        /* TEXT */\n        ,\n        content: loc.source,\n        loc\n      };\n    }\n  }\n  element.children = children; // End tag.\n\n  if (startsWithEndTagOpen(context.source, element.tag)) {\n    parseTag(context, 1\n    /* End */\n    , parent);\n  } else {\n    emitError(context, 24\n    /* X_MISSING_END_TAG */\n    , 0, element.loc.start);\n\n    if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\n      const first = children[0];\n\n      if (first && startsWith(first.loc.source, '<!--')) {\n        emitError(context, 8\n        /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */\n        );\n      }\n    }\n  }\n\n  element.loc = getSelection(context, element.loc.start);\n\n  if (isPreBoundary) {\n    context.inPre = false;\n  }\n\n  if (isVPreBoundary) {\n    context.inVPre = false;\n  }\n\n  return element;\n}\n\nconst isSpecialTemplateDirective = /*#__PURE__*/makeMap(`if,else,else-if,for,slot`);\n\nfunction parseTag(context, type, parent) {\n  // Tag open.\n  const start = getCursor(context);\n  const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\n  const tag = match[1];\n  const ns = context.options.getNamespace(tag, parent);\n  advanceBy(context, match[0].length);\n  advanceSpaces(context); // save current state in case we need to re-parse attributes with v-pre\n\n  const cursor = getCursor(context);\n  const currentSource = context.source; // check <pre> tag\n\n  if (context.options.isPreTag(tag)) {\n    context.inPre = true;\n  } // Attributes.\n\n\n  let props = parseAttributes(context, type); // check v-pre\n\n  if (type === 0\n  /* Start */\n  && !context.inVPre && props.some(p => p.type === 7\n  /* DIRECTIVE */\n  && p.name === 'pre')) {\n    context.inVPre = true; // reset context\n\n    extend(context, cursor);\n    context.source = currentSource; // re-parse attrs and filter out v-pre itself\n\n    props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\n  } // Tag close.\n\n\n  let isSelfClosing = false;\n\n  if (context.source.length === 0) {\n    emitError(context, 9\n    /* EOF_IN_TAG */\n    );\n  } else {\n    isSelfClosing = startsWith(context.source, '/>');\n\n    if (type === 1\n    /* End */\n    && isSelfClosing) {\n      emitError(context, 4\n      /* END_TAG_WITH_TRAILING_SOLIDUS */\n      );\n    }\n\n    advanceBy(context, isSelfClosing ? 2 : 1);\n  }\n\n  if (type === 1\n  /* End */\n  ) {\n    return;\n  } // 2.x deprecation checks\n\n\n  if (process.env.NODE_ENV !== 'production' && isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\"\n  /* COMPILER_V_IF_V_FOR_PRECEDENCE */\n  , context)) {\n    let hasIf = false;\n    let hasFor = false;\n\n    for (let i = 0; i < props.length; i++) {\n      const p = props[i];\n\n      if (p.type === 7\n      /* DIRECTIVE */\n      ) {\n        if (p.name === 'if') {\n          hasIf = true;\n        } else if (p.name === 'for') {\n          hasFor = true;\n        }\n      }\n\n      if (hasIf && hasFor) {\n        warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\"\n        /* COMPILER_V_IF_V_FOR_PRECEDENCE */\n        , context, getSelection(context, start));\n        break;\n      }\n    }\n  }\n\n  let tagType = 0\n  /* ELEMENT */\n  ;\n\n  if (!context.inVPre) {\n    if (tag === 'slot') {\n      tagType = 2\n      /* SLOT */\n      ;\n    } else if (tag === 'template') {\n      if (props.some(p => p.type === 7\n      /* DIRECTIVE */\n      && isSpecialTemplateDirective(p.name))) {\n        tagType = 3\n        /* TEMPLATE */\n        ;\n      }\n    } else if (isComponent(tag, props, context)) {\n      tagType = 1\n      /* COMPONENT */\n      ;\n    }\n  }\n\n  return {\n    type: 1\n    /* ELEMENT */\n    ,\n    ns,\n    tag,\n    tagType,\n    props,\n    isSelfClosing,\n    children: [],\n    loc: getSelection(context, start),\n    codegenNode: undefined // to be created during transform phase\n\n  };\n}\n\nfunction isComponent(tag, props, context) {\n  const options = context.options;\n\n  if (options.isCustomElement(tag)) {\n    return false;\n  }\n\n  if (tag === 'component' || /^[A-Z]/.test(tag) || isCoreComponent(tag) || options.isBuiltInComponent && options.isBuiltInComponent(tag) || options.isNativeTag && !options.isNativeTag(tag)) {\n    return true;\n  } // at this point the tag should be a native tag, but check for potential \"is\"\n  // casting\n\n\n  for (let i = 0; i < props.length; i++) {\n    const p = props[i];\n\n    if (p.type === 6\n    /* ATTRIBUTE */\n    ) {\n      if (p.name === 'is' && p.value) {\n        if (p.value.content.startsWith('vue:')) {\n          return true;\n        } else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n        /* COMPILER_IS_ON_ELEMENT */\n        , context, p.loc)) {\n          return true;\n        }\n      }\n    } else {\n      // directive\n      // v-is (TODO Deprecate)\n      if (p.name === 'is') {\n        return true;\n      } else if ( // :is on plain element - only treat as component in compat mode\n      p.name === 'bind' && isStaticArgOf(p.arg, 'is') && true && checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n      /* COMPILER_IS_ON_ELEMENT */\n      , context, p.loc)) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction parseAttributes(context, type) {\n  const props = [];\n  const attributeNames = new Set();\n\n  while (context.source.length > 0 && !startsWith(context.source, '>') && !startsWith(context.source, '/>')) {\n    if (startsWith(context.source, '/')) {\n      emitError(context, 22\n      /* UNEXPECTED_SOLIDUS_IN_TAG */\n      );\n      advanceBy(context, 1);\n      advanceSpaces(context);\n      continue;\n    }\n\n    if (type === 1\n    /* End */\n    ) {\n      emitError(context, 3\n      /* END_TAG_WITH_ATTRIBUTES */\n      );\n    }\n\n    const attr = parseAttribute(context, attributeNames); // Trim whitespace between class\n    // https://github.com/vuejs/core/issues/4251\n\n    if (attr.type === 6\n    /* ATTRIBUTE */\n    && attr.value && attr.name === 'class') {\n      attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\n    }\n\n    if (type === 0\n    /* Start */\n    ) {\n      props.push(attr);\n    }\n\n    if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\n      emitError(context, 15\n      /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */\n      );\n    }\n\n    advanceSpaces(context);\n  }\n\n  return props;\n}\n\nfunction parseAttribute(context, nameSet) {\n  // Name.\n  const start = getCursor(context);\n  const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\n  const name = match[0];\n\n  if (nameSet.has(name)) {\n    emitError(context, 2\n    /* DUPLICATE_ATTRIBUTE */\n    );\n  }\n\n  nameSet.add(name);\n\n  if (name[0] === '=') {\n    emitError(context, 19\n    /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */\n    );\n  }\n\n  {\n    const pattern = /[\"'<]/g;\n    let m;\n\n    while (m = pattern.exec(name)) {\n      emitError(context, 17\n      /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */\n      , m.index);\n    }\n  }\n  advanceBy(context, name.length); // Value\n\n  let value = undefined;\n\n  if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\n    advanceSpaces(context);\n    advanceBy(context, 1);\n    advanceSpaces(context);\n    value = parseAttributeValue(context);\n\n    if (!value) {\n      emitError(context, 13\n      /* MISSING_ATTRIBUTE_VALUE */\n      );\n    }\n  }\n\n  const loc = getSelection(context, start);\n\n  if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\n    const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\n    let isPropShorthand = startsWith(name, '.');\n    let dirName = match[1] || (isPropShorthand || startsWith(name, ':') ? 'bind' : startsWith(name, '@') ? 'on' : 'slot');\n    let arg;\n\n    if (match[2]) {\n      const isSlot = dirName === 'slot';\n      const startOffset = name.lastIndexOf(match[2]);\n      const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + (isSlot && match[3] || '').length));\n      let content = match[2];\n      let isStatic = true;\n\n      if (content.startsWith('[')) {\n        isStatic = false;\n\n        if (!content.endsWith(']')) {\n          emitError(context, 27\n          /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */\n          );\n          content = content.slice(1);\n        } else {\n          content = content.slice(1, content.length - 1);\n        }\n      } else if (isSlot) {\n        // #1241 special case for v-slot: vuetify relies extensively on slot\n        // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\n        // supports such usage so we are keeping it consistent with 2.x.\n        content += match[3] || '';\n      }\n\n      arg = {\n        type: 4\n        /* SIMPLE_EXPRESSION */\n        ,\n        content,\n        isStatic,\n        constType: isStatic ? 3\n        /* CAN_STRINGIFY */\n        : 0\n        /* NOT_CONSTANT */\n        ,\n        loc\n      };\n    }\n\n    if (value && value.isQuoted) {\n      const valueLoc = value.loc;\n      valueLoc.start.offset++;\n      valueLoc.start.column++;\n      valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\n      valueLoc.source = valueLoc.source.slice(1, -1);\n    }\n\n    const modifiers = match[3] ? match[3].slice(1).split('.') : [];\n    if (isPropShorthand) modifiers.push('prop'); // 2.x compat v-bind:foo.sync -> v-model:foo\n\n    if (dirName === 'bind' && arg) {\n      if (modifiers.includes('sync') && checkCompatEnabled(\"COMPILER_V_BIND_SYNC\"\n      /* COMPILER_V_BIND_SYNC */\n      , context, loc, arg.loc.source)) {\n        dirName = 'model';\n        modifiers.splice(modifiers.indexOf('sync'), 1);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && modifiers.includes('prop')) {\n        checkCompatEnabled(\"COMPILER_V_BIND_PROP\"\n        /* COMPILER_V_BIND_PROP */\n        , context, loc);\n      }\n    }\n\n    return {\n      type: 7\n      /* DIRECTIVE */\n      ,\n      name: dirName,\n      exp: value && {\n        type: 4\n        /* SIMPLE_EXPRESSION */\n        ,\n        content: value.content,\n        isStatic: false,\n        // Treat as non-constant by default. This can be potentially set to\n        // other values by `transformExpression` to make it eligible for hoisting.\n        constType: 0\n        /* NOT_CONSTANT */\n        ,\n        loc: value.loc\n      },\n      arg,\n      modifiers,\n      loc\n    };\n  } // missing directive name or illegal directive name\n\n\n  if (!context.inVPre && startsWith(name, 'v-')) {\n    emitError(context, 26\n    /* X_MISSING_DIRECTIVE_NAME */\n    );\n  }\n\n  return {\n    type: 6\n    /* ATTRIBUTE */\n    ,\n    name,\n    value: value && {\n      type: 2\n      /* TEXT */\n      ,\n      content: value.content,\n      loc: value.loc\n    },\n    loc\n  };\n}\n\nfunction parseAttributeValue(context) {\n  const start = getCursor(context);\n  let content;\n  const quote = context.source[0];\n  const isQuoted = quote === `\"` || quote === `'`;\n\n  if (isQuoted) {\n    // Quoted value.\n    advanceBy(context, 1);\n    const endIndex = context.source.indexOf(quote);\n\n    if (endIndex === -1) {\n      content = parseTextData(context, context.source.length, 4\n      /* ATTRIBUTE_VALUE */\n      );\n    } else {\n      content = parseTextData(context, endIndex, 4\n      /* ATTRIBUTE_VALUE */\n      );\n      advanceBy(context, 1);\n    }\n  } else {\n    // Unquoted\n    const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\n\n    if (!match) {\n      return undefined;\n    }\n\n    const unexpectedChars = /[\"'<=`]/g;\n    let m;\n\n    while (m = unexpectedChars.exec(match[0])) {\n      emitError(context, 18\n      /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */\n      , m.index);\n    }\n\n    content = parseTextData(context, match[0].length, 4\n    /* ATTRIBUTE_VALUE */\n    );\n  }\n\n  return {\n    content,\n    isQuoted,\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseInterpolation(context, mode) {\n  const [open, close] = context.options.delimiters;\n  const closeIndex = context.source.indexOf(close, open.length);\n\n  if (closeIndex === -1) {\n    emitError(context, 25\n    /* X_MISSING_INTERPOLATION_END */\n    );\n    return undefined;\n  }\n\n  const start = getCursor(context);\n  advanceBy(context, open.length);\n  const innerStart = getCursor(context);\n  const innerEnd = getCursor(context);\n  const rawContentLength = closeIndex - open.length;\n  const rawContent = context.source.slice(0, rawContentLength);\n  const preTrimContent = parseTextData(context, rawContentLength, mode);\n  const content = preTrimContent.trim();\n  const startOffset = preTrimContent.indexOf(content);\n\n  if (startOffset > 0) {\n    advancePositionWithMutation(innerStart, rawContent, startOffset);\n  }\n\n  const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\n  advancePositionWithMutation(innerEnd, rawContent, endOffset);\n  advanceBy(context, close.length);\n  return {\n    type: 5\n    /* INTERPOLATION */\n    ,\n    content: {\n      type: 4\n      /* SIMPLE_EXPRESSION */\n      ,\n      isStatic: false,\n      // Set `isConstant` to false by default and will decide in transformExpression\n      constType: 0\n      /* NOT_CONSTANT */\n      ,\n      content,\n      loc: getSelection(context, innerStart, innerEnd)\n    },\n    loc: getSelection(context, start)\n  };\n}\n\nfunction parseText(context, mode) {\n  const endTokens = mode === 3\n  /* CDATA */\n  ? [']]>'] : ['<', context.options.delimiters[0]];\n  let endIndex = context.source.length;\n\n  for (let i = 0; i < endTokens.length; i++) {\n    const index = context.source.indexOf(endTokens[i], 1);\n\n    if (index !== -1 && endIndex > index) {\n      endIndex = index;\n    }\n  }\n\n  const start = getCursor(context);\n  const content = parseTextData(context, endIndex, mode);\n  return {\n    type: 2\n    /* TEXT */\n    ,\n    content,\n    loc: getSelection(context, start)\n  };\n}\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\n\n\nfunction parseTextData(context, length, mode) {\n  const rawText = context.source.slice(0, length);\n  advanceBy(context, length);\n\n  if (mode === 2\n  /* RAWTEXT */\n  || mode === 3\n  /* CDATA */\n  || !rawText.includes('&')) {\n    return rawText;\n  } else {\n    // DATA or RCDATA containing \"&\"\". Entity decoding required.\n    return context.options.decodeEntities(rawText, mode === 4\n    /* ATTRIBUTE_VALUE */\n    );\n  }\n}\n\nfunction getCursor(context) {\n  const {\n    column,\n    line,\n    offset\n  } = context;\n  return {\n    column,\n    line,\n    offset\n  };\n}\n\nfunction getSelection(context, start, end) {\n  end = end || getCursor(context);\n  return {\n    start,\n    end,\n    source: context.originalSource.slice(start.offset, end.offset)\n  };\n}\n\nfunction last(xs) {\n  return xs[xs.length - 1];\n}\n\nfunction startsWith(source, searchString) {\n  return source.startsWith(searchString);\n}\n\nfunction advanceBy(context, numberOfCharacters) {\n  const {\n    source\n  } = context;\n  advancePositionWithMutation(context, source, numberOfCharacters);\n  context.source = source.slice(numberOfCharacters);\n}\n\nfunction advanceSpaces(context) {\n  const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\n\n  if (match) {\n    advanceBy(context, match[0].length);\n  }\n}\n\nfunction getNewPosition(context, start, numberOfCharacters) {\n  return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\n}\n\nfunction emitError(context, code, offset, loc = getCursor(context)) {\n  if (offset) {\n    loc.offset += offset;\n    loc.column += offset;\n  }\n\n  context.options.onError(createCompilerError(code, {\n    start: loc,\n    end: loc,\n    source: ''\n  }));\n}\n\nfunction isEnd(context, mode, ancestors) {\n  const s = context.source;\n\n  switch (mode) {\n    case 0\n    /* DATA */\n    :\n      if (startsWith(s, '</')) {\n        // TODO: probably bad performance\n        for (let i = ancestors.length - 1; i >= 0; --i) {\n          if (startsWithEndTagOpen(s, ancestors[i].tag)) {\n            return true;\n          }\n        }\n      }\n\n      break;\n\n    case 1\n    /* RCDATA */\n    :\n    case 2\n    /* RAWTEXT */\n    :\n      {\n        const parent = last(ancestors);\n\n        if (parent && startsWithEndTagOpen(s, parent.tag)) {\n          return true;\n        }\n\n        break;\n      }\n\n    case 3\n    /* CDATA */\n    :\n      if (startsWith(s, ']]>')) {\n        return true;\n      }\n\n      break;\n  }\n\n  return !s;\n}\n\nfunction startsWithEndTagOpen(source, tag) {\n  return startsWith(source, '</') && source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() && /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>');\n}\n\nfunction hoistStatic(root, context) {\n  walk(root, context, // Root node is unfortunately non-hoistable due to potential parent\n  // fallthrough attributes.\n  isSingleElementRoot(root, root.children[0]));\n}\n\nfunction isSingleElementRoot(root, child) {\n  const {\n    children\n  } = root;\n  return children.length === 1 && child.type === 1\n  /* ELEMENT */\n  && !isSlotOutlet(child);\n}\n\nfunction walk(node, context, doNotHoistNode = false) {\n  const {\n    children\n  } = node;\n  const originalCount = children.length;\n  let hoistedCount = 0;\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i]; // only plain elements & text calls are eligible for hoisting.\n\n    if (child.type === 1\n    /* ELEMENT */\n    && child.tagType === 0\n    /* ELEMENT */\n    ) {\n      const constantType = doNotHoistNode ? 0\n      /* NOT_CONSTANT */\n      : getConstantType(child, context);\n\n      if (constantType > 0\n      /* NOT_CONSTANT */\n      ) {\n        if (constantType >= 2\n        /* CAN_HOIST */\n        ) {\n          child.codegenNode.patchFlag = -1\n          /* HOISTED */\n          + (process.env.NODE_ENV !== 'production' ? ` /* HOISTED */` : ``);\n          child.codegenNode = context.hoist(child.codegenNode);\n          hoistedCount++;\n          continue;\n        }\n      } else {\n        // node may contain dynamic children, but its props may be eligible for\n        // hoisting.\n        const codegenNode = child.codegenNode;\n\n        if (codegenNode.type === 13\n        /* VNODE_CALL */\n        ) {\n          const flag = getPatchFlag(codegenNode);\n\n          if ((!flag || flag === 512\n          /* NEED_PATCH */\n          || flag === 1\n          /* TEXT */\n          ) && getGeneratedPropsConstantType(child, context) >= 2\n          /* CAN_HOIST */\n          ) {\n            const props = getNodeProps(child);\n\n            if (props) {\n              codegenNode.props = context.hoist(props);\n            }\n          }\n\n          if (codegenNode.dynamicProps) {\n            codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\n          }\n        }\n      }\n    } else if (child.type === 12\n    /* TEXT_CALL */\n    && getConstantType(child.content, context) >= 2\n    /* CAN_HOIST */\n    ) {\n      child.codegenNode = context.hoist(child.codegenNode);\n      hoistedCount++;\n    } // walk further\n\n\n    if (child.type === 1\n    /* ELEMENT */\n    ) {\n      const isComponent = child.tagType === 1\n      /* COMPONENT */\n      ;\n\n      if (isComponent) {\n        context.scopes.vSlot++;\n      }\n\n      walk(child, context);\n\n      if (isComponent) {\n        context.scopes.vSlot--;\n      }\n    } else if (child.type === 11\n    /* FOR */\n    ) {\n      // Do not hoist v-for single child because it has to be a block\n      walk(child, context, child.children.length === 1);\n    } else if (child.type === 9\n    /* IF */\n    ) {\n      for (let i = 0; i < child.branches.length; i++) {\n        // Do not hoist v-if single child because it has to be a block\n        walk(child.branches[i], context, child.branches[i].children.length === 1);\n      }\n    }\n  }\n\n  if (hoistedCount && context.transformHoist) {\n    context.transformHoist(children, context, node);\n  } // all children were hoisted - the entire children array is hoistable.\n\n\n  if (hoistedCount && hoistedCount === originalCount && node.type === 1\n  /* ELEMENT */\n  && node.tagType === 0\n  /* ELEMENT */\n  && node.codegenNode && node.codegenNode.type === 13\n  /* VNODE_CALL */\n  && isArray(node.codegenNode.children)) {\n    node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\n  }\n}\n\nfunction getConstantType(node, context) {\n  const {\n    constantCache\n  } = context;\n\n  switch (node.type) {\n    case 1\n    /* ELEMENT */\n    :\n      if (node.tagType !== 0\n      /* ELEMENT */\n      ) {\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      const cached = constantCache.get(node);\n\n      if (cached !== undefined) {\n        return cached;\n      }\n\n      const codegenNode = node.codegenNode;\n\n      if (codegenNode.type !== 13\n      /* VNODE_CALL */\n      ) {\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      if (codegenNode.isBlock && node.tag !== 'svg' && node.tag !== 'foreignObject') {\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      const flag = getPatchFlag(codegenNode);\n\n      if (!flag) {\n        let returnType = 3\n        /* CAN_STRINGIFY */\n        ; // Element itself has no patch flag. However we still need to check:\n        // 1. Even for a node with no patch flag, it is possible for it to contain\n        // non-hoistable expressions that refers to scope variables, e.g. compiler\n        // injected keys or cached event handlers. Therefore we need to always\n        // check the codegenNode's props to be sure.\n\n        const generatedPropsType = getGeneratedPropsConstantType(node, context);\n\n        if (generatedPropsType === 0\n        /* NOT_CONSTANT */\n        ) {\n          constantCache.set(node, 0\n          /* NOT_CONSTANT */\n          );\n          return 0\n          /* NOT_CONSTANT */\n          ;\n        }\n\n        if (generatedPropsType < returnType) {\n          returnType = generatedPropsType;\n        } // 2. its children.\n\n\n        for (let i = 0; i < node.children.length; i++) {\n          const childType = getConstantType(node.children[i], context);\n\n          if (childType === 0\n          /* NOT_CONSTANT */\n          ) {\n            constantCache.set(node, 0\n            /* NOT_CONSTANT */\n            );\n            return 0\n            /* NOT_CONSTANT */\n            ;\n          }\n\n          if (childType < returnType) {\n            returnType = childType;\n          }\n        } // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\n        // type, check if any of the props can cause the type to be lowered\n        // we can skip can_patch because it's guaranteed by the absence of a\n        // patchFlag.\n\n\n        if (returnType > 1\n        /* CAN_SKIP_PATCH */\n        ) {\n          for (let i = 0; i < node.props.length; i++) {\n            const p = node.props[i];\n\n            if (p.type === 7\n            /* DIRECTIVE */\n            && p.name === 'bind' && p.exp) {\n              const expType = getConstantType(p.exp, context);\n\n              if (expType === 0\n              /* NOT_CONSTANT */\n              ) {\n                constantCache.set(node, 0\n                /* NOT_CONSTANT */\n                );\n                return 0\n                /* NOT_CONSTANT */\n                ;\n              }\n\n              if (expType < returnType) {\n                returnType = expType;\n              }\n            }\n          }\n        } // only svg/foreignObject could be block here, however if they are\n        // static then they don't need to be blocks since there will be no\n        // nested updates.\n\n\n        if (codegenNode.isBlock) {\n          context.removeHelper(OPEN_BLOCK);\n          context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\n          codegenNode.isBlock = false;\n          context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\n        }\n\n        constantCache.set(node, returnType);\n        return returnType;\n      } else {\n        constantCache.set(node, 0\n        /* NOT_CONSTANT */\n        );\n        return 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n    case 2\n    /* TEXT */\n    :\n    case 3\n    /* COMMENT */\n    :\n      return 3\n      /* CAN_STRINGIFY */\n      ;\n\n    case 9\n    /* IF */\n    :\n    case 11\n    /* FOR */\n    :\n    case 10\n    /* IF_BRANCH */\n    :\n      return 0\n      /* NOT_CONSTANT */\n      ;\n\n    case 5\n    /* INTERPOLATION */\n    :\n    case 12\n    /* TEXT_CALL */\n    :\n      return getConstantType(node.content, context);\n\n    case 4\n    /* SIMPLE_EXPRESSION */\n    :\n      return node.constType;\n\n    case 8\n    /* COMPOUND_EXPRESSION */\n    :\n      let returnType = 3\n      /* CAN_STRINGIFY */\n      ;\n\n      for (let i = 0; i < node.children.length; i++) {\n        const child = node.children[i];\n\n        if (isString(child) || isSymbol(child)) {\n          continue;\n        }\n\n        const childType = getConstantType(child, context);\n\n        if (childType === 0\n        /* NOT_CONSTANT */\n        ) {\n          return 0\n          /* NOT_CONSTANT */\n          ;\n        } else if (childType < returnType) {\n          returnType = childType;\n        }\n      }\n\n      return returnType;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') ;\n      return 0\n      /* NOT_CONSTANT */\n      ;\n  }\n}\n\nconst allowHoistedHelperSet = new Set([NORMALIZE_CLASS, NORMALIZE_STYLE, NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\n\nfunction getConstantTypeOfHelperCall(value, context) {\n  if (value.type === 14\n  /* JS_CALL_EXPRESSION */\n  && !isString(value.callee) && allowHoistedHelperSet.has(value.callee)) {\n    const arg = value.arguments[0];\n\n    if (arg.type === 4\n    /* SIMPLE_EXPRESSION */\n    ) {\n      return getConstantType(arg, context);\n    } else if (arg.type === 14\n    /* JS_CALL_EXPRESSION */\n    ) {\n      // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\n      return getConstantTypeOfHelperCall(arg, context);\n    }\n  }\n\n  return 0\n  /* NOT_CONSTANT */\n  ;\n}\n\nfunction getGeneratedPropsConstantType(node, context) {\n  let returnType = 3\n  /* CAN_STRINGIFY */\n  ;\n  const props = getNodeProps(node);\n\n  if (props && props.type === 15\n  /* JS_OBJECT_EXPRESSION */\n  ) {\n    const {\n      properties\n    } = props;\n\n    for (let i = 0; i < properties.length; i++) {\n      const {\n        key,\n        value\n      } = properties[i];\n      const keyType = getConstantType(key, context);\n\n      if (keyType === 0\n      /* NOT_CONSTANT */\n      ) {\n        return keyType;\n      }\n\n      if (keyType < returnType) {\n        returnType = keyType;\n      }\n\n      let valueType;\n\n      if (value.type === 4\n      /* SIMPLE_EXPRESSION */\n      ) {\n        valueType = getConstantType(value, context);\n      } else if (value.type === 14\n      /* JS_CALL_EXPRESSION */\n      ) {\n        // some helper calls can be hoisted,\n        // such as the `normalizeProps` generated by the compiler for pre-normalize class,\n        // in this case we need to respect the ConstantType of the helper's arguments\n        valueType = getConstantTypeOfHelperCall(value, context);\n      } else {\n        valueType = 0\n        /* NOT_CONSTANT */\n        ;\n      }\n\n      if (valueType === 0\n      /* NOT_CONSTANT */\n      ) {\n        return valueType;\n      }\n\n      if (valueType < returnType) {\n        returnType = valueType;\n      }\n    }\n  }\n\n  return returnType;\n}\n\nfunction getNodeProps(node) {\n  const codegenNode = node.codegenNode;\n\n  if (codegenNode.type === 13\n  /* VNODE_CALL */\n  ) {\n    return codegenNode.props;\n  }\n}\n\nfunction getPatchFlag(node) {\n  const flag = node.patchFlag;\n  return flag ? parseInt(flag, 10) : undefined;\n}\n\nfunction createTransformContext(root, {\n  filename = '',\n  prefixIdentifiers = false,\n  hoistStatic = false,\n  cacheHandlers = false,\n  nodeTransforms = [],\n  directiveTransforms = {},\n  transformHoist = null,\n  isBuiltInComponent = NOOP,\n  isCustomElement = NOOP,\n  expressionPlugins = [],\n  scopeId = null,\n  slotted = true,\n  ssr = false,\n  inSSR = false,\n  ssrCssVars = ``,\n  bindingMetadata = EMPTY_OBJ,\n  inline = false,\n  isTS = false,\n  onError = defaultOnError,\n  onWarn = defaultOnWarn,\n  compatConfig\n}) {\n  const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\n  const context = {\n    // options\n    selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\n    prefixIdentifiers,\n    hoistStatic,\n    cacheHandlers,\n    nodeTransforms,\n    directiveTransforms,\n    transformHoist,\n    isBuiltInComponent,\n    isCustomElement,\n    expressionPlugins,\n    scopeId,\n    slotted,\n    ssr,\n    inSSR,\n    ssrCssVars,\n    bindingMetadata,\n    inline,\n    isTS,\n    onError,\n    onWarn,\n    compatConfig,\n    // state\n    root,\n    helpers: new Map(),\n    components: new Set(),\n    directives: new Set(),\n    hoists: [],\n    imports: [],\n    constantCache: new Map(),\n    temps: 0,\n    cached: 0,\n    identifiers: Object.create(null),\n    scopes: {\n      vFor: 0,\n      vSlot: 0,\n      vPre: 0,\n      vOnce: 0\n    },\n    parent: null,\n    currentNode: root,\n    childIndex: 0,\n    inVOnce: false,\n\n    // methods\n    helper(name) {\n      const count = context.helpers.get(name) || 0;\n      context.helpers.set(name, count + 1);\n      return name;\n    },\n\n    removeHelper(name) {\n      const count = context.helpers.get(name);\n\n      if (count) {\n        const currentCount = count - 1;\n\n        if (!currentCount) {\n          context.helpers.delete(name);\n        } else {\n          context.helpers.set(name, currentCount);\n        }\n      }\n    },\n\n    helperString(name) {\n      return `_${helperNameMap[context.helper(name)]}`;\n    },\n\n    replaceNode(node) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        if (!context.currentNode) {\n          throw new Error(`Node being replaced is already removed.`);\n        }\n\n        if (!context.parent) {\n          throw new Error(`Cannot replace root node.`);\n        }\n      }\n\n      context.parent.children[context.childIndex] = context.currentNode = node;\n    },\n\n    removeNode(node) {\n      if (process.env.NODE_ENV !== 'production' && !context.parent) {\n        throw new Error(`Cannot remove root node.`);\n      }\n\n      const list = context.parent.children;\n      const removalIndex = node ? list.indexOf(node) : context.currentNode ? context.childIndex : -1;\n      /* istanbul ignore if */\n\n      if (process.env.NODE_ENV !== 'production' && removalIndex < 0) {\n        throw new Error(`node being removed is not a child of current parent`);\n      }\n\n      if (!node || node === context.currentNode) {\n        // current node removed\n        context.currentNode = null;\n        context.onNodeRemoved();\n      } else {\n        // sibling node removed\n        if (context.childIndex > removalIndex) {\n          context.childIndex--;\n          context.onNodeRemoved();\n        }\n      }\n\n      context.parent.children.splice(removalIndex, 1);\n    },\n\n    onNodeRemoved: () => {},\n\n    addIdentifiers(exp) {},\n\n    removeIdentifiers(exp) {},\n\n    hoist(exp) {\n      if (isString(exp)) exp = createSimpleExpression(exp);\n      context.hoists.push(exp);\n      const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2\n      /* CAN_HOIST */\n      );\n      identifier.hoisted = exp;\n      return identifier;\n    },\n\n    cache(exp, isVNode = false) {\n      return createCacheExpression(context.cached++, exp, isVNode);\n    }\n\n  };\n  {\n    context.filters = new Set();\n  }\n  return context;\n}\n\nfunction transform(root, options) {\n  const context = createTransformContext(root, options);\n  traverseNode(root, context);\n\n  if (options.hoistStatic) {\n    hoistStatic(root, context);\n  }\n\n  if (!options.ssr) {\n    createRootCodegen(root, context);\n  } // finalize meta information\n\n\n  root.helpers = [...context.helpers.keys()];\n  root.components = [...context.components];\n  root.directives = [...context.directives];\n  root.imports = context.imports;\n  root.hoists = context.hoists;\n  root.temps = context.temps;\n  root.cached = context.cached;\n  {\n    root.filters = [...context.filters];\n  }\n}\n\nfunction createRootCodegen(root, context) {\n  const {\n    helper\n  } = context;\n  const {\n    children\n  } = root;\n\n  if (children.length === 1) {\n    const child = children[0]; // if the single child is an element, turn it into a block.\n\n    if (isSingleElementRoot(root, child) && child.codegenNode) {\n      // single element root is never hoisted so codegenNode will never be\n      // SimpleExpressionNode\n      const codegenNode = child.codegenNode;\n\n      if (codegenNode.type === 13\n      /* VNODE_CALL */\n      ) {\n        makeBlock(codegenNode, context);\n      }\n\n      root.codegenNode = codegenNode;\n    } else {\n      // - single <slot/>, IfNode, ForNode: already blocks.\n      // - single text node: always patched.\n      // root codegen falls through via genNode()\n      root.codegenNode = child;\n    }\n  } else if (children.length > 1) {\n    // root has multiple nodes - return a fragment block.\n    let patchFlag = 64\n    /* STABLE_FRAGMENT */\n    ;\n    let patchFlagText = PatchFlagNames[64\n    /* STABLE_FRAGMENT */\n    ]; // check if the fragment actually contains a single valid child with\n    // the rest being comments\n\n    if (process.env.NODE_ENV !== 'production' && children.filter(c => c.type !== 3\n    /* COMMENT */\n    ).length === 1) {\n      patchFlag |= 2048\n      /* DEV_ROOT_FRAGMENT */\n      ;\n      patchFlagText += `, ${PatchFlagNames[2048\n      /* DEV_ROOT_FRAGMENT */\n      ]}`;\n    }\n\n    root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false\n    /* isComponent */\n    );\n  } else ;\n}\n\nfunction traverseChildren(parent, context) {\n  let i = 0;\n\n  const nodeRemoved = () => {\n    i--;\n  };\n\n  for (; i < parent.children.length; i++) {\n    const child = parent.children[i];\n    if (isString(child)) continue;\n    context.parent = parent;\n    context.childIndex = i;\n    context.onNodeRemoved = nodeRemoved;\n    traverseNode(child, context);\n  }\n}\n\nfunction traverseNode(node, context) {\n  context.currentNode = node; // apply transform plugins\n\n  const {\n    nodeTransforms\n  } = context;\n  const exitFns = [];\n\n  for (let i = 0; i < nodeTransforms.length; i++) {\n    const onExit = nodeTransforms[i](node, context);\n\n    if (onExit) {\n      if (isArray(onExit)) {\n        exitFns.push(...onExit);\n      } else {\n        exitFns.push(onExit);\n      }\n    }\n\n    if (!context.currentNode) {\n      // node was removed\n      return;\n    } else {\n      // node may have been replaced\n      node = context.currentNode;\n    }\n  }\n\n  switch (node.type) {\n    case 3\n    /* COMMENT */\n    :\n      if (!context.ssr) {\n        // inject import for the Comment symbol, which is needed for creating\n        // comment nodes with `createVNode`\n        context.helper(CREATE_COMMENT);\n      }\n\n      break;\n\n    case 5\n    /* INTERPOLATION */\n    :\n      // no need to traverse, but we need to inject toString helper\n      if (!context.ssr) {\n        context.helper(TO_DISPLAY_STRING);\n      }\n\n      break;\n    // for container types, further traverse downwards\n\n    case 9\n    /* IF */\n    :\n      for (let i = 0; i < node.branches.length; i++) {\n        traverseNode(node.branches[i], context);\n      }\n\n      break;\n\n    case 10\n    /* IF_BRANCH */\n    :\n    case 11\n    /* FOR */\n    :\n    case 1\n    /* ELEMENT */\n    :\n    case 0\n    /* ROOT */\n    :\n      traverseChildren(node, context);\n      break;\n  } // exit transforms\n\n\n  context.currentNode = node;\n  let i = exitFns.length;\n\n  while (i--) {\n    exitFns[i]();\n  }\n}\n\nfunction createStructuralDirectiveTransform(name, fn) {\n  const matches = isString(name) ? n => n === name : n => name.test(n);\n  return (node, context) => {\n    if (node.type === 1\n    /* ELEMENT */\n    ) {\n      const {\n        props\n      } = node; // structural directive transforms are not concerned with slots\n      // as they are handled separately in vSlot.ts\n\n      if (node.tagType === 3\n      /* TEMPLATE */\n      && props.some(isVSlot)) {\n        return;\n      }\n\n      const exitFns = [];\n\n      for (let i = 0; i < props.length; i++) {\n        const prop = props[i];\n\n        if (prop.type === 7\n        /* DIRECTIVE */\n        && matches(prop.name)) {\n          // structural directives are removed to avoid infinite recursion\n          // also we remove them *before* applying so that it can further\n          // traverse itself in case it moves the node around\n          props.splice(i, 1);\n          i--;\n          const onExit = fn(node, prop, context);\n          if (onExit) exitFns.push(onExit);\n        }\n      }\n\n      return exitFns;\n    }\n  };\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\n\nfunction createCodegenContext(ast, {\n  mode = 'function',\n  prefixIdentifiers = mode === 'module',\n  sourceMap = false,\n  filename = `template.vue.html`,\n  scopeId = null,\n  optimizeImports = false,\n  runtimeGlobalName = `Vue`,\n  runtimeModuleName = `vue`,\n  ssrRuntimeModuleName = 'vue/server-renderer',\n  ssr = false,\n  isTS = false,\n  inSSR = false\n}) {\n  const context = {\n    mode,\n    prefixIdentifiers,\n    sourceMap,\n    filename,\n    scopeId,\n    optimizeImports,\n    runtimeGlobalName,\n    runtimeModuleName,\n    ssrRuntimeModuleName,\n    ssr,\n    isTS,\n    inSSR,\n    source: ast.loc.source,\n    code: ``,\n    column: 1,\n    line: 1,\n    offset: 0,\n    indentLevel: 0,\n    pure: false,\n    map: undefined,\n\n    helper(key) {\n      return `_${helperNameMap[key]}`;\n    },\n\n    push(code, node) {\n      context.code += code;\n    },\n\n    indent() {\n      newline(++context.indentLevel);\n    },\n\n    deindent(withoutNewLine = false) {\n      if (withoutNewLine) {\n        --context.indentLevel;\n      } else {\n        newline(--context.indentLevel);\n      }\n    },\n\n    newline() {\n      newline(context.indentLevel);\n    }\n\n  };\n\n  function newline(n) {\n    context.push('\\n' + `  `.repeat(n));\n  }\n\n  return context;\n}\n\nfunction generate(ast, options = {}) {\n  const context = createCodegenContext(ast, options);\n  if (options.onContextCreated) options.onContextCreated(context);\n  const {\n    mode,\n    push,\n    prefixIdentifiers,\n    indent,\n    deindent,\n    newline,\n    scopeId,\n    ssr\n  } = context;\n  const hasHelpers = ast.helpers.length > 0;\n  const useWithBlock = !prefixIdentifiers && mode !== 'module'; // preambles\n  // in setup() inline mode, the preamble is generated in a sub context\n  // and returned separately.\n\n  const preambleContext = context;\n  {\n    genFunctionPreamble(ast, preambleContext);\n  } // enter render function\n\n  const functionName = ssr ? `ssrRender` : `render`;\n  const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\n  const signature = args.join(', ');\n  {\n    push(`function ${functionName}(${signature}) {`);\n  }\n  indent();\n\n  if (useWithBlock) {\n    push(`with (_ctx) {`);\n    indent(); // function mode const declarations should be inside with block\n    // also they should be renamed to avoid collision with user properties\n\n    if (hasHelpers) {\n      push(`const { ${ast.helpers.map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`).join(', ')} } = _Vue`);\n      push(`\\n`);\n      newline();\n    }\n  } // generate asset resolution statements\n\n\n  if (ast.components.length) {\n    genAssets(ast.components, 'component', context);\n\n    if (ast.directives.length || ast.temps > 0) {\n      newline();\n    }\n  }\n\n  if (ast.directives.length) {\n    genAssets(ast.directives, 'directive', context);\n\n    if (ast.temps > 0) {\n      newline();\n    }\n  }\n\n  if (ast.filters && ast.filters.length) {\n    newline();\n    genAssets(ast.filters, 'filter', context);\n    newline();\n  }\n\n  if (ast.temps > 0) {\n    push(`let `);\n\n    for (let i = 0; i < ast.temps; i++) {\n      push(`${i > 0 ? `, ` : ``}_temp${i}`);\n    }\n  }\n\n  if (ast.components.length || ast.directives.length || ast.temps) {\n    push(`\\n`);\n    newline();\n  } // generate the VNode tree expression\n\n\n  if (!ssr) {\n    push(`return `);\n  }\n\n  if (ast.codegenNode) {\n    genNode(ast.codegenNode, context);\n  } else {\n    push(`null`);\n  }\n\n  if (useWithBlock) {\n    deindent();\n    push(`}`);\n  }\n\n  deindent();\n  push(`}`);\n  return {\n    ast,\n    code: context.code,\n    preamble: ``,\n    // SourceMapGenerator does have toJSON() method but it's not in the types\n    map: context.map ? context.map.toJSON() : undefined\n  };\n}\n\nfunction genFunctionPreamble(ast, context) {\n  const {\n    ssr,\n    prefixIdentifiers,\n    push,\n    newline,\n    runtimeModuleName,\n    runtimeGlobalName,\n    ssrRuntimeModuleName\n  } = context;\n  const VueBinding = runtimeGlobalName;\n\n  const aliasHelper = s => `${helperNameMap[s]}: _${helperNameMap[s]}`; // Generate const declaration for helpers\n  // In prefix mode, we place the const declaration at top so it's done\n  // only once; But if we not prefixing, we place the declaration inside the\n  // with block so it doesn't incur the `in` check cost for every helper access.\n\n\n  if (ast.helpers.length > 0) {\n    {\n      // \"with\" mode.\n      // save Vue in a separate variable to avoid collision\n      push(`const _Vue = ${VueBinding}\\n`); // in \"with\" mode, helpers are declared inside the with block to avoid\n      // has check cost, but hoists are lifted out of the function - we need\n      // to provide the helper here.\n\n      if (ast.hoists.length) {\n        const staticHelpers = [CREATE_VNODE, CREATE_ELEMENT_VNODE, CREATE_COMMENT, CREATE_TEXT, CREATE_STATIC].filter(helper => ast.helpers.includes(helper)).map(aliasHelper).join(', ');\n        push(`const { ${staticHelpers} } = _Vue\\n`);\n      }\n    }\n  }\n\n  genHoists(ast.hoists, context);\n  newline();\n  push(`return `);\n}\n\nfunction genAssets(assets, type, {\n  helper,\n  push,\n  newline,\n  isTS\n}) {\n  const resolver = helper(type === 'filter' ? RESOLVE_FILTER : type === 'component' ? RESOLVE_COMPONENT : RESOLVE_DIRECTIVE);\n\n  for (let i = 0; i < assets.length; i++) {\n    let id = assets[i]; // potential component implicit self-reference inferred from SFC filename\n\n    const maybeSelfReference = id.endsWith('__self');\n\n    if (maybeSelfReference) {\n      id = id.slice(0, -6);\n    }\n\n    push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\n\n    if (i < assets.length - 1) {\n      newline();\n    }\n  }\n}\n\nfunction genHoists(hoists, context) {\n  if (!hoists.length) {\n    return;\n  }\n\n  context.pure = true;\n  const {\n    push,\n    newline,\n    helper,\n    scopeId,\n    mode\n  } = context;\n  newline();\n\n  for (let i = 0; i < hoists.length; i++) {\n    const exp = hoists[i];\n\n    if (exp) {\n      push(`const _hoisted_${i + 1} = ${``}`);\n      genNode(exp, context);\n      newline();\n    }\n  }\n\n  context.pure = false;\n}\n\nfunction isText$1(n) {\n  return isString(n) || n.type === 4\n  /* SIMPLE_EXPRESSION */\n  || n.type === 2\n  /* TEXT */\n  || n.type === 5\n  /* INTERPOLATION */\n  || n.type === 8\n  /* COMPOUND_EXPRESSION */\n  ;\n}\n\nfunction genNodeListAsArray(nodes, context) {\n  const multilines = nodes.length > 3 || process.env.NODE_ENV !== 'production' && nodes.some(n => isArray(n) || !isText$1(n));\n  context.push(`[`);\n  multilines && context.indent();\n  genNodeList(nodes, context, multilines);\n  multilines && context.deindent();\n  context.push(`]`);\n}\n\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\n  const {\n    push,\n    newline\n  } = context;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n\n    if (isString(node)) {\n      push(node);\n    } else if (isArray(node)) {\n      genNodeListAsArray(node, context);\n    } else {\n      genNode(node, context);\n    }\n\n    if (i < nodes.length - 1) {\n      if (multilines) {\n        comma && push(',');\n        newline();\n      } else {\n        comma && push(', ');\n      }\n    }\n  }\n}\n\nfunction genNode(node, context) {\n  if (isString(node)) {\n    context.push(node);\n    return;\n  }\n\n  if (isSymbol(node)) {\n    context.push(context.helper(node));\n    return;\n  }\n\n  switch (node.type) {\n    case 1\n    /* ELEMENT */\n    :\n    case 9\n    /* IF */\n    :\n    case 11\n    /* FOR */\n    :\n      process.env.NODE_ENV !== 'production' && assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` + `Apply appropriate transforms first.`);\n      genNode(node.codegenNode, context);\n      break;\n\n    case 2\n    /* TEXT */\n    :\n      genText(node, context);\n      break;\n\n    case 4\n    /* SIMPLE_EXPRESSION */\n    :\n      genExpression(node, context);\n      break;\n\n    case 5\n    /* INTERPOLATION */\n    :\n      genInterpolation(node, context);\n      break;\n\n    case 12\n    /* TEXT_CALL */\n    :\n      genNode(node.codegenNode, context);\n      break;\n\n    case 8\n    /* COMPOUND_EXPRESSION */\n    :\n      genCompoundExpression(node, context);\n      break;\n\n    case 3\n    /* COMMENT */\n    :\n      genComment(node, context);\n      break;\n\n    case 13\n    /* VNODE_CALL */\n    :\n      genVNodeCall(node, context);\n      break;\n\n    case 14\n    /* JS_CALL_EXPRESSION */\n    :\n      genCallExpression(node, context);\n      break;\n\n    case 15\n    /* JS_OBJECT_EXPRESSION */\n    :\n      genObjectExpression(node, context);\n      break;\n\n    case 17\n    /* JS_ARRAY_EXPRESSION */\n    :\n      genArrayExpression(node, context);\n      break;\n\n    case 18\n    /* JS_FUNCTION_EXPRESSION */\n    :\n      genFunctionExpression(node, context);\n      break;\n\n    case 19\n    /* JS_CONDITIONAL_EXPRESSION */\n    :\n      genConditionalExpression(node, context);\n      break;\n\n    case 20\n    /* JS_CACHE_EXPRESSION */\n    :\n      genCacheExpression(node, context);\n      break;\n\n    case 21\n    /* JS_BLOCK_STATEMENT */\n    :\n      genNodeList(node.body, context, true, false);\n      break;\n    // SSR only types\n\n    case 22\n    /* JS_TEMPLATE_LITERAL */\n    :\n      break;\n\n    case 23\n    /* JS_IF_STATEMENT */\n    :\n      break;\n\n    case 24\n    /* JS_ASSIGNMENT_EXPRESSION */\n    :\n      break;\n\n    case 25\n    /* JS_SEQUENCE_EXPRESSION */\n    :\n      break;\n\n    case 26\n    /* JS_RETURN_STATEMENT */\n    :\n      break;\n\n    /* istanbul ignore next */\n\n    case 10\n    /* IF_BRANCH */\n    :\n      // noop\n      break;\n\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, `unhandled codegen node type: ${node.type}`); // make sure we exhaust all possible types\n\n        const exhaustiveCheck = node;\n        return exhaustiveCheck;\n      }\n\n  }\n}\n\nfunction genText(node, context) {\n  context.push(JSON.stringify(node.content), node);\n}\n\nfunction genExpression(node, context) {\n  const {\n    content,\n    isStatic\n  } = node;\n  context.push(isStatic ? JSON.stringify(content) : content, node);\n}\n\nfunction genInterpolation(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  if (pure) push(PURE_ANNOTATION);\n  push(`${helper(TO_DISPLAY_STRING)}(`);\n  genNode(node.content, context);\n  push(`)`);\n}\n\nfunction genCompoundExpression(node, context) {\n  for (let i = 0; i < node.children.length; i++) {\n    const child = node.children[i];\n\n    if (isString(child)) {\n      context.push(child);\n    } else {\n      genNode(child, context);\n    }\n  }\n}\n\nfunction genExpressionAsPropertyKey(node, context) {\n  const {\n    push\n  } = context;\n\n  if (node.type === 8\n  /* COMPOUND_EXPRESSION */\n  ) {\n    push(`[`);\n    genCompoundExpression(node, context);\n    push(`]`);\n  } else if (node.isStatic) {\n    // only quote keys if necessary\n    const text = isSimpleIdentifier(node.content) ? node.content : JSON.stringify(node.content);\n    push(text, node);\n  } else {\n    push(`[${node.content}]`, node);\n  }\n}\n\nfunction genComment(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n\n  push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\n}\n\nfunction genVNodeCall(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const {\n    tag,\n    props,\n    children,\n    patchFlag,\n    dynamicProps,\n    directives,\n    isBlock,\n    disableTracking,\n    isComponent\n  } = node;\n\n  if (directives) {\n    push(helper(WITH_DIRECTIVES) + `(`);\n  }\n\n  if (isBlock) {\n    push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\n  }\n\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n\n  const callHelper = isBlock ? getVNodeBlockHelper(context.inSSR, isComponent) : getVNodeHelper(context.inSSR, isComponent);\n  push(helper(callHelper) + `(`, node);\n  genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\n  push(`)`);\n\n  if (isBlock) {\n    push(`)`);\n  }\n\n  if (directives) {\n    push(`, `);\n    genNode(directives, context);\n    push(`)`);\n  }\n}\n\nfunction genNullableArgs(args) {\n  let i = args.length;\n\n  while (i--) {\n    if (args[i] != null) break;\n  }\n\n  return args.slice(0, i + 1).map(arg => arg || `null`);\n} // JavaScript\n\n\nfunction genCallExpression(node, context) {\n  const {\n    push,\n    helper,\n    pure\n  } = context;\n  const callee = isString(node.callee) ? node.callee : helper(node.callee);\n\n  if (pure) {\n    push(PURE_ANNOTATION);\n  }\n\n  push(callee + `(`, node);\n  genNodeList(node.arguments, context);\n  push(`)`);\n}\n\nfunction genObjectExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n  const {\n    properties\n  } = node;\n\n  if (!properties.length) {\n    push(`{}`, node);\n    return;\n  }\n\n  const multilines = properties.length > 1 || process.env.NODE_ENV !== 'production' && properties.some(p => p.value.type !== 4\n  /* SIMPLE_EXPRESSION */\n  );\n  push(multilines ? `{` : `{ `);\n  multilines && indent();\n\n  for (let i = 0; i < properties.length; i++) {\n    const {\n      key,\n      value\n    } = properties[i]; // key\n\n    genExpressionAsPropertyKey(key, context);\n    push(`: `); // value\n\n    genNode(value, context);\n\n    if (i < properties.length - 1) {\n      // will only reach this if it's multilines\n      push(`,`);\n      newline();\n    }\n  }\n\n  multilines && deindent();\n  push(multilines ? `}` : ` }`);\n}\n\nfunction genArrayExpression(node, context) {\n  genNodeListAsArray(node.elements, context);\n}\n\nfunction genFunctionExpression(node, context) {\n  const {\n    push,\n    indent,\n    deindent\n  } = context;\n  const {\n    params,\n    returns,\n    body,\n    newline,\n    isSlot\n  } = node;\n\n  if (isSlot) {\n    // wrap slot functions with owner context\n    push(`_${helperNameMap[WITH_CTX]}(`);\n  }\n\n  push(`(`, node);\n\n  if (isArray(params)) {\n    genNodeList(params, context);\n  } else if (params) {\n    genNode(params, context);\n  }\n\n  push(`) => `);\n\n  if (newline || body) {\n    push(`{`);\n    indent();\n  }\n\n  if (returns) {\n    if (newline) {\n      push(`return `);\n    }\n\n    if (isArray(returns)) {\n      genNodeListAsArray(returns, context);\n    } else {\n      genNode(returns, context);\n    }\n  } else if (body) {\n    genNode(body, context);\n  }\n\n  if (newline || body) {\n    deindent();\n    push(`}`);\n  }\n\n  if (isSlot) {\n    if (node.isNonScopedSlot) {\n      push(`, undefined, true`);\n    }\n\n    push(`)`);\n  }\n}\n\nfunction genConditionalExpression(node, context) {\n  const {\n    test,\n    consequent,\n    alternate,\n    newline: needNewline\n  } = node;\n  const {\n    push,\n    indent,\n    deindent,\n    newline\n  } = context;\n\n  if (test.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    const needsParens = !isSimpleIdentifier(test.content);\n    needsParens && push(`(`);\n    genExpression(test, context);\n    needsParens && push(`)`);\n  } else {\n    push(`(`);\n    genNode(test, context);\n    push(`)`);\n  }\n\n  needNewline && indent();\n  context.indentLevel++;\n  needNewline || push(` `);\n  push(`? `);\n  genNode(consequent, context);\n  context.indentLevel--;\n  needNewline && newline();\n  needNewline || push(` `);\n  push(`: `);\n  const isNested = alternate.type === 19\n  /* JS_CONDITIONAL_EXPRESSION */\n  ;\n\n  if (!isNested) {\n    context.indentLevel++;\n  }\n\n  genNode(alternate, context);\n\n  if (!isNested) {\n    context.indentLevel--;\n  }\n\n  needNewline && deindent(true\n  /* without newline */\n  );\n}\n\nfunction genCacheExpression(node, context) {\n  const {\n    push,\n    helper,\n    indent,\n    deindent,\n    newline\n  } = context;\n  push(`_cache[${node.index}] || (`);\n\n  if (node.isVNode) {\n    indent();\n    push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\n    newline();\n  }\n\n  push(`_cache[${node.index}] = `);\n  genNode(node.value, context);\n\n  if (node.isVNode) {\n    push(`,`);\n    newline();\n    push(`${helper(SET_BLOCK_TRACKING)}(1),`);\n    newline();\n    push(`_cache[${node.index}]`);\n    deindent();\n  }\n\n  push(`)`);\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\n  {\n    return;\n  }\n}\n\nfunction isReferencedIdentifier(id, parent, parentStack) {\n  {\n    return false;\n  }\n}\n\nfunction isInDestructureAssignment(parent, parentStack) {\n  if (parent && (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\n    let i = parentStack.length;\n\n    while (i--) {\n      const p = parentStack[i];\n\n      if (p.type === 'AssignmentExpression') {\n        return true;\n      } else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\n        break;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction walkFunctionParams(node, onIdent) {\n  for (const p of node.params) {\n    for (const id of extractIdentifiers(p)) {\n      onIdent(id);\n    }\n  }\n}\n\nfunction walkBlockDeclarations(block, onIdent) {\n  for (const stmt of block.body) {\n    if (stmt.type === 'VariableDeclaration') {\n      if (stmt.declare) continue;\n\n      for (const decl of stmt.declarations) {\n        for (const id of extractIdentifiers(decl.id)) {\n          onIdent(id);\n        }\n      }\n    } else if (stmt.type === 'FunctionDeclaration' || stmt.type === 'ClassDeclaration') {\n      if (stmt.declare || !stmt.id) continue;\n      onIdent(stmt.id);\n    }\n  }\n}\n\nfunction extractIdentifiers(param, nodes = []) {\n  switch (param.type) {\n    case 'Identifier':\n      nodes.push(param);\n      break;\n\n    case 'MemberExpression':\n      let object = param;\n\n      while (object.type === 'MemberExpression') {\n        object = object.object;\n      }\n\n      nodes.push(object);\n      break;\n\n    case 'ObjectPattern':\n      for (const prop of param.properties) {\n        if (prop.type === 'RestElement') {\n          extractIdentifiers(prop.argument, nodes);\n        } else {\n          extractIdentifiers(prop.value, nodes);\n        }\n      }\n\n      break;\n\n    case 'ArrayPattern':\n      param.elements.forEach(element => {\n        if (element) extractIdentifiers(element, nodes);\n      });\n      break;\n\n    case 'RestElement':\n      extractIdentifiers(param.argument, nodes);\n      break;\n\n    case 'AssignmentPattern':\n      extractIdentifiers(param.left, nodes);\n      break;\n  }\n\n  return nodes;\n}\n\nconst isFunctionType = node => {\n  return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n};\n\nconst isStaticProperty = node => node && (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') && !node.computed;\n\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node; // these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\n\n\nconst prohibitedKeywordRE = new RegExp('\\\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments,typeof,void').split(',').join('\\\\b|\\\\b') + '\\\\b'); // strip strings in expressions\n\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\n\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\n  const exp = node.content; // empty expressions are validated per-directive since some directives\n  // do allow empty expressions.\n\n  if (!exp.trim()) {\n    return;\n  }\n\n  try {\n    new Function(asRawStatements ? ` ${exp} ` : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\n  } catch (e) {\n    let message = e.message;\n    const keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n\n    if (keywordMatch) {\n      message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\n    }\n\n    context.onError(createCompilerError(44\n    /* X_INVALID_EXPRESSION */\n    , node.loc, undefined, message));\n  }\n}\n\nconst transformExpression = (node, context) => {\n  if (node.type === 5\n  /* INTERPOLATION */\n  ) {\n    node.content = processExpression(node.content, context);\n  } else if (node.type === 1\n  /* ELEMENT */\n  ) {\n    // handle directives on element\n    for (let i = 0; i < node.props.length; i++) {\n      const dir = node.props[i]; // do not process for v-on & v-for since they are special handled\n\n      if (dir.type === 7\n      /* DIRECTIVE */\n      && dir.name !== 'for') {\n        const exp = dir.exp;\n        const arg = dir.arg; // do not process exp if this is v-on:arg - we need special handling\n        // for wrapping inline statements.\n\n        if (exp && exp.type === 4\n        /* SIMPLE_EXPRESSION */\n        && !(dir.name === 'on' && arg)) {\n          dir.exp = processExpression(exp, context, // slot args must be processed as function params\n          dir.name === 'slot');\n        }\n\n        if (arg && arg.type === 4\n        /* SIMPLE_EXPRESSION */\n        && !arg.isStatic) {\n          dir.arg = processExpression(arg, context);\n        }\n      }\n    }\n  }\n}; // Important: since this function uses Node.js only dependencies, it should\n// always be used with a leading !true check so that it can be\n// tree-shaken from the browser build.\n\n\nfunction processExpression(node, context, // some expressions like v-slot props & v-for aliases should be parsed as\n// function params\nasParams = false, // v-on handler values may contain multiple statements\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\n  {\n    if (process.env.NODE_ENV !== 'production') {\n      // simple in-browser validation (same logic in 2.x)\n      validateBrowserExpression(node, context, asParams, asRawStatements);\n    }\n\n    return node;\n  }\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\n  return processIf(node, dir, context, (ifNode, branch, isRoot) => {\n    // #1587: We need to dynamically increment the key based on the current\n    // node's sibling nodes, since chained v-if/else branches are\n    // rendered at the same depth\n    const siblings = context.parent.children;\n    let i = siblings.indexOf(ifNode);\n    let key = 0;\n\n    while (i-- >= 0) {\n      const sibling = siblings[i];\n\n      if (sibling && sibling.type === 9\n      /* IF */\n      ) {\n        key += sibling.branches.length;\n      }\n    } // Exit callback. Complete the codegenNode when all children have been\n    // transformed.\n\n\n    return () => {\n      if (isRoot) {\n        ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\n      } else {\n        // attach this branch's codegen node to the v-if root.\n        const parentCondition = getParentCondition(ifNode.codegenNode);\n        parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\n      }\n    };\n  });\n}); // target-agnostic transform used for both Client and SSR\n\nfunction processIf(node, dir, context, processCodegen) {\n  if (dir.name !== 'else' && (!dir.exp || !dir.exp.content.trim())) {\n    const loc = dir.exp ? dir.exp.loc : node.loc;\n    context.onError(createCompilerError(28\n    /* X_V_IF_NO_EXPRESSION */\n    , dir.loc));\n    dir.exp = createSimpleExpression(`true`, false, loc);\n  }\n\n  if (process.env.NODE_ENV !== 'production' && true && dir.exp) {\n    validateBrowserExpression(dir.exp, context);\n  }\n\n  if (dir.name === 'if') {\n    const branch = createIfBranch(node, dir);\n    const ifNode = {\n      type: 9\n      /* IF */\n      ,\n      loc: node.loc,\n      branches: [branch]\n    };\n    context.replaceNode(ifNode);\n\n    if (processCodegen) {\n      return processCodegen(ifNode, branch, true);\n    }\n  } else {\n    // locate the adjacent v-if\n    const siblings = context.parent.children;\n    const comments = [];\n    let i = siblings.indexOf(node);\n\n    while (i-- >= -1) {\n      const sibling = siblings[i];\n\n      if (process.env.NODE_ENV !== 'production' && sibling && sibling.type === 3\n      /* COMMENT */\n      ) {\n        context.removeNode(sibling);\n        comments.unshift(sibling);\n        continue;\n      }\n\n      if (sibling && sibling.type === 2\n      /* TEXT */\n      && !sibling.content.trim().length) {\n        context.removeNode(sibling);\n        continue;\n      }\n\n      if (sibling && sibling.type === 9\n      /* IF */\n      ) {\n        // Check if v-else was followed by v-else-if\n        if (dir.name === 'else-if' && sibling.branches[sibling.branches.length - 1].condition === undefined) {\n          context.onError(createCompilerError(30\n          /* X_V_ELSE_NO_ADJACENT_IF */\n          , node.loc));\n        } // move the node to the if node's branches\n\n\n        context.removeNode();\n        const branch = createIfBranch(node, dir);\n\n        if (process.env.NODE_ENV !== 'production' && comments.length && // #3619 ignore comments if the v-if is direct child of <transition>\n        !(context.parent && context.parent.type === 1\n        /* ELEMENT */\n        && isBuiltInType(context.parent.tag, 'transition'))) {\n          branch.children = [...comments, ...branch.children];\n        } // check if user is forcing same key on different branches\n\n\n        if (process.env.NODE_ENV !== 'production' || !true) {\n          const key = branch.userKey;\n\n          if (key) {\n            sibling.branches.forEach(({\n              userKey\n            }) => {\n              if (isSameKey(userKey, key)) {\n                context.onError(createCompilerError(29\n                /* X_V_IF_SAME_KEY */\n                , branch.userKey.loc));\n              }\n            });\n          }\n        }\n\n        sibling.branches.push(branch);\n        const onExit = processCodegen && processCodegen(sibling, branch, false); // since the branch was removed, it will not be traversed.\n        // make sure to traverse here.\n\n        traverseNode(branch, context); // call on exit\n\n        if (onExit) onExit(); // make sure to reset currentNode after traversal to indicate this\n        // node has been removed.\n\n        context.currentNode = null;\n      } else {\n        context.onError(createCompilerError(30\n        /* X_V_ELSE_NO_ADJACENT_IF */\n        , node.loc));\n      }\n\n      break;\n    }\n  }\n}\n\nfunction createIfBranch(node, dir) {\n  return {\n    type: 10\n    /* IF_BRANCH */\n    ,\n    loc: node.loc,\n    condition: dir.name === 'else' ? undefined : dir.exp,\n    children: node.tagType === 3\n    /* TEMPLATE */\n    && !findDir(node, 'for') ? node.children : [node],\n    userKey: findProp(node, `key`)\n  };\n}\n\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\n  if (branch.condition) {\n    return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), // make sure to pass in asBlock: true so that the comment node call\n    // closes the current block.\n    createCallExpression(context.helper(CREATE_COMMENT), [process.env.NODE_ENV !== 'production' ? '\"v-if\"' : '\"\"', 'true']));\n  } else {\n    return createChildrenCodegenNode(branch, keyIndex, context);\n  }\n}\n\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\n  const {\n    helper\n  } = context;\n  const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2\n  /* CAN_HOIST */\n  ));\n  const {\n    children\n  } = branch;\n  const firstChild = children[0];\n  const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1\n  /* ELEMENT */\n  ;\n\n  if (needFragmentWrapper) {\n    if (children.length === 1 && firstChild.type === 11\n    /* FOR */\n    ) {\n      // optimize away nested fragments when child is a ForNode\n      const vnodeCall = firstChild.codegenNode;\n      injectProp(vnodeCall, keyProperty, context);\n      return vnodeCall;\n    } else {\n      let patchFlag = 64\n      /* STABLE_FRAGMENT */\n      ;\n      let patchFlagText = PatchFlagNames[64\n      /* STABLE_FRAGMENT */\n      ]; // check if the fragment actually contains a single valid child with\n      // the rest being comments\n\n      if (process.env.NODE_ENV !== 'production' && children.filter(c => c.type !== 3\n      /* COMMENT */\n      ).length === 1) {\n        patchFlag |= 2048\n        /* DEV_ROOT_FRAGMENT */\n        ;\n        patchFlagText += `, ${PatchFlagNames[2048\n        /* DEV_ROOT_FRAGMENT */\n        ]}`;\n      }\n\n      return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false\n      /* isComponent */\n      , branch.loc);\n    }\n  } else {\n    const ret = firstChild.codegenNode;\n    const vnodeCall = getMemoedVNodeCall(ret); // Change createVNode to createBlock.\n\n    if (vnodeCall.type === 13\n    /* VNODE_CALL */\n    ) {\n      makeBlock(vnodeCall, context);\n    } // inject branch key\n\n\n    injectProp(vnodeCall, keyProperty, context);\n    return ret;\n  }\n}\n\nfunction isSameKey(a, b) {\n  if (!a || a.type !== b.type) {\n    return false;\n  }\n\n  if (a.type === 6\n  /* ATTRIBUTE */\n  ) {\n    if (a.value.content !== b.value.content) {\n      return false;\n    }\n  } else {\n    // directive\n    const exp = a.exp;\n    const branchExp = b.exp;\n\n    if (exp.type !== branchExp.type) {\n      return false;\n    }\n\n    if (exp.type !== 4\n    /* SIMPLE_EXPRESSION */\n    || exp.isStatic !== branchExp.isStatic || exp.content !== branchExp.content) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction getParentCondition(node) {\n  while (true) {\n    if (node.type === 19\n    /* JS_CONDITIONAL_EXPRESSION */\n    ) {\n      if (node.alternate.type === 19\n      /* JS_CONDITIONAL_EXPRESSION */\n      ) {\n        node = node.alternate;\n      } else {\n        return node;\n      }\n    } else if (node.type === 20\n    /* JS_CACHE_EXPRESSION */\n    ) {\n      node = node.value;\n    }\n  }\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\n  const {\n    helper,\n    removeHelper\n  } = context;\n  return processFor(node, dir, context, forNode => {\n    // create the loop render function expression now, and add the\n    // iterator on exit after all children have been traversed\n    const renderExp = createCallExpression(helper(RENDER_LIST), [forNode.source]);\n    const isTemplate = isTemplateNode(node);\n    const memo = findDir(node, 'memo');\n    const keyProp = findProp(node, `key`);\n    const keyExp = keyProp && (keyProp.type === 6\n    /* ATTRIBUTE */\n    ? createSimpleExpression(keyProp.value.content, true) : keyProp.exp);\n    const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\n    const isStableFragment = forNode.source.type === 4\n    /* SIMPLE_EXPRESSION */\n    && forNode.source.constType > 0\n    /* NOT_CONSTANT */\n    ;\n    const fragmentFlag = isStableFragment ? 64\n    /* STABLE_FRAGMENT */\n    : keyProp ? 128\n    /* KEYED_FRAGMENT */\n    : 256\n    /* UNKEYED_FRAGMENT */\n    ;\n    forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true\n    /* isBlock */\n    , !isStableFragment\n    /* disableTracking */\n    , false\n    /* isComponent */\n    , node.loc);\n    return () => {\n      // finish the codegen now that all children have been traversed\n      let childBlock;\n      const {\n        children\n      } = forNode; // check <template v-for> key placement\n\n      if ((process.env.NODE_ENV !== 'production' || !true) && isTemplate) {\n        node.children.some(c => {\n          if (c.type === 1\n          /* ELEMENT */\n          ) {\n            const key = findProp(c, 'key');\n\n            if (key) {\n              context.onError(createCompilerError(33\n              /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */\n              , key.loc));\n              return true;\n            }\n          }\n        });\n      }\n\n      const needFragmentWrapper = children.length !== 1 || children[0].type !== 1\n      /* ELEMENT */\n      ;\n      const slotOutlet = isSlotOutlet(node) ? node : isTemplate && node.children.length === 1 && isSlotOutlet(node.children[0]) ? node.children[0] // api-extractor somehow fails to infer this\n      : null;\n\n      if (slotOutlet) {\n        // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\n        childBlock = slotOutlet.codegenNode;\n\n        if (isTemplate && keyProperty) {\n          // <template v-for=\"...\" :key=\"...\"><slot/></template>\n          // we need to inject the key to the renderSlot() call.\n          // the props for renderSlot is passed as the 3rd argument.\n          injectProp(childBlock, keyProperty, context);\n        }\n      } else if (needFragmentWrapper) {\n        // <template v-for=\"...\"> with text or multi-elements\n        // should generate a fragment block for each loop\n        childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64\n        /* STABLE_FRAGMENT */\n        + (process.env.NODE_ENV !== 'production' ? ` /* ${PatchFlagNames[64\n        /* STABLE_FRAGMENT */\n        ]} */` : ``), undefined, undefined, true, undefined, false\n        /* isComponent */\n        );\n      } else {\n        // Normal element v-for. Directly use the child's codegenNode\n        // but mark it as a block.\n        childBlock = children[0].codegenNode;\n\n        if (isTemplate && keyProperty) {\n          injectProp(childBlock, keyProperty, context);\n        }\n\n        if (childBlock.isBlock !== !isStableFragment) {\n          if (childBlock.isBlock) {\n            // switch from block to vnode\n            removeHelper(OPEN_BLOCK);\n            removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n          } else {\n            // switch from vnode to block\n            removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n          }\n        }\n\n        childBlock.isBlock = !isStableFragment;\n\n        if (childBlock.isBlock) {\n          helper(OPEN_BLOCK);\n          helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\n        } else {\n          helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\n        }\n      }\n\n      if (memo) {\n        const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [createSimpleExpression(`_cached`)]));\n        loop.body = createBlockStatement([createCompoundExpression([`const _memo = (`, memo.exp, `)`]), createCompoundExpression([`if (_cached`, ...(keyExp ? [` && _cached.key === `, keyExp] : []), ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`]), createCompoundExpression([`const _item = `, childBlock]), createSimpleExpression(`_item.memo = _memo`), createSimpleExpression(`return _item`)]);\n        renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\n      } else {\n        renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true\n        /* force newline */\n        ));\n      }\n    };\n  });\n}); // target-agnostic transform used for both Client and SSR\n\nfunction processFor(node, dir, context, processCodegen) {\n  if (!dir.exp) {\n    context.onError(createCompilerError(31\n    /* X_V_FOR_NO_EXPRESSION */\n    , dir.loc));\n    return;\n  }\n\n  const parseResult = parseForExpression( // can only be simple expression because vFor transform is applied\n  // before expression transform.\n  dir.exp, context);\n\n  if (!parseResult) {\n    context.onError(createCompilerError(32\n    /* X_V_FOR_MALFORMED_EXPRESSION */\n    , dir.loc));\n    return;\n  }\n\n  const {\n    addIdentifiers,\n    removeIdentifiers,\n    scopes\n  } = context;\n  const {\n    source,\n    value,\n    key,\n    index\n  } = parseResult;\n  const forNode = {\n    type: 11\n    /* FOR */\n    ,\n    loc: dir.loc,\n    source,\n    valueAlias: value,\n    keyAlias: key,\n    objectIndexAlias: index,\n    parseResult,\n    children: isTemplateNode(node) ? node.children : [node]\n  };\n  context.replaceNode(forNode); // bookkeeping\n\n  scopes.vFor++;\n  const onExit = processCodegen && processCodegen(forNode);\n  return () => {\n    scopes.vFor--;\n    if (onExit) onExit();\n  };\n}\n\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/; // This regex doesn't cover the case if key or index aliases have destructuring,\n// but those do not make sense in the first place, so this works in practice.\n\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nconst stripParensRE = /^\\(|\\)$/g;\n\nfunction parseForExpression(input, context) {\n  const loc = input.loc;\n  const exp = input.content;\n  const inMatch = exp.match(forAliasRE);\n  if (!inMatch) return;\n  const [, LHS, RHS] = inMatch;\n  const result = {\n    source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\n    value: undefined,\n    key: undefined,\n    index: undefined\n  };\n\n  if (process.env.NODE_ENV !== 'production' && true) {\n    validateBrowserExpression(result.source, context);\n  }\n\n  let valueContent = LHS.trim().replace(stripParensRE, '').trim();\n  const trimmedOffset = LHS.indexOf(valueContent);\n  const iteratorMatch = valueContent.match(forIteratorRE);\n\n  if (iteratorMatch) {\n    valueContent = valueContent.replace(forIteratorRE, '').trim();\n    const keyContent = iteratorMatch[1].trim();\n    let keyOffset;\n\n    if (keyContent) {\n      keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\n      result.key = createAliasExpression(loc, keyContent, keyOffset);\n\n      if (process.env.NODE_ENV !== 'production' && true) {\n        validateBrowserExpression(result.key, context, true);\n      }\n    }\n\n    if (iteratorMatch[2]) {\n      const indexContent = iteratorMatch[2].trim();\n\n      if (indexContent) {\n        result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key ? keyOffset + keyContent.length : trimmedOffset + valueContent.length));\n\n        if (process.env.NODE_ENV !== 'production' && true) {\n          validateBrowserExpression(result.index, context, true);\n        }\n      }\n    }\n  }\n\n  if (valueContent) {\n    result.value = createAliasExpression(loc, valueContent, trimmedOffset);\n\n    if (process.env.NODE_ENV !== 'production' && true) {\n      validateBrowserExpression(result.value, context, true);\n    }\n  }\n\n  return result;\n}\n\nfunction createAliasExpression(range, content, offset) {\n  return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\n}\n\nfunction createForLoopParams({\n  value,\n  key,\n  index\n}, memoArgs = []) {\n  return createParamsList([value, key, index, ...memoArgs]);\n}\n\nfunction createParamsList(args) {\n  let i = args.length;\n\n  while (i--) {\n    if (args[i]) break;\n  }\n\n  return args.slice(0, i + 1).map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false); // A NodeTransform that:\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\n//    by transformExpression. This is only applied in non-browser builds with\n//    { prefixIdentifiers: true }.\n// 2. Track v-slot depths so that we know a slot is inside another slot.\n//    Note the exit callback is executed before buildSlots() on the same node,\n//    so only nested slots see positive numbers.\n\nconst trackSlotScopes = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  && (node.tagType === 1\n  /* COMPONENT */\n  || node.tagType === 3\n  /* TEMPLATE */\n  )) {\n    // We are only checking non-empty v-slot here\n    // since we only care about slots that introduce scope variables.\n    const vSlot = findDir(node, 'slot');\n\n    if (vSlot) {\n      vSlot.exp;\n      context.scopes.vSlot++;\n      return () => {\n        context.scopes.vSlot--;\n      };\n    }\n  }\n}; // A NodeTransform that tracks scope identifiers for scoped slots with v-for.\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\n\n\nconst trackVForSlotScopes = (node, context) => {\n  let vFor;\n\n  if (isTemplateNode(node) && node.props.some(isVSlot) && (vFor = findDir(node, 'for'))) {\n    const result = vFor.parseResult = parseForExpression(vFor.exp, context);\n\n    if (result) {\n      const {\n        value,\n        key,\n        index\n      } = result;\n      const {\n        addIdentifiers,\n        removeIdentifiers\n      } = context;\n      value && addIdentifiers(value);\n      key && addIdentifiers(key);\n      index && addIdentifiers(index);\n      return () => {\n        value && removeIdentifiers(value);\n        key && removeIdentifiers(key);\n        index && removeIdentifiers(index);\n      };\n    }\n  }\n};\n\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false\n/* newline */\n, true\n/* isSlot */\n, children.length ? children[0].loc : loc); // Instead of being a DirectiveTransform, v-slot processing is called during\n// transformElement to build the slots object for a component.\n\n\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\n  context.helper(WITH_CTX);\n  const {\n    children,\n    loc\n  } = node;\n  const slotsProperties = [];\n  const dynamicSlots = []; // If the slot is inside a v-for or another v-slot, force it to be dynamic\n  // since it likely uses a scope variable.\n\n  let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0; // 1. Check for slot with slotProps on component itself.\n  //    <Comp v-slot=\"{ prop }\"/>\n\n  const onComponentSlot = findDir(node, 'slot', true);\n\n  if (onComponentSlot) {\n    const {\n      arg,\n      exp\n    } = onComponentSlot;\n\n    if (arg && !isStaticExp(arg)) {\n      hasDynamicSlots = true;\n    }\n\n    slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\n  } // 2. Iterate through children and check for template slots\n  //    <template v-slot:foo=\"{ prop }\">\n\n\n  let hasTemplateSlots = false;\n  let hasNamedDefaultSlot = false;\n  const implicitDefaultChildren = [];\n  const seenSlotNames = new Set();\n\n  for (let i = 0; i < children.length; i++) {\n    const slotElement = children[i];\n    let slotDir;\n\n    if (!isTemplateNode(slotElement) || !(slotDir = findDir(slotElement, 'slot', true))) {\n      // not a <template v-slot>, skip.\n      if (slotElement.type !== 3\n      /* COMMENT */\n      ) {\n        implicitDefaultChildren.push(slotElement);\n      }\n\n      continue;\n    }\n\n    if (onComponentSlot) {\n      // already has on-component slot - this is incorrect usage.\n      context.onError(createCompilerError(37\n      /* X_V_SLOT_MIXED_SLOT_USAGE */\n      , slotDir.loc));\n      break;\n    }\n\n    hasTemplateSlots = true;\n    const {\n      children: slotChildren,\n      loc: slotLoc\n    } = slotElement;\n    const {\n      arg: slotName = createSimpleExpression(`default`, true),\n      exp: slotProps,\n      loc: dirLoc\n    } = slotDir; // check if name is dynamic.\n\n    let staticSlotName;\n\n    if (isStaticExp(slotName)) {\n      staticSlotName = slotName ? slotName.content : `default`;\n    } else {\n      hasDynamicSlots = true;\n    }\n\n    const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc); // check if this slot is conditional (v-if/v-for)\n\n    let vIf;\n    let vElse;\n    let vFor;\n\n    if (vIf = findDir(slotElement, 'if')) {\n      hasDynamicSlots = true;\n      dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\n    } else if (vElse = findDir(slotElement, /^else(-if)?$/, true\n    /* allowEmpty */\n    )) {\n      // find adjacent v-if\n      let j = i;\n      let prev;\n\n      while (j--) {\n        prev = children[j];\n\n        if (prev.type !== 3\n        /* COMMENT */\n        ) {\n          break;\n        }\n      }\n\n      if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\n        // remove node\n        children.splice(i, 1);\n        i--; // attach this slot to previous conditional\n\n        let conditional = dynamicSlots[dynamicSlots.length - 1];\n\n        while (conditional.alternate.type === 19\n        /* JS_CONDITIONAL_EXPRESSION */\n        ) {\n          conditional = conditional.alternate;\n        }\n\n        conditional.alternate = vElse.exp ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback) : buildDynamicSlot(slotName, slotFunction);\n      } else {\n        context.onError(createCompilerError(30\n        /* X_V_ELSE_NO_ADJACENT_IF */\n        , vElse.loc));\n      }\n    } else if (vFor = findDir(slotElement, 'for')) {\n      hasDynamicSlots = true;\n      const parseResult = vFor.parseResult || parseForExpression(vFor.exp, context);\n\n      if (parseResult) {\n        // Render the dynamic slots as an array and add it to the createSlot()\n        // args. The runtime knows how to handle it appropriately.\n        dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [parseResult.source, createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true\n        /* force newline */\n        )]));\n      } else {\n        context.onError(createCompilerError(32\n        /* X_V_FOR_MALFORMED_EXPRESSION */\n        , vFor.loc));\n      }\n    } else {\n      // check duplicate static names\n      if (staticSlotName) {\n        if (seenSlotNames.has(staticSlotName)) {\n          context.onError(createCompilerError(38\n          /* X_V_SLOT_DUPLICATE_SLOT_NAMES */\n          , dirLoc));\n          continue;\n        }\n\n        seenSlotNames.add(staticSlotName);\n\n        if (staticSlotName === 'default') {\n          hasNamedDefaultSlot = true;\n        }\n      }\n\n      slotsProperties.push(createObjectProperty(slotName, slotFunction));\n    }\n  }\n\n  if (!onComponentSlot) {\n    const buildDefaultSlotProperty = (props, children) => {\n      const fn = buildSlotFn(props, children, loc);\n\n      if (context.compatConfig) {\n        fn.isNonScopedSlot = true;\n      }\n\n      return createObjectProperty(`default`, fn);\n    };\n\n    if (!hasTemplateSlots) {\n      // implicit default slot (on component)\n      slotsProperties.push(buildDefaultSlotProperty(undefined, children));\n    } else if (implicitDefaultChildren.length && // #3766\n    // with whitespace: 'preserve', whitespaces between slots will end up in\n    // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\n    implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\n      // implicit default slot (mixed with named slots)\n      if (hasNamedDefaultSlot) {\n        context.onError(createCompilerError(39\n        /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */\n        , implicitDefaultChildren[0].loc));\n      } else {\n        slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\n      }\n    }\n  }\n\n  const slotFlag = hasDynamicSlots ? 2\n  /* DYNAMIC */\n  : hasForwardedSlots(node.children) ? 3\n  /* FORWARDED */\n  : 1\n  /* STABLE */\n  ;\n  let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, // 2 = compiled but dynamic = can skip normalization, but must run diff\n  // 1 = compiled and static = can skip normalization AND diff as optimized\n  createSimpleExpression(slotFlag + (process.env.NODE_ENV !== 'production' ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\n\n  if (dynamicSlots.length) {\n    slots = createCallExpression(context.helper(CREATE_SLOTS), [slots, createArrayExpression(dynamicSlots)]);\n  }\n\n  return {\n    slots,\n    hasDynamicSlots\n  };\n}\n\nfunction buildDynamicSlot(name, fn) {\n  return createObjectExpression([createObjectProperty(`name`, name), createObjectProperty(`fn`, fn)]);\n}\n\nfunction hasForwardedSlots(children) {\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    switch (child.type) {\n      case 1\n      /* ELEMENT */\n      :\n        if (child.tagType === 2\n        /* SLOT */\n        || hasForwardedSlots(child.children)) {\n          return true;\n        }\n\n        break;\n\n      case 9\n      /* IF */\n      :\n        if (hasForwardedSlots(child.branches)) return true;\n        break;\n\n      case 10\n      /* IF_BRANCH */\n      :\n      case 11\n      /* FOR */\n      :\n        if (hasForwardedSlots(child.children)) return true;\n        break;\n    }\n  }\n\n  return false;\n}\n\nfunction isNonWhitespaceContent(node) {\n  if (node.type !== 2\n  /* TEXT */\n  && node.type !== 12\n  /* TEXT_CALL */\n  ) return true;\n  return node.type === 2\n  /* TEXT */\n  ? !!node.content.trim() : isNonWhitespaceContent(node.content);\n} // some directive transforms (e.g. v-model) may return a symbol for runtime\n// import, which should be used instead of a resolveDirective call.\n\n\nconst directiveImportMap = new WeakMap(); // generate a JavaScript AST for this element's codegen\n\nconst transformElement = (node, context) => {\n  // perform the work on exit, after all child expressions have been\n  // processed and merged.\n  return function postTransformElement() {\n    node = context.currentNode;\n\n    if (!(node.type === 1\n    /* ELEMENT */\n    && (node.tagType === 0\n    /* ELEMENT */\n    || node.tagType === 1\n    /* COMPONENT */\n    ))) {\n      return;\n    }\n\n    const {\n      tag,\n      props\n    } = node;\n    const isComponent = node.tagType === 1\n    /* COMPONENT */\n    ; // The goal of the transform is to create a codegenNode implementing the\n    // VNodeCall interface.\n\n    let vnodeTag = isComponent ? resolveComponentType(node, context) : `\"${tag}\"`;\n    const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\n    let vnodeProps;\n    let vnodeChildren;\n    let vnodePatchFlag;\n    let patchFlag = 0;\n    let vnodeDynamicProps;\n    let dynamicPropNames;\n    let vnodeDirectives;\n    let shouldUseBlock = // dynamic component may resolve to plain elements\n    isDynamicComponent || vnodeTag === TELEPORT || vnodeTag === SUSPENSE || !isComponent && ( // <svg> and <foreignObject> must be forced into blocks so that block\n    // updates inside get proper isSVG flag at runtime. (#639, #643)\n    // This is technically web-specific, but splitting the logic out of core\n    // leads to too much unnecessary complexity.\n    tag === 'svg' || tag === 'foreignObject'); // props\n\n    if (props.length > 0) {\n      const propsBuildResult = buildProps(node, context);\n      vnodeProps = propsBuildResult.props;\n      patchFlag = propsBuildResult.patchFlag;\n      dynamicPropNames = propsBuildResult.dynamicPropNames;\n      const directives = propsBuildResult.directives;\n      vnodeDirectives = directives && directives.length ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context))) : undefined;\n\n      if (propsBuildResult.shouldUseBlock) {\n        shouldUseBlock = true;\n      }\n    } // children\n\n\n    if (node.children.length > 0) {\n      if (vnodeTag === KEEP_ALIVE) {\n        // Although a built-in component, we compile KeepAlive with raw children\n        // instead of slot functions so that it can be used inside Transition\n        // or other Transition-wrapping HOCs.\n        // To ensure correct updates with block optimizations, we need to:\n        // 1. Force keep-alive into a block. This avoids its children being\n        //    collected by a parent block.\n        shouldUseBlock = true; // 2. Force keep-alive to always be updated, since it uses raw children.\n\n        patchFlag |= 1024\n        /* DYNAMIC_SLOTS */\n        ;\n\n        if (process.env.NODE_ENV !== 'production' && node.children.length > 1) {\n          context.onError(createCompilerError(45\n          /* X_KEEP_ALIVE_INVALID_CHILDREN */\n          , {\n            start: node.children[0].loc.start,\n            end: node.children[node.children.length - 1].loc.end,\n            source: ''\n          }));\n        }\n      }\n\n      const shouldBuildAsSlots = isComponent && // Teleport is not a real component and has dedicated runtime handling\n      vnodeTag !== TELEPORT && // explained above.\n      vnodeTag !== KEEP_ALIVE;\n\n      if (shouldBuildAsSlots) {\n        const {\n          slots,\n          hasDynamicSlots\n        } = buildSlots(node, context);\n        vnodeChildren = slots;\n\n        if (hasDynamicSlots) {\n          patchFlag |= 1024\n          /* DYNAMIC_SLOTS */\n          ;\n        }\n      } else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\n        const child = node.children[0];\n        const type = child.type; // check for dynamic text children\n\n        const hasDynamicTextChild = type === 5\n        /* INTERPOLATION */\n        || type === 8\n        /* COMPOUND_EXPRESSION */\n        ;\n\n        if (hasDynamicTextChild && getConstantType(child, context) === 0\n        /* NOT_CONSTANT */\n        ) {\n          patchFlag |= 1\n          /* TEXT */\n          ;\n        } // pass directly if the only child is a text node\n        // (plain / interpolation / expression)\n\n\n        if (hasDynamicTextChild || type === 2\n        /* TEXT */\n        ) {\n          vnodeChildren = child;\n        } else {\n          vnodeChildren = node.children;\n        }\n      } else {\n        vnodeChildren = node.children;\n      }\n    } // patchFlag & dynamicPropNames\n\n\n    if (patchFlag !== 0) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (patchFlag < 0) {\n          // special flags (negative and mutually exclusive)\n          vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\n        } else {\n          // bitwise flags\n          const flagNames = Object.keys(PatchFlagNames).map(Number).filter(n => n > 0 && patchFlag & n).map(n => PatchFlagNames[n]).join(`, `);\n          vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\n        }\n      } else {\n        vnodePatchFlag = String(patchFlag);\n      }\n\n      if (dynamicPropNames && dynamicPropNames.length) {\n        vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\n      }\n    }\n\n    node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false\n    /* disableTracking */\n    , isComponent, node.loc);\n  };\n};\n\nfunction resolveComponentType(node, context, ssr = false) {\n  let {\n    tag\n  } = node; // 1. dynamic component\n\n  const isExplicitDynamic = isComponentTag(tag);\n  const isProp = findProp(node, 'is');\n\n  if (isProp) {\n    if (isExplicitDynamic || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n    /* COMPILER_IS_ON_ELEMENT */\n    , context)) {\n      const exp = isProp.type === 6\n      /* ATTRIBUTE */\n      ? isProp.value && createSimpleExpression(isProp.value.content, true) : isProp.exp;\n\n      if (exp) {\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [exp]);\n      }\n    } else if (isProp.type === 6\n    /* ATTRIBUTE */\n    && isProp.value.content.startsWith('vue:')) {\n      // <button is=\"vue:xxx\">\n      // if not <component>, only is value that starts with \"vue:\" will be\n      // treated as component by the parse phase and reach here, unless it's\n      // compat mode where all is values are considered components\n      tag = isProp.value.content.slice(4);\n    }\n  } // 1.5 v-is (TODO: Deprecate)\n\n\n  const isDir = !isExplicitDynamic && findDir(node, 'is');\n\n  if (isDir && isDir.exp) {\n    return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [isDir.exp]);\n  } // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\n\n\n  const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\n\n  if (builtIn) {\n    // built-ins are simply fallthroughs / have special handling during ssr\n    // so we don't need to import their runtime equivalents\n    if (!ssr) context.helper(builtIn);\n    return builtIn;\n  } // 5. user component (resolve)\n\n\n  context.helper(RESOLVE_COMPONENT);\n  context.components.add(tag);\n  return toValidAssetId(tag, `component`);\n}\n\nfunction buildProps(node, context, props = node.props, ssr = false) {\n  const {\n    tag,\n    loc: elementLoc,\n    children\n  } = node;\n  const isComponent = node.tagType === 1\n  /* COMPONENT */\n  ;\n  let properties = [];\n  const mergeArgs = [];\n  const runtimeDirectives = [];\n  const hasChildren = children.length > 0;\n  let shouldUseBlock = false; // patchFlag analysis\n\n  let patchFlag = 0;\n  let hasRef = false;\n  let hasClassBinding = false;\n  let hasStyleBinding = false;\n  let hasHydrationEventBinding = false;\n  let hasDynamicKeys = false;\n  let hasVnodeHook = false;\n  const dynamicPropNames = [];\n\n  const analyzePatchFlag = ({\n    key,\n    value\n  }) => {\n    if (isStaticExp(key)) {\n      const name = key.content;\n      const isEventHandler = isOn(name);\n\n      if (!isComponent && isEventHandler && // omit the flag for click handlers because hydration gives click\n      // dedicated fast path.\n      name.toLowerCase() !== 'onclick' && // omit v-model handlers\n      name !== 'onUpdate:modelValue' && // omit onVnodeXXX hooks\n      !isReservedProp(name)) {\n        hasHydrationEventBinding = true;\n      }\n\n      if (isEventHandler && isReservedProp(name)) {\n        hasVnodeHook = true;\n      }\n\n      if (value.type === 20\n      /* JS_CACHE_EXPRESSION */\n      || (value.type === 4\n      /* SIMPLE_EXPRESSION */\n      || value.type === 8\n      /* COMPOUND_EXPRESSION */\n      ) && getConstantType(value, context) > 0) {\n        // skip if the prop is a cached handler or has constant value\n        return;\n      }\n\n      if (name === 'ref') {\n        hasRef = true;\n      } else if (name === 'class') {\n        hasClassBinding = true;\n      } else if (name === 'style') {\n        hasStyleBinding = true;\n      } else if (name !== 'key' && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      } // treat the dynamic class and style binding of the component as dynamic props\n\n\n      if (isComponent && (name === 'class' || name === 'style') && !dynamicPropNames.includes(name)) {\n        dynamicPropNames.push(name);\n      }\n    } else {\n      hasDynamicKeys = true;\n    }\n  };\n\n  for (let i = 0; i < props.length; i++) {\n    // static attribute\n    const prop = props[i];\n\n    if (prop.type === 6\n    /* ATTRIBUTE */\n    ) {\n      const {\n        loc,\n        name,\n        value\n      } = prop;\n      let isStatic = true;\n\n      if (name === 'ref') {\n        hasRef = true;\n\n        if (context.scopes.vFor > 0) {\n          properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n        }\n      } // skip is on <component>, or is=\"vue:xxx\"\n\n\n      if (name === 'is' && (isComponentTag(tag) || value && value.content.startsWith('vue:') || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n      /* COMPILER_IS_ON_ELEMENT */\n      , context))) {\n        continue;\n      }\n\n      properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\n    } else {\n      // directives\n      const {\n        name,\n        arg,\n        exp,\n        loc\n      } = prop;\n      const isVBind = name === 'bind';\n      const isVOn = name === 'on'; // skip v-slot - it is handled by its dedicated transform.\n\n      if (name === 'slot') {\n        if (!isComponent) {\n          context.onError(createCompilerError(40\n          /* X_V_SLOT_MISPLACED */\n          , loc));\n        }\n\n        continue;\n      } // skip v-once/v-memo - they are handled by dedicated transforms.\n\n\n      if (name === 'once' || name === 'memo') {\n        continue;\n      } // skip v-is and :is on <component>\n\n\n      if (name === 'is' || isVBind && isStaticArgOf(arg, 'is') && (isComponentTag(tag) || isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\"\n      /* COMPILER_IS_ON_ELEMENT */\n      , context))) {\n        continue;\n      } // skip v-on in SSR compilation\n\n\n      if (isVOn && ssr) {\n        continue;\n      }\n\n      if ( // #938: elements with dynamic keys should be forced into blocks\n      isVBind && isStaticArgOf(arg, 'key') || // inline before-update hooks need to force block so that it is invoked\n      // before children\n      isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update')) {\n        shouldUseBlock = true;\n      }\n\n      if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\n        properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\n      } // special case for v-bind and v-on with no argument\n\n\n      if (!arg && (isVBind || isVOn)) {\n        hasDynamicKeys = true;\n\n        if (exp) {\n          if (properties.length) {\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n            properties = [];\n          }\n\n          if (isVBind) {\n            {\n              // 2.x v-bind object order compat\n              if (process.env.NODE_ENV !== 'production') {\n                const hasOverridableKeys = mergeArgs.some(arg => {\n                  if (arg.type === 15\n                  /* JS_OBJECT_EXPRESSION */\n                  ) {\n                    return arg.properties.some(({\n                      key\n                    }) => {\n                      if (key.type !== 4\n                      /* SIMPLE_EXPRESSION */\n                      || !key.isStatic) {\n                        return true;\n                      }\n\n                      return key.content !== 'class' && key.content !== 'style' && !isOn(key.content);\n                    });\n                  } else {\n                    // dynamic expression\n                    return true;\n                  }\n                });\n\n                if (hasOverridableKeys) {\n                  checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\"\n                  /* COMPILER_V_BIND_OBJECT_ORDER */\n                  , context, loc);\n                }\n              }\n\n              if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\"\n              /* COMPILER_V_BIND_OBJECT_ORDER */\n              , context)) {\n                mergeArgs.unshift(exp);\n                continue;\n              }\n            }\n            mergeArgs.push(exp);\n          } else {\n            // v-on=\"obj\" -> toHandlers(obj)\n            mergeArgs.push({\n              type: 14\n              /* JS_CALL_EXPRESSION */\n              ,\n              loc,\n              callee: context.helper(TO_HANDLERS),\n              arguments: [exp]\n            });\n          }\n        } else {\n          context.onError(createCompilerError(isVBind ? 34\n          /* X_V_BIND_NO_EXPRESSION */\n          : 35\n          /* X_V_ON_NO_EXPRESSION */\n          , loc));\n        }\n\n        continue;\n      }\n\n      const directiveTransform = context.directiveTransforms[name];\n\n      if (directiveTransform) {\n        // has built-in directive transform.\n        const {\n          props,\n          needRuntime\n        } = directiveTransform(prop, node, context);\n        !ssr && props.forEach(analyzePatchFlag);\n        properties.push(...props);\n\n        if (needRuntime) {\n          runtimeDirectives.push(prop);\n\n          if (isSymbol(needRuntime)) {\n            directiveImportMap.set(prop, needRuntime);\n          }\n        }\n      } else if (!isBuiltInDirective(name)) {\n        // no built-in transform, this is a user custom directive.\n        runtimeDirectives.push(prop); // custom dirs may use beforeUpdate so they need to force blocks\n        // to ensure before-update gets called before children update\n\n        if (hasChildren) {\n          shouldUseBlock = true;\n        }\n      }\n    }\n  }\n\n  let propsExpression = undefined; // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\n\n  if (mergeArgs.length) {\n    if (properties.length) {\n      mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\n    }\n\n    if (mergeArgs.length > 1) {\n      propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\n    } else {\n      // single v-bind with nothing else - no need for a mergeProps call\n      propsExpression = mergeArgs[0];\n    }\n  } else if (properties.length) {\n    propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\n  } // patchFlag analysis\n\n\n  if (hasDynamicKeys) {\n    patchFlag |= 16\n    /* FULL_PROPS */\n    ;\n  } else {\n    if (hasClassBinding && !isComponent) {\n      patchFlag |= 2\n      /* CLASS */\n      ;\n    }\n\n    if (hasStyleBinding && !isComponent) {\n      patchFlag |= 4\n      /* STYLE */\n      ;\n    }\n\n    if (dynamicPropNames.length) {\n      patchFlag |= 8\n      /* PROPS */\n      ;\n    }\n\n    if (hasHydrationEventBinding) {\n      patchFlag |= 32\n      /* HYDRATE_EVENTS */\n      ;\n    }\n  }\n\n  if (!shouldUseBlock && (patchFlag === 0 || patchFlag === 32\n  /* HYDRATE_EVENTS */\n  ) && (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\n    patchFlag |= 512\n    /* NEED_PATCH */\n    ;\n  } // pre-normalize props, SSR is skipped for now\n\n\n  if (!context.inSSR && propsExpression) {\n    switch (propsExpression.type) {\n      case 15\n      /* JS_OBJECT_EXPRESSION */\n      :\n        // means that there is no v-bind,\n        // but still need to deal with dynamic key binding\n        let classKeyIndex = -1;\n        let styleKeyIndex = -1;\n        let hasDynamicKey = false;\n\n        for (let i = 0; i < propsExpression.properties.length; i++) {\n          const key = propsExpression.properties[i].key;\n\n          if (isStaticExp(key)) {\n            if (key.content === 'class') {\n              classKeyIndex = i;\n            } else if (key.content === 'style') {\n              styleKeyIndex = i;\n            }\n          } else if (!key.isHandlerKey) {\n            hasDynamicKey = true;\n          }\n        }\n\n        const classProp = propsExpression.properties[classKeyIndex];\n        const styleProp = propsExpression.properties[styleKeyIndex]; // no dynamic key\n\n        if (!hasDynamicKey) {\n          if (classProp && !isStaticExp(classProp.value)) {\n            classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\n          }\n\n          if (styleProp && !isStaticExp(styleProp.value) && ( // the static style is compiled into an object,\n          // so use `hasStyleBinding` to ensure that it is a dynamic style binding\n          hasStyleBinding || // v-bind:style and style both exist,\n          // v-bind:style with static literal object\n          styleProp.value.type === 17\n          /* JS_ARRAY_EXPRESSION */\n          )) {\n            styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\n          }\n        } else {\n          // dynamic key binding, wrap with `normalizeProps`\n          propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\n        }\n\n        break;\n\n      case 14\n      /* JS_CALL_EXPRESSION */\n      :\n        // mergeProps call, do nothing\n        break;\n\n      default:\n        // single v-bind\n        propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [propsExpression])]);\n        break;\n    }\n  }\n\n  return {\n    props: propsExpression,\n    directives: runtimeDirectives,\n    patchFlag,\n    dynamicPropNames,\n    shouldUseBlock\n  };\n} // Dedupe props in an object literal.\n// Literal duplicated attributes would have been warned during the parse phase,\n// however, it's possible to encounter duplicated `onXXX` handlers with different\n// modifiers. We also need to merge static and dynamic class / style attributes.\n// - onXXX handlers / style: merge into array\n// - class: merge into single expression with concatenation\n\n\nfunction dedupeProperties(properties) {\n  const knownProps = new Map();\n  const deduped = [];\n\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i]; // dynamic keys are always allowed\n\n    if (prop.key.type === 8\n    /* COMPOUND_EXPRESSION */\n    || !prop.key.isStatic) {\n      deduped.push(prop);\n      continue;\n    }\n\n    const name = prop.key.content;\n    const existing = knownProps.get(name);\n\n    if (existing) {\n      if (name === 'style' || name === 'class' || isOn(name)) {\n        mergeAsArray(existing, prop);\n      } // unexpected duplicate, should have emitted error during parse\n\n    } else {\n      knownProps.set(name, prop);\n      deduped.push(prop);\n    }\n  }\n\n  return deduped;\n}\n\nfunction mergeAsArray(existing, incoming) {\n  if (existing.value.type === 17\n  /* JS_ARRAY_EXPRESSION */\n  ) {\n    existing.value.elements.push(incoming.value);\n  } else {\n    existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\n  }\n}\n\nfunction buildDirectiveArgs(dir, context) {\n  const dirArgs = [];\n  const runtime = directiveImportMap.get(dir);\n\n  if (runtime) {\n    // built-in directive with runtime\n    dirArgs.push(context.helperString(runtime));\n  } else {\n    {\n      // inject statement for resolving directive\n      context.helper(RESOLVE_DIRECTIVE);\n      context.directives.add(dir.name);\n      dirArgs.push(toValidAssetId(dir.name, `directive`));\n    }\n  }\n\n  const {\n    loc\n  } = dir;\n  if (dir.exp) dirArgs.push(dir.exp);\n\n  if (dir.arg) {\n    if (!dir.exp) {\n      dirArgs.push(`void 0`);\n    }\n\n    dirArgs.push(dir.arg);\n  }\n\n  if (Object.keys(dir.modifiers).length) {\n    if (!dir.arg) {\n      if (!dir.exp) {\n        dirArgs.push(`void 0`);\n      }\n\n      dirArgs.push(`void 0`);\n    }\n\n    const trueExpression = createSimpleExpression(`true`, false, loc);\n    dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\n  }\n\n  return createArrayExpression(dirArgs, dir.loc);\n}\n\nfunction stringifyDynamicPropNames(props) {\n  let propsNamesString = `[`;\n\n  for (let i = 0, l = props.length; i < l; i++) {\n    propsNamesString += JSON.stringify(props[i]);\n    if (i < l - 1) propsNamesString += ', ';\n  }\n\n  return propsNamesString + `]`;\n}\n\nfunction isComponentTag(tag) {\n  return tag === 'component' || tag === 'Component';\n}\n\nprocess.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nprocess.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\n\nconst cacheStringFunction = fn => {\n  const cache = Object.create(null);\n  return str => {\n    const hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n};\n\nconst camelizeRE = /-(\\w)/g;\n/**\r\n * @private\r\n */\n\nconst camelize = cacheStringFunction(str => {\n  return str.replace(camelizeRE, (_, c) => c ? c.toUpperCase() : '');\n});\n\nconst transformSlotOutlet = (node, context) => {\n  if (isSlotOutlet(node)) {\n    const {\n      children,\n      loc\n    } = node;\n    const {\n      slotName,\n      slotProps\n    } = processSlotOutlet(node, context);\n    const slotArgs = [context.prefixIdentifiers ? `_ctx.$slots` : `$slots`, slotName, '{}', 'undefined', 'true'];\n    let expectedLen = 2;\n\n    if (slotProps) {\n      slotArgs[2] = slotProps;\n      expectedLen = 3;\n    }\n\n    if (children.length) {\n      slotArgs[3] = createFunctionExpression([], children, false, false, loc);\n      expectedLen = 4;\n    }\n\n    if (context.scopeId && !context.slotted) {\n      expectedLen = 5;\n    }\n\n    slotArgs.splice(expectedLen); // remove unused arguments\n\n    node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\n  }\n};\n\nfunction processSlotOutlet(node, context) {\n  let slotName = `\"default\"`;\n  let slotProps = undefined;\n  const nonNameProps = [];\n\n  for (let i = 0; i < node.props.length; i++) {\n    const p = node.props[i];\n\n    if (p.type === 6\n    /* ATTRIBUTE */\n    ) {\n      if (p.value) {\n        if (p.name === 'name') {\n          slotName = JSON.stringify(p.value.content);\n        } else {\n          p.name = camelize(p.name);\n          nonNameProps.push(p);\n        }\n      }\n    } else {\n      if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\n        if (p.exp) slotName = p.exp;\n      } else {\n        if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\n          p.arg.content = camelize(p.arg.content);\n        }\n\n        nonNameProps.push(p);\n      }\n    }\n  }\n\n  if (nonNameProps.length > 0) {\n    const {\n      props,\n      directives\n    } = buildProps(node, context, nonNameProps);\n    slotProps = props;\n\n    if (directives.length) {\n      context.onError(createCompilerError(36\n      /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */\n      , directives[0].loc));\n    }\n  }\n\n  return {\n    slotName,\n    slotProps\n  };\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\n\nconst transformOn = (dir, node, context, augmentor) => {\n  const {\n    loc,\n    modifiers,\n    arg\n  } = dir;\n\n  if (!dir.exp && !modifiers.length) {\n    context.onError(createCompilerError(35\n    /* X_V_ON_NO_EXPRESSION */\n    , loc));\n  }\n\n  let eventName;\n\n  if (arg.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    if (arg.isStatic) {\n      let rawName = arg.content; // TODO deprecate @vnodeXXX usage\n\n      if (rawName.startsWith('vue:')) {\n        rawName = `vnode-${rawName.slice(4)}`;\n      } // for all event listeners, auto convert it to camelCase. See issue #2249\n\n\n      eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\n    } else {\n      // #2388\n      eventName = createCompoundExpression([`${context.helperString(TO_HANDLER_KEY)}(`, arg, `)`]);\n    }\n  } else {\n    // already a compound expression.\n    eventName = arg;\n    eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\n    eventName.children.push(`)`);\n  } // handler processing\n\n\n  let exp = dir.exp;\n\n  if (exp && !exp.content.trim()) {\n    exp = undefined;\n  }\n\n  let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\n\n  if (exp) {\n    const isMemberExp = isMemberExpression(exp.content);\n    const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\n    const hasMultipleStatements = exp.content.includes(`;`);\n\n    if (process.env.NODE_ENV !== 'production' && true) {\n      validateBrowserExpression(exp, context, false, hasMultipleStatements);\n    }\n\n    if (isInlineStatement || shouldCache && isMemberExp) {\n      // wrap inline statement in a function expression\n      exp = createCompoundExpression([`${isInlineStatement ? `$event` : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`, exp, hasMultipleStatements ? `}` : `)`]);\n    }\n  }\n\n  let ret = {\n    props: [createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))]\n  }; // apply extended compiler augmentor\n\n  if (augmentor) {\n    ret = augmentor(ret);\n  }\n\n  if (shouldCache) {\n    // cache handlers so that it's always the same handler being passed down.\n    // this avoids unnecessary re-renders when users use inline handlers on\n    // components.\n    ret.props[0].value = context.cache(ret.props[0].value);\n  } // mark the key as handler for props normalization check\n\n\n  ret.props.forEach(p => p.key.isHandlerKey = true);\n  return ret;\n}; // v-bind without arg is handled directly in ./transformElements.ts due to it affecting\n// codegen for the entire props object. This transform here is only for v-bind\n// *with* args.\n\n\nconst transformBind = (dir, _node, context) => {\n  const {\n    exp,\n    modifiers,\n    loc\n  } = dir;\n  const arg = dir.arg;\n\n  if (arg.type !== 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    arg.children.unshift(`(`);\n    arg.children.push(`) || \"\"`);\n  } else if (!arg.isStatic) {\n    arg.content = `${arg.content} || \"\"`;\n  } // .sync is replaced by v-model:arg\n\n\n  if (modifiers.includes('camel')) {\n    if (arg.type === 4\n    /* SIMPLE_EXPRESSION */\n    ) {\n      if (arg.isStatic) {\n        arg.content = camelize$1(arg.content);\n      } else {\n        arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\n      }\n    } else {\n      arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\n      arg.children.push(`)`);\n    }\n  }\n\n  if (!context.inSSR) {\n    if (modifiers.includes('prop')) {\n      injectPrefix(arg, '.');\n    }\n\n    if (modifiers.includes('attr')) {\n      injectPrefix(arg, '^');\n    }\n  }\n\n  if (!exp || exp.type === 4\n  /* SIMPLE_EXPRESSION */\n  && !exp.content.trim()) {\n    context.onError(createCompilerError(34\n    /* X_V_BIND_NO_EXPRESSION */\n    , loc));\n    return {\n      props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\n    };\n  }\n\n  return {\n    props: [createObjectProperty(arg, exp)]\n  };\n};\n\nconst injectPrefix = (arg, prefix) => {\n  if (arg.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    if (arg.isStatic) {\n      arg.content = prefix + arg.content;\n    } else {\n      arg.content = `\\`${prefix}\\${${arg.content}}\\``;\n    }\n  } else {\n    arg.children.unshift(`'${prefix}' + (`);\n    arg.children.push(`)`);\n  }\n}; // Merge adjacent text nodes and expressions into a single expression\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\n\n\nconst transformText = (node, context) => {\n  if (node.type === 0\n  /* ROOT */\n  || node.type === 1\n  /* ELEMENT */\n  || node.type === 11\n  /* FOR */\n  || node.type === 10\n  /* IF_BRANCH */\n  ) {\n    // perform the transform on node exit so that all expressions have already\n    // been processed.\n    return () => {\n      const children = node.children;\n      let currentContainer = undefined;\n      let hasText = false;\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n\n        if (isText(child)) {\n          hasText = true;\n\n          for (let j = i + 1; j < children.length; j++) {\n            const next = children[j];\n\n            if (isText(next)) {\n              if (!currentContainer) {\n                currentContainer = children[i] = {\n                  type: 8\n                  /* COMPOUND_EXPRESSION */\n                  ,\n                  loc: child.loc,\n                  children: [child]\n                };\n              } // merge adjacent text node into current\n\n\n              currentContainer.children.push(` + `, next);\n              children.splice(j, 1);\n              j--;\n            } else {\n              currentContainer = undefined;\n              break;\n            }\n          }\n        }\n      }\n\n      if (!hasText || // if this is a plain element with a single text child, leave it\n      // as-is since the runtime has dedicated fast path for this by directly\n      // setting textContent of the element.\n      // for component root it's always normalized anyway.\n      children.length === 1 && (node.type === 0\n      /* ROOT */\n      || node.type === 1\n      /* ELEMENT */\n      && node.tagType === 0\n      /* ELEMENT */\n      && // #3756\n      // custom directives can potentially add DOM elements arbitrarily,\n      // we need to avoid setting textContent of the element at runtime\n      // to avoid accidentally overwriting the DOM elements added\n      // by the user through custom directives.\n      !node.props.find(p => p.type === 7\n      /* DIRECTIVE */\n      && !context.directiveTransforms[p.name]) && // in compat mode, <template> tags with no special directives\n      // will be rendered as a fragment so its children must be\n      // converted into vnodes.\n      !(node.tag === 'template'))) {\n        return;\n      } // pre-convert text nodes into createTextVNode(text) calls to avoid\n      // runtime normalization.\n\n\n      for (let i = 0; i < children.length; i++) {\n        const child = children[i];\n\n        if (isText(child) || child.type === 8\n        /* COMPOUND_EXPRESSION */\n        ) {\n          const callArgs = []; // createTextVNode defaults to single whitespace, so if it is a\n          // single space the code could be an empty call to save bytes.\n\n          if (child.type !== 2\n          /* TEXT */\n          || child.content !== ' ') {\n            callArgs.push(child);\n          } // mark dynamic text with flag so it gets patched inside a block\n\n\n          if (!context.ssr && getConstantType(child, context) === 0\n          /* NOT_CONSTANT */\n          ) {\n            callArgs.push(1\n            /* TEXT */\n            + (process.env.NODE_ENV !== 'production' ? ` /* ${PatchFlagNames[1\n            /* TEXT */\n            ]} */` : ``));\n          }\n\n          children[i] = {\n            type: 12\n            /* TEXT_CALL */\n            ,\n            content: child,\n            loc: child.loc,\n            codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\n          };\n        }\n      }\n    };\n  }\n};\n\nconst seen = new WeakSet();\n\nconst transformOnce = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  && findDir(node, 'once', true)) {\n    if (seen.has(node) || context.inVOnce) {\n      return;\n    }\n\n    seen.add(node);\n    context.inVOnce = true;\n    context.helper(SET_BLOCK_TRACKING);\n    return () => {\n      context.inVOnce = false;\n      const cur = context.currentNode;\n\n      if (cur.codegenNode) {\n        cur.codegenNode = context.cache(cur.codegenNode, true\n        /* isVNode */\n        );\n      }\n    };\n  }\n};\n\nconst transformModel = (dir, node, context) => {\n  const {\n    exp,\n    arg\n  } = dir;\n\n  if (!exp) {\n    context.onError(createCompilerError(41\n    /* X_V_MODEL_NO_EXPRESSION */\n    , dir.loc));\n    return createTransformProps();\n  }\n\n  const rawExp = exp.loc.source;\n  const expString = exp.type === 4\n  /* SIMPLE_EXPRESSION */\n  ? exp.content : rawExp; // im SFC <script setup> inline mode, the exp may have been transformed into\n  // _unref(exp)\n\n  context.bindingMetadata[rawExp];\n  const maybeRef = !true\n  /* SETUP_CONST */\n  ;\n\n  if (!expString.trim() || !isMemberExpression(expString) && !maybeRef) {\n    context.onError(createCompilerError(42\n    /* X_V_MODEL_MALFORMED_EXPRESSION */\n    , exp.loc));\n    return createTransformProps();\n  }\n\n  const propName = arg ? arg : createSimpleExpression('modelValue', true);\n  const eventName = arg ? isStaticExp(arg) ? `onUpdate:${arg.content}` : createCompoundExpression(['\"onUpdate:\" + ', arg]) : `onUpdate:modelValue`;\n  let assignmentExp;\n  const eventArg = context.isTS ? `($event: any)` : `$event`;\n  {\n    assignmentExp = createCompoundExpression([`${eventArg} => ((`, exp, `) = $event)`]);\n  }\n  const props = [// modelValue: foo\n  createObjectProperty(propName, dir.exp), // \"onUpdate:modelValue\": $event => (foo = $event)\n  createObjectProperty(eventName, assignmentExp)]; // modelModifiers: { foo: true, \"bar-baz\": true }\n\n  if (dir.modifiers.length && node.tagType === 1\n  /* COMPONENT */\n  ) {\n    const modifiers = dir.modifiers.map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`).join(`, `);\n    const modifiersKey = arg ? isStaticExp(arg) ? `${arg.content}Modifiers` : createCompoundExpression([arg, ' + \"Modifiers\"']) : `modelModifiers`;\n    props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2\n    /* CAN_HOIST */\n    )));\n  }\n\n  return createTransformProps(props);\n};\n\nfunction createTransformProps(props = []) {\n  return {\n    props\n  };\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nconst transformFilter = (node, context) => {\n  if (!isCompatEnabled(\"COMPILER_FILTER\"\n  /* COMPILER_FILTERS */\n  , context)) {\n    return;\n  }\n\n  if (node.type === 5\n  /* INTERPOLATION */\n  ) {\n    // filter rewrite is applied before expression transform so only\n    // simple expressions are possible at this stage\n    rewriteFilter(node.content, context);\n  }\n\n  if (node.type === 1\n  /* ELEMENT */\n  ) {\n    node.props.forEach(prop => {\n      if (prop.type === 7\n      /* DIRECTIVE */\n      && prop.name !== 'for' && prop.exp) {\n        rewriteFilter(prop.exp, context);\n      }\n    });\n  }\n};\n\nfunction rewriteFilter(node, context) {\n  if (node.type === 4\n  /* SIMPLE_EXPRESSION */\n  ) {\n    parseFilter(node, context);\n  } else {\n    for (let i = 0; i < node.children.length; i++) {\n      const child = node.children[i];\n      if (typeof child !== 'object') continue;\n\n      if (child.type === 4\n      /* SIMPLE_EXPRESSION */\n      ) {\n        parseFilter(child, context);\n      } else if (child.type === 8\n      /* COMPOUND_EXPRESSION */\n      ) {\n        rewriteFilter(node, context);\n      } else if (child.type === 5\n      /* INTERPOLATION */\n      ) {\n        rewriteFilter(child.content, context);\n      }\n    }\n  }\n}\n\nfunction parseFilter(node, context) {\n  const exp = node.content;\n  let inSingle = false;\n  let inDouble = false;\n  let inTemplateString = false;\n  let inRegex = false;\n  let curly = 0;\n  let square = 0;\n  let paren = 0;\n  let lastFilterIndex = 0;\n  let c,\n      prev,\n      i,\n      expression,\n      filters = [];\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5c) inSingle = false;\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5c) inDouble = false;\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5c) inTemplateString = false;\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5c) inRegex = false;\n    } else if (c === 0x7c && // pipe\n    exp.charCodeAt(i + 1) !== 0x7c && exp.charCodeAt(i - 1) !== 0x7c && !curly && !square && !paren) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;\n          break;\n        // \"\n\n        case 0x27:\n          inSingle = true;\n          break;\n        // '\n\n        case 0x60:\n          inTemplateString = true;\n          break;\n        // `\n\n        case 0x28:\n          paren++;\n          break;\n        // (\n\n        case 0x29:\n          paren--;\n          break;\n        // )\n\n        case 0x5b:\n          square++;\n          break;\n        // [\n\n        case 0x5d:\n          square--;\n          break;\n        // ]\n\n        case 0x7b:\n          curly++;\n          break;\n        // {\n\n        case 0x7d:\n          curly--;\n          break;\n        // }\n      }\n\n      if (c === 0x2f) {\n        // /\n        let j = i - 1;\n        let p; // find first non-whitespace prev char\n\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') break;\n        }\n\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter() {\n    filters.push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters.length) {\n    process.env.NODE_ENV !== 'production' && warnDeprecation(\"COMPILER_FILTER\"\n    /* COMPILER_FILTERS */\n    , context, node.loc);\n\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i], context);\n    }\n\n    node.content = expression;\n  }\n}\n\nfunction wrapFilter(exp, filter, context) {\n  context.helper(RESOLVE_FILTER);\n  const i = filter.indexOf('(');\n\n  if (i < 0) {\n    context.filters.add(filter);\n    return `${toValidAssetId(filter, 'filter')}(${exp})`;\n  } else {\n    const name = filter.slice(0, i);\n    const args = filter.slice(i + 1);\n    context.filters.add(name);\n    return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\n  }\n}\n\nconst seen$1 = new WeakSet();\n\nconst transformMemo = (node, context) => {\n  if (node.type === 1\n  /* ELEMENT */\n  ) {\n    const dir = findDir(node, 'memo');\n\n    if (!dir || seen$1.has(node)) {\n      return;\n    }\n\n    seen$1.add(node);\n    return () => {\n      const codegenNode = node.codegenNode || context.currentNode.codegenNode;\n\n      if (codegenNode && codegenNode.type === 13\n      /* VNODE_CALL */\n      ) {\n        // non-component sub tree should be turned into a block\n        if (node.tagType !== 1\n        /* COMPONENT */\n        ) {\n          makeBlock(codegenNode, context);\n        }\n\n        node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [dir.exp, createFunctionExpression(undefined, codegenNode), `_cache`, String(context.cached++)]);\n      }\n    };\n  }\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\n  return [[transformOnce, transformIf, transformMemo, transformFor, ...[transformFilter], ...(process.env.NODE_ENV !== 'production' ? [transformExpression] : []), transformSlotOutlet, transformElement, trackSlotScopes, transformText], {\n    on: transformOn,\n    bind: transformBind,\n    model: transformModel\n  }];\n} // we name it `baseCompile` so that higher order compilers like\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\n\n\nfunction baseCompile(template, options = {}) {\n  const onError = options.onError || defaultOnError;\n  const isModuleMode = options.mode === 'module';\n  /* istanbul ignore if */\n\n  {\n    if (options.prefixIdentifiers === true) {\n      onError(createCompilerError(46\n      /* X_PREFIX_ID_NOT_SUPPORTED */\n      ));\n    } else if (isModuleMode) {\n      onError(createCompilerError(47\n      /* X_MODULE_MODE_NOT_SUPPORTED */\n      ));\n    }\n  }\n  const prefixIdentifiers = !true;\n\n  if (options.cacheHandlers) {\n    onError(createCompilerError(48\n    /* X_CACHE_HANDLER_NOT_SUPPORTED */\n    ));\n  }\n\n  if (options.scopeId && !isModuleMode) {\n    onError(createCompilerError(49\n    /* X_SCOPE_ID_NOT_SUPPORTED */\n    ));\n  }\n\n  const ast = isString(template) ? baseParse(template, options) : template;\n  const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\n  transform(ast, extend({}, options, {\n    prefixIdentifiers,\n    nodeTransforms: [...nodeTransforms, ...(options.nodeTransforms || []) // user transforms\n    ],\n    directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\n    )\n  }));\n  return generate(ast, extend({}, options, {\n    prefixIdentifiers\n  }));\n}\n\nconst noopDirectiveTransform = () => ({\n  props: []\n});\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/@vue/compiler-core/dist/compiler-core.esm-bundler.js"],"names":["isString","hyphenate","NOOP","extend","isObject","NO","isArray","makeMap","isSymbol","EMPTY_OBJ","capitalize","camelize","camelize$1","PatchFlagNames","slotFlagsText","isOn","isBuiltInDirective","isReservedProp","toHandlerKey","generateCodeFrame","defaultOnError","error","defaultOnWarn","msg","process","env","NODE_ENV","console","warn","message","createCompilerError","code","loc","messages","additionalMessage","errorMessages","SyntaxError","String","FRAGMENT","Symbol","TELEPORT","SUSPENSE","KEEP_ALIVE","BASE_TRANSITION","OPEN_BLOCK","CREATE_BLOCK","CREATE_ELEMENT_BLOCK","CREATE_VNODE","CREATE_ELEMENT_VNODE","CREATE_COMMENT","CREATE_TEXT","CREATE_STATIC","RESOLVE_COMPONENT","RESOLVE_DYNAMIC_COMPONENT","RESOLVE_DIRECTIVE","RESOLVE_FILTER","WITH_DIRECTIVES","RENDER_LIST","RENDER_SLOT","CREATE_SLOTS","TO_DISPLAY_STRING","MERGE_PROPS","NORMALIZE_CLASS","NORMALIZE_STYLE","NORMALIZE_PROPS","GUARD_REACTIVE_PROPS","TO_HANDLERS","CAMELIZE","CAPITALIZE","TO_HANDLER_KEY","SET_BLOCK_TRACKING","PUSH_SCOPE_ID","POP_SCOPE_ID","WITH_CTX","UNREF","IS_REF","WITH_MEMO","IS_MEMO_SAME","helperNameMap","registerRuntimeHelpers","helpers","Object","getOwnPropertySymbols","forEach","s","locStub","source","start","line","column","offset","end","createRoot","children","type","components","directives","hoists","imports","cached","temps","codegenNode","undefined","createVNodeCall","context","tag","props","patchFlag","dynamicProps","isBlock","disableTracking","isComponent","helper","getVNodeBlockHelper","inSSR","getVNodeHelper","createArrayExpression","elements","createObjectExpression","properties","createObjectProperty","key","value","createSimpleExpression","content","isStatic","constType","createInterpolation","createCompoundExpression","createCallExpression","callee","args","arguments","createFunctionExpression","params","returns","newline","isSlot","createConditionalExpression","test","consequent","alternate","createCacheExpression","index","isVNode","createBlockStatement","body","createTemplateLiteral","createIfStatement","createAssignmentExpression","left","right","createSequenceExpression","expressions","createReturnStatement","isStaticExp","p","isBuiltInType","expected","isCoreComponent","nonIdentifierRE","isSimpleIdentifier","name","validFirstIdentCharRE","validIdentCharRE","whitespaceRE","isMemberExpressionBrowser","path","trim","replace","state","stateStack","currentOpenBracketCount","currentOpenParensCount","currentStringType","i","length","char","charAt","push","pop","isMemberExpressionNode","isMemberExpression","getInnerRange","slice","newLoc","advancePositionWithClone","pos","numberOfCharacters","advancePositionWithMutation","linesCount","lastNewLinePos","charCodeAt","assert","condition","Error","findDir","node","allowEmpty","exp","findProp","dynamicOnly","isStaticArgOf","arg","hasDynamicKeyVBind","some","isText","isVSlot","isTemplateNode","tagType","isSlotOutlet","ssr","propsHelperSet","Set","getUnnormalizedProps","callPath","has","concat","injectProp","prop","propsWithInjection","parentCall","ret","first","unshift","alreadyExists","propKeyName","toValidAssetId","searchValue","replaceValue","toString","hasScopeRef","ids","keys","c","branches","b","getMemoedVNodeCall","makeBlock","removeHelper","deprecationData","link","getCompatValue","config","options","compatConfig","isCompatEnabled","mode","checkCompatEnabled","enabled","warnDeprecation","val","err","onWarn","decodeRE","decodeMap","gt","lt","amp","apos","quot","defaultParserOptions","delimiters","getNamespace","getTextMode","isVoidTag","isPreTag","isCustomElement","decodeEntities","rawText","_","p1","onError","comments","baseParse","createParserContext","getCursor","parseChildren","getSelection","rawOptions","originalSource","inPre","inVPre","ancestors","parent","last","ns","nodes","isEnd","startsWith","parseInterpolation","emitError","parseComment","parseBogusComment","parseCDATA","advanceBy","parseTag","parseElement","isSpecialTemplateDirective","parseText","pushNode","removedWhitespace","shouldCondense","whitespace","prev","next","filter","Boolean","match","exec","prevIndex","nestedIndex","indexOf","contentStart","closeIndex","wasInPre","wasInVPre","element","isPreBoundary","isVPreBoundary","isSelfClosing","inlineTemplateProp","find","startsWithEndTagOpen","toLowerCase","advanceSpaces","cursor","currentSource","parseAttributes","hasIf","hasFor","isBuiltInComponent","isNativeTag","attributeNames","attr","parseAttribute","nameSet","add","pattern","m","parseAttributeValue","isPropShorthand","dirName","startOffset","lastIndexOf","getNewPosition","endsWith","isQuoted","valueLoc","modifiers","split","includes","splice","quote","endIndex","parseTextData","unexpectedChars","open","close","innerStart","innerEnd","rawContentLength","rawContent","preTrimContent","endOffset","endTokens","xs","searchString","hoistStatic","root","walk","isSingleElementRoot","child","doNotHoistNode","originalCount","hoistedCount","constantType","getConstantType","hoist","flag","getPatchFlag","getGeneratedPropsConstantType","getNodeProps","scopes","vSlot","transformHoist","constantCache","get","returnType","generatedPropsType","set","childType","expType","allowHoistedHelperSet","getConstantTypeOfHelperCall","keyType","valueType","parseInt","createTransformContext","filename","prefixIdentifiers","cacheHandlers","nodeTransforms","directiveTransforms","expressionPlugins","scopeId","slotted","ssrCssVars","bindingMetadata","inline","isTS","nameMatch","selfName","Map","identifiers","create","vFor","vPre","vOnce","currentNode","childIndex","inVOnce","count","currentCount","delete","helperString","replaceNode","removeNode","list","removalIndex","onNodeRemoved","addIdentifiers","removeIdentifiers","identifier","hoisted","cache","filters","transform","traverseNode","createRootCodegen","patchFlagText","traverseChildren","nodeRemoved","exitFns","onExit","createStructuralDirectiveTransform","fn","matches","n","PURE_ANNOTATION","createCodegenContext","ast","sourceMap","optimizeImports","runtimeGlobalName","runtimeModuleName","ssrRuntimeModuleName","indentLevel","pure","map","indent","deindent","withoutNewLine","repeat","generate","onContextCreated","hasHelpers","useWithBlock","preambleContext","genFunctionPreamble","functionName","signature","join","genAssets","genNode","preamble","toJSON","VueBinding","aliasHelper","staticHelpers","genHoists","assets","resolver","id","maybeSelfReference","JSON","stringify","isText$1","genNodeListAsArray","multilines","genNodeList","comma","genText","genExpression","genInterpolation","genCompoundExpression","genComment","genVNodeCall","genCallExpression","genObjectExpression","genArrayExpression","genFunctionExpression","genConditionalExpression","genCacheExpression","exhaustiveCheck","genExpressionAsPropertyKey","text","callHelper","genNullableArgs","isNonScopedSlot","needNewline","needsParens","isNested","walkIdentifiers","onIdentifier","includeAll","parentStack","knownIds","isReferencedIdentifier","isInDestructureAssignment","walkFunctionParams","onIdent","extractIdentifiers","walkBlockDeclarations","block","stmt","declare","decl","declarations","param","object","argument","isFunctionType","isStaticProperty","computed","isStaticPropertyKey","prohibitedKeywordRE","RegExp","stripStringRE","validateBrowserExpression","asParams","asRawStatements","Function","e","keywordMatch","transformExpression","processExpression","dir","localVars","transformIf","processIf","ifNode","branch","isRoot","siblings","sibling","createCodegenNodeForBranch","parentCondition","getParentCondition","processCodegen","createIfBranch","userKey","isSameKey","keyIndex","createChildrenCodegenNode","keyProperty","firstChild","needFragmentWrapper","vnodeCall","a","branchExp","transformFor","processFor","forNode","renderExp","isTemplate","memo","keyProp","keyExp","isStableFragment","fragmentFlag","childBlock","slotOutlet","loop","createForLoopParams","parseResult","parseForExpression","valueAlias","keyAlias","objectIndexAlias","forAliasRE","forIteratorRE","stripParensRE","input","inMatch","LHS","RHS","result","createAliasExpression","valueContent","trimmedOffset","iteratorMatch","keyContent","keyOffset","indexContent","range","memoArgs","createParamsList","defaultFallback","trackSlotScopes","trackVForSlotScopes","buildClientSlotFn","buildSlots","buildSlotFn","slotsProperties","dynamicSlots","hasDynamicSlots","onComponentSlot","hasTemplateSlots","hasNamedDefaultSlot","implicitDefaultChildren","seenSlotNames","slotElement","slotDir","slotChildren","slotLoc","slotName","slotProps","dirLoc","staticSlotName","slotFunction","vIf","vElse","buildDynamicSlot","j","conditional","buildDefaultSlotProperty","isNonWhitespaceContent","slotFlag","hasForwardedSlots","slots","directiveImportMap","WeakMap","transformElement","postTransformElement","vnodeTag","resolveComponentType","isDynamicComponent","vnodeProps","vnodeChildren","vnodePatchFlag","vnodeDynamicProps","dynamicPropNames","vnodeDirectives","shouldUseBlock","propsBuildResult","buildProps","buildDirectiveArgs","shouldBuildAsSlots","hasDynamicTextChild","flagNames","Number","stringifyDynamicPropNames","isExplicitDynamic","isComponentTag","isProp","isDir","builtIn","elementLoc","mergeArgs","runtimeDirectives","hasChildren","hasRef","hasClassBinding","hasStyleBinding","hasHydrationEventBinding","hasDynamicKeys","hasVnodeHook","analyzePatchFlag","isEventHandler","isVBind","isVOn","dedupeProperties","hasOverridableKeys","directiveTransform","needRuntime","propsExpression","classKeyIndex","styleKeyIndex","hasDynamicKey","isHandlerKey","classProp","styleProp","knownProps","deduped","existing","mergeAsArray","incoming","dirArgs","runtime","trueExpression","modifier","propsNamesString","l","freeze","cacheStringFunction","str","hit","camelizeRE","toUpperCase","transformSlotOutlet","processSlotOutlet","slotArgs","expectedLen","nonNameProps","fnExpRE","transformOn","augmentor","eventName","rawName","shouldCache","isMemberExp","isInlineStatement","hasMultipleStatements","transformBind","_node","injectPrefix","prefix","transformText","currentContainer","hasText","callArgs","seen","WeakSet","transformOnce","cur","transformModel","createTransformProps","rawExp","expString","maybeRef","propName","assignmentExp","eventArg","modifiersKey","validDivisionCharRE","transformFilter","rewriteFilter","parseFilter","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","expression","pushFilter","wrapFilter","seen$1","transformMemo","getBaseTransformPreset","on","bind","model","baseCompile","template","isModuleMode","noopDirectiveTransform"],"mappings":"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","sourcesContent":["import { isString, hyphenate, NOOP, extend, isObject, NO, isArray, makeMap, isSymbol, EMPTY_OBJ, capitalize, camelize as camelize$1, PatchFlagNames, slotFlagsText, isOn, isBuiltInDirective, isReservedProp, toHandlerKey } from '@vue/shared';\nexport { generateCodeFrame } from '@vue/shared';\n\nfunction defaultOnError(error) {\r\n    throw error;\r\n}\r\nfunction defaultOnWarn(msg) {\r\n    (process.env.NODE_ENV !== 'production') && console.warn(`[Vue warn] ${msg.message}`);\r\n}\r\nfunction createCompilerError(code, loc, messages, additionalMessage) {\r\n    const msg = (process.env.NODE_ENV !== 'production') || !true\r\n        ? (messages || errorMessages)[code] + (additionalMessage || ``)\r\n        : code;\r\n    const error = new SyntaxError(String(msg));\r\n    error.code = code;\r\n    error.loc = loc;\r\n    return error;\r\n}\r\nconst errorMessages = {\r\n    // parse errors\r\n    [0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */]: 'Illegal comment.',\r\n    [1 /* CDATA_IN_HTML_CONTENT */]: 'CDATA section is allowed only in XML context.',\r\n    [2 /* DUPLICATE_ATTRIBUTE */]: 'Duplicate attribute.',\r\n    [3 /* END_TAG_WITH_ATTRIBUTES */]: 'End tag cannot have attributes.',\r\n    [4 /* END_TAG_WITH_TRAILING_SOLIDUS */]: \"Illegal '/' in tags.\",\r\n    [5 /* EOF_BEFORE_TAG_NAME */]: 'Unexpected EOF in tag.',\r\n    [6 /* EOF_IN_CDATA */]: 'Unexpected EOF in CDATA section.',\r\n    [7 /* EOF_IN_COMMENT */]: 'Unexpected EOF in comment.',\r\n    [8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */]: 'Unexpected EOF in script.',\r\n    [9 /* EOF_IN_TAG */]: 'Unexpected EOF in tag.',\r\n    [10 /* INCORRECTLY_CLOSED_COMMENT */]: 'Incorrectly closed comment.',\r\n    [11 /* INCORRECTLY_OPENED_COMMENT */]: 'Incorrectly opened comment.',\r\n    [12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */]: \"Illegal tag name. Use '&lt;' to print '<'.\",\r\n    [13 /* MISSING_ATTRIBUTE_VALUE */]: 'Attribute value was expected.',\r\n    [14 /* MISSING_END_TAG_NAME */]: 'End tag name was expected.',\r\n    [15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */]: 'Whitespace was expected.',\r\n    [16 /* NESTED_COMMENT */]: \"Unexpected '<!--' in comment.\",\r\n    [17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */]: 'Attribute name cannot contain U+0022 (\"), U+0027 (\\'), and U+003C (<).',\r\n    [18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */]: 'Unquoted attribute value cannot contain U+0022 (\"), U+0027 (\\'), U+003C (<), U+003D (=), and U+0060 (`).',\r\n    [19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */]: \"Attribute name cannot start with '='.\",\r\n    [21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */]: \"'<?' is allowed only in XML context.\",\r\n    [20 /* UNEXPECTED_NULL_CHARACTER */]: `Unexpected null character.`,\r\n    [22 /* UNEXPECTED_SOLIDUS_IN_TAG */]: \"Illegal '/' in tags.\",\r\n    // Vue-specific parse errors\r\n    [23 /* X_INVALID_END_TAG */]: 'Invalid end tag.',\r\n    [24 /* X_MISSING_END_TAG */]: 'Element is missing end tag.',\r\n    [25 /* X_MISSING_INTERPOLATION_END */]: 'Interpolation end sign was not found.',\r\n    [27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */]: 'End bracket for dynamic directive argument was not found. ' +\r\n        'Note that dynamic directive argument cannot contain spaces.',\r\n    [26 /* X_MISSING_DIRECTIVE_NAME */]: 'Legal directive name was expected.',\r\n    // transform errors\r\n    [28 /* X_V_IF_NO_EXPRESSION */]: `v-if/v-else-if is missing expression.`,\r\n    [29 /* X_V_IF_SAME_KEY */]: `v-if/else branches must use unique keys.`,\r\n    [30 /* X_V_ELSE_NO_ADJACENT_IF */]: `v-else/v-else-if has no adjacent v-if or v-else-if.`,\r\n    [31 /* X_V_FOR_NO_EXPRESSION */]: `v-for is missing expression.`,\r\n    [32 /* X_V_FOR_MALFORMED_EXPRESSION */]: `v-for has invalid expression.`,\r\n    [33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */]: `<template v-for> key should be placed on the <template> tag.`,\r\n    [34 /* X_V_BIND_NO_EXPRESSION */]: `v-bind is missing expression.`,\r\n    [35 /* X_V_ON_NO_EXPRESSION */]: `v-on is missing expression.`,\r\n    [36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */]: `Unexpected custom directive on <slot> outlet.`,\r\n    [37 /* X_V_SLOT_MIXED_SLOT_USAGE */]: `Mixed v-slot usage on both the component and nested <template>.` +\r\n        `When there are multiple named slots, all slots should use <template> ` +\r\n        `syntax to avoid scope ambiguity.`,\r\n    [38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */]: `Duplicate slot names found. `,\r\n    [39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */]: `Extraneous children found when component already has explicitly named ` +\r\n        `default slot. These children will be ignored.`,\r\n    [40 /* X_V_SLOT_MISPLACED */]: `v-slot can only be used on components or <template> tags.`,\r\n    [41 /* X_V_MODEL_NO_EXPRESSION */]: `v-model is missing expression.`,\r\n    [42 /* X_V_MODEL_MALFORMED_EXPRESSION */]: `v-model value must be a valid JavaScript member expression.`,\r\n    [43 /* X_V_MODEL_ON_SCOPE_VARIABLE */]: `v-model cannot be used on v-for or v-slot scope variables because they are not writable.`,\r\n    [44 /* X_INVALID_EXPRESSION */]: `Error parsing JavaScript expression: `,\r\n    [45 /* X_KEEP_ALIVE_INVALID_CHILDREN */]: `<KeepAlive> expects exactly one child component.`,\r\n    // generic errors\r\n    [46 /* X_PREFIX_ID_NOT_SUPPORTED */]: `\"prefixIdentifiers\" option is not supported in this build of compiler.`,\r\n    [47 /* X_MODULE_MODE_NOT_SUPPORTED */]: `ES module mode is not supported in this build of compiler.`,\r\n    [48 /* X_CACHE_HANDLER_NOT_SUPPORTED */]: `\"cacheHandlers\" option is only supported when the \"prefixIdentifiers\" option is enabled.`,\r\n    [49 /* X_SCOPE_ID_NOT_SUPPORTED */]: `\"scopeId\" option is only supported in module mode.`,\r\n    // just to fulfill types\r\n    [50 /* __EXTEND_POINT__ */]: ``\r\n};\n\nconst FRAGMENT = Symbol((process.env.NODE_ENV !== 'production') ? `Fragment` : ``);\r\nconst TELEPORT = Symbol((process.env.NODE_ENV !== 'production') ? `Teleport` : ``);\r\nconst SUSPENSE = Symbol((process.env.NODE_ENV !== 'production') ? `Suspense` : ``);\r\nconst KEEP_ALIVE = Symbol((process.env.NODE_ENV !== 'production') ? `KeepAlive` : ``);\r\nconst BASE_TRANSITION = Symbol((process.env.NODE_ENV !== 'production') ? `BaseTransition` : ``);\r\nconst OPEN_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `openBlock` : ``);\r\nconst CREATE_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createBlock` : ``);\r\nconst CREATE_ELEMENT_BLOCK = Symbol((process.env.NODE_ENV !== 'production') ? `createElementBlock` : ``);\r\nconst CREATE_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createVNode` : ``);\r\nconst CREATE_ELEMENT_VNODE = Symbol((process.env.NODE_ENV !== 'production') ? `createElementVNode` : ``);\r\nconst CREATE_COMMENT = Symbol((process.env.NODE_ENV !== 'production') ? `createCommentVNode` : ``);\r\nconst CREATE_TEXT = Symbol((process.env.NODE_ENV !== 'production') ? `createTextVNode` : ``);\r\nconst CREATE_STATIC = Symbol((process.env.NODE_ENV !== 'production') ? `createStaticVNode` : ``);\r\nconst RESOLVE_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveComponent` : ``);\r\nconst RESOLVE_DYNAMIC_COMPONENT = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDynamicComponent` : ``);\r\nconst RESOLVE_DIRECTIVE = Symbol((process.env.NODE_ENV !== 'production') ? `resolveDirective` : ``);\r\nconst RESOLVE_FILTER = Symbol((process.env.NODE_ENV !== 'production') ? `resolveFilter` : ``);\r\nconst WITH_DIRECTIVES = Symbol((process.env.NODE_ENV !== 'production') ? `withDirectives` : ``);\r\nconst RENDER_LIST = Symbol((process.env.NODE_ENV !== 'production') ? `renderList` : ``);\r\nconst RENDER_SLOT = Symbol((process.env.NODE_ENV !== 'production') ? `renderSlot` : ``);\r\nconst CREATE_SLOTS = Symbol((process.env.NODE_ENV !== 'production') ? `createSlots` : ``);\r\nconst TO_DISPLAY_STRING = Symbol((process.env.NODE_ENV !== 'production') ? `toDisplayString` : ``);\r\nconst MERGE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `mergeProps` : ``);\r\nconst NORMALIZE_CLASS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeClass` : ``);\r\nconst NORMALIZE_STYLE = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeStyle` : ``);\r\nconst NORMALIZE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `normalizeProps` : ``);\r\nconst GUARD_REACTIVE_PROPS = Symbol((process.env.NODE_ENV !== 'production') ? `guardReactiveProps` : ``);\r\nconst TO_HANDLERS = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlers` : ``);\r\nconst CAMELIZE = Symbol((process.env.NODE_ENV !== 'production') ? `camelize` : ``);\r\nconst CAPITALIZE = Symbol((process.env.NODE_ENV !== 'production') ? `capitalize` : ``);\r\nconst TO_HANDLER_KEY = Symbol((process.env.NODE_ENV !== 'production') ? `toHandlerKey` : ``);\r\nconst SET_BLOCK_TRACKING = Symbol((process.env.NODE_ENV !== 'production') ? `setBlockTracking` : ``);\r\nconst PUSH_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `pushScopeId` : ``);\r\nconst POP_SCOPE_ID = Symbol((process.env.NODE_ENV !== 'production') ? `popScopeId` : ``);\r\nconst WITH_CTX = Symbol((process.env.NODE_ENV !== 'production') ? `withCtx` : ``);\r\nconst UNREF = Symbol((process.env.NODE_ENV !== 'production') ? `unref` : ``);\r\nconst IS_REF = Symbol((process.env.NODE_ENV !== 'production') ? `isRef` : ``);\r\nconst WITH_MEMO = Symbol((process.env.NODE_ENV !== 'production') ? `withMemo` : ``);\r\nconst IS_MEMO_SAME = Symbol((process.env.NODE_ENV !== 'production') ? `isMemoSame` : ``);\r\n// Name mapping for runtime helpers that need to be imported from 'vue' in\r\n// generated code. Make sure these are correctly exported in the runtime!\r\n// Using `any` here because TS doesn't allow symbols as index type.\r\nconst helperNameMap = {\r\n    [FRAGMENT]: `Fragment`,\r\n    [TELEPORT]: `Teleport`,\r\n    [SUSPENSE]: `Suspense`,\r\n    [KEEP_ALIVE]: `KeepAlive`,\r\n    [BASE_TRANSITION]: `BaseTransition`,\r\n    [OPEN_BLOCK]: `openBlock`,\r\n    [CREATE_BLOCK]: `createBlock`,\r\n    [CREATE_ELEMENT_BLOCK]: `createElementBlock`,\r\n    [CREATE_VNODE]: `createVNode`,\r\n    [CREATE_ELEMENT_VNODE]: `createElementVNode`,\r\n    [CREATE_COMMENT]: `createCommentVNode`,\r\n    [CREATE_TEXT]: `createTextVNode`,\r\n    [CREATE_STATIC]: `createStaticVNode`,\r\n    [RESOLVE_COMPONENT]: `resolveComponent`,\r\n    [RESOLVE_DYNAMIC_COMPONENT]: `resolveDynamicComponent`,\r\n    [RESOLVE_DIRECTIVE]: `resolveDirective`,\r\n    [RESOLVE_FILTER]: `resolveFilter`,\r\n    [WITH_DIRECTIVES]: `withDirectives`,\r\n    [RENDER_LIST]: `renderList`,\r\n    [RENDER_SLOT]: `renderSlot`,\r\n    [CREATE_SLOTS]: `createSlots`,\r\n    [TO_DISPLAY_STRING]: `toDisplayString`,\r\n    [MERGE_PROPS]: `mergeProps`,\r\n    [NORMALIZE_CLASS]: `normalizeClass`,\r\n    [NORMALIZE_STYLE]: `normalizeStyle`,\r\n    [NORMALIZE_PROPS]: `normalizeProps`,\r\n    [GUARD_REACTIVE_PROPS]: `guardReactiveProps`,\r\n    [TO_HANDLERS]: `toHandlers`,\r\n    [CAMELIZE]: `camelize`,\r\n    [CAPITALIZE]: `capitalize`,\r\n    [TO_HANDLER_KEY]: `toHandlerKey`,\r\n    [SET_BLOCK_TRACKING]: `setBlockTracking`,\r\n    [PUSH_SCOPE_ID]: `pushScopeId`,\r\n    [POP_SCOPE_ID]: `popScopeId`,\r\n    [WITH_CTX]: `withCtx`,\r\n    [UNREF]: `unref`,\r\n    [IS_REF]: `isRef`,\r\n    [WITH_MEMO]: `withMemo`,\r\n    [IS_MEMO_SAME]: `isMemoSame`\r\n};\r\nfunction registerRuntimeHelpers(helpers) {\r\n    Object.getOwnPropertySymbols(helpers).forEach(s => {\r\n        helperNameMap[s] = helpers[s];\r\n    });\r\n}\n\n// AST Utilities ---------------------------------------------------------------\r\n// Some expressions, e.g. sequence and conditional expressions, are never\r\n// associated with template nodes, so their source locations are just a stub.\r\n// Container types like CompoundExpression also don't need a real location.\r\nconst locStub = {\r\n    source: '',\r\n    start: { line: 1, column: 1, offset: 0 },\r\n    end: { line: 1, column: 1, offset: 0 }\r\n};\r\nfunction createRoot(children, loc = locStub) {\r\n    return {\r\n        type: 0 /* ROOT */,\r\n        children,\r\n        helpers: [],\r\n        components: [],\r\n        directives: [],\r\n        hoists: [],\r\n        imports: [],\r\n        cached: 0,\r\n        temps: 0,\r\n        codegenNode: undefined,\r\n        loc\r\n    };\r\n}\r\nfunction createVNodeCall(context, tag, props, children, patchFlag, dynamicProps, directives, isBlock = false, disableTracking = false, isComponent = false, loc = locStub) {\r\n    if (context) {\r\n        if (isBlock) {\r\n            context.helper(OPEN_BLOCK);\r\n            context.helper(getVNodeBlockHelper(context.inSSR, isComponent));\r\n        }\r\n        else {\r\n            context.helper(getVNodeHelper(context.inSSR, isComponent));\r\n        }\r\n        if (directives) {\r\n            context.helper(WITH_DIRECTIVES);\r\n        }\r\n    }\r\n    return {\r\n        type: 13 /* VNODE_CALL */,\r\n        tag,\r\n        props,\r\n        children,\r\n        patchFlag,\r\n        dynamicProps,\r\n        directives,\r\n        isBlock,\r\n        disableTracking,\r\n        isComponent,\r\n        loc\r\n    };\r\n}\r\nfunction createArrayExpression(elements, loc = locStub) {\r\n    return {\r\n        type: 17 /* JS_ARRAY_EXPRESSION */,\r\n        loc,\r\n        elements\r\n    };\r\n}\r\nfunction createObjectExpression(properties, loc = locStub) {\r\n    return {\r\n        type: 15 /* JS_OBJECT_EXPRESSION */,\r\n        loc,\r\n        properties\r\n    };\r\n}\r\nfunction createObjectProperty(key, value) {\r\n    return {\r\n        type: 16 /* JS_PROPERTY */,\r\n        loc: locStub,\r\n        key: isString(key) ? createSimpleExpression(key, true) : key,\r\n        value\r\n    };\r\n}\r\nfunction createSimpleExpression(content, isStatic = false, loc = locStub, constType = 0 /* NOT_CONSTANT */) {\r\n    return {\r\n        type: 4 /* SIMPLE_EXPRESSION */,\r\n        loc,\r\n        content,\r\n        isStatic,\r\n        constType: isStatic ? 3 /* CAN_STRINGIFY */ : constType\r\n    };\r\n}\r\nfunction createInterpolation(content, loc) {\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        loc,\r\n        content: isString(content)\r\n            ? createSimpleExpression(content, false, loc)\r\n            : content\r\n    };\r\n}\r\nfunction createCompoundExpression(children, loc = locStub) {\r\n    return {\r\n        type: 8 /* COMPOUND_EXPRESSION */,\r\n        loc,\r\n        children\r\n    };\r\n}\r\nfunction createCallExpression(callee, args = [], loc = locStub) {\r\n    return {\r\n        type: 14 /* JS_CALL_EXPRESSION */,\r\n        loc,\r\n        callee,\r\n        arguments: args\r\n    };\r\n}\r\nfunction createFunctionExpression(params, returns = undefined, newline = false, isSlot = false, loc = locStub) {\r\n    return {\r\n        type: 18 /* JS_FUNCTION_EXPRESSION */,\r\n        params,\r\n        returns,\r\n        newline,\r\n        isSlot,\r\n        loc\r\n    };\r\n}\r\nfunction createConditionalExpression(test, consequent, alternate, newline = true) {\r\n    return {\r\n        type: 19 /* JS_CONDITIONAL_EXPRESSION */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        newline,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createCacheExpression(index, value, isVNode = false) {\r\n    return {\r\n        type: 20 /* JS_CACHE_EXPRESSION */,\r\n        index,\r\n        value,\r\n        isVNode,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createBlockStatement(body) {\r\n    return {\r\n        type: 21 /* JS_BLOCK_STATEMENT */,\r\n        body,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createTemplateLiteral(elements) {\r\n    return {\r\n        type: 22 /* JS_TEMPLATE_LITERAL */,\r\n        elements,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createIfStatement(test, consequent, alternate) {\r\n    return {\r\n        type: 23 /* JS_IF_STATEMENT */,\r\n        test,\r\n        consequent,\r\n        alternate,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createAssignmentExpression(left, right) {\r\n    return {\r\n        type: 24 /* JS_ASSIGNMENT_EXPRESSION */,\r\n        left,\r\n        right,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createSequenceExpression(expressions) {\r\n    return {\r\n        type: 25 /* JS_SEQUENCE_EXPRESSION */,\r\n        expressions,\r\n        loc: locStub\r\n    };\r\n}\r\nfunction createReturnStatement(returns) {\r\n    return {\r\n        type: 26 /* JS_RETURN_STATEMENT */,\r\n        returns,\r\n        loc: locStub\r\n    };\r\n}\n\nconst isStaticExp = (p) => p.type === 4 /* SIMPLE_EXPRESSION */ && p.isStatic;\r\nconst isBuiltInType = (tag, expected) => tag === expected || tag === hyphenate(expected);\r\nfunction isCoreComponent(tag) {\r\n    if (isBuiltInType(tag, 'Teleport')) {\r\n        return TELEPORT;\r\n    }\r\n    else if (isBuiltInType(tag, 'Suspense')) {\r\n        return SUSPENSE;\r\n    }\r\n    else if (isBuiltInType(tag, 'KeepAlive')) {\r\n        return KEEP_ALIVE;\r\n    }\r\n    else if (isBuiltInType(tag, 'BaseTransition')) {\r\n        return BASE_TRANSITION;\r\n    }\r\n}\r\nconst nonIdentifierRE = /^\\d|[^\\$\\w]/;\r\nconst isSimpleIdentifier = (name) => !nonIdentifierRE.test(name);\r\nconst validFirstIdentCharRE = /[A-Za-z_$\\xA0-\\uFFFF]/;\r\nconst validIdentCharRE = /[\\.\\?\\w$\\xA0-\\uFFFF]/;\r\nconst whitespaceRE = /\\s+[.[]\\s*|\\s*[.[]\\s+/g;\r\n/**\r\n * Simple lexer to check if an expression is a member expression. This is\r\n * lax and only checks validity at the root level (i.e. does not validate exps\r\n * inside square brackets), but it's ok since these are only used on template\r\n * expressions and false positives are invalid expressions in the first place.\r\n */\r\nconst isMemberExpressionBrowser = (path) => {\r\n    // remove whitespaces around . or [ first\r\n    path = path.trim().replace(whitespaceRE, s => s.trim());\r\n    let state = 0 /* inMemberExp */;\r\n    let stateStack = [];\r\n    let currentOpenBracketCount = 0;\r\n    let currentOpenParensCount = 0;\r\n    let currentStringType = null;\r\n    for (let i = 0; i < path.length; i++) {\r\n        const char = path.charAt(i);\r\n        switch (state) {\r\n            case 0 /* inMemberExp */:\r\n                if (char === '[') {\r\n                    stateStack.push(state);\r\n                    state = 1 /* inBrackets */;\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === '(') {\r\n                    stateStack.push(state);\r\n                    state = 2 /* inParens */;\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (!(i === 0 ? validFirstIdentCharRE : validIdentCharRE).test(char)) {\r\n                    return false;\r\n                }\r\n                break;\r\n            case 1 /* inBrackets */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `[`) {\r\n                    currentOpenBracketCount++;\r\n                }\r\n                else if (char === `]`) {\r\n                    if (!--currentOpenBracketCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 2 /* inParens */:\r\n                if (char === `'` || char === `\"` || char === '`') {\r\n                    stateStack.push(state);\r\n                    state = 3 /* inString */;\r\n                    currentStringType = char;\r\n                }\r\n                else if (char === `(`) {\r\n                    currentOpenParensCount++;\r\n                }\r\n                else if (char === `)`) {\r\n                    // if the exp ends as a call then it should not be considered valid\r\n                    if (i === path.length - 1) {\r\n                        return false;\r\n                    }\r\n                    if (!--currentOpenParensCount) {\r\n                        state = stateStack.pop();\r\n                    }\r\n                }\r\n                break;\r\n            case 3 /* inString */:\r\n                if (char === currentStringType) {\r\n                    state = stateStack.pop();\r\n                    currentStringType = null;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return !currentOpenBracketCount && !currentOpenParensCount;\r\n};\r\nconst isMemberExpressionNode = NOOP\r\n    ;\r\nconst isMemberExpression = isMemberExpressionBrowser\r\n    ;\r\nfunction getInnerRange(loc, offset, length) {\r\n    const source = loc.source.slice(offset, offset + length);\r\n    const newLoc = {\r\n        source,\r\n        start: advancePositionWithClone(loc.start, loc.source, offset),\r\n        end: loc.end\r\n    };\r\n    if (length != null) {\r\n        newLoc.end = advancePositionWithClone(loc.start, loc.source, offset + length);\r\n    }\r\n    return newLoc;\r\n}\r\nfunction advancePositionWithClone(pos, source, numberOfCharacters = source.length) {\r\n    return advancePositionWithMutation(extend({}, pos), source, numberOfCharacters);\r\n}\r\n// advance by mutation without cloning (for performance reasons), since this\r\n// gets called a lot in the parser\r\nfunction advancePositionWithMutation(pos, source, numberOfCharacters = source.length) {\r\n    let linesCount = 0;\r\n    let lastNewLinePos = -1;\r\n    for (let i = 0; i < numberOfCharacters; i++) {\r\n        if (source.charCodeAt(i) === 10 /* newline char code */) {\r\n            linesCount++;\r\n            lastNewLinePos = i;\r\n        }\r\n    }\r\n    pos.offset += numberOfCharacters;\r\n    pos.line += linesCount;\r\n    pos.column =\r\n        lastNewLinePos === -1\r\n            ? pos.column + numberOfCharacters\r\n            : numberOfCharacters - lastNewLinePos;\r\n    return pos;\r\n}\r\nfunction assert(condition, msg) {\r\n    /* istanbul ignore if */\r\n    if (!condition) {\r\n        throw new Error(msg || `unexpected compiler condition`);\r\n    }\r\n}\r\nfunction findDir(node, name, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 7 /* DIRECTIVE */ &&\r\n            (allowEmpty || p.exp) &&\r\n            (isString(name) ? p.name === name : name.test(p.name))) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction findProp(node, name, dynamicOnly = false, allowEmpty = false) {\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (dynamicOnly)\r\n                continue;\r\n            if (p.name === name && (p.value || allowEmpty)) {\r\n                return p;\r\n            }\r\n        }\r\n        else if (p.name === 'bind' &&\r\n            (p.exp || allowEmpty) &&\r\n            isStaticArgOf(p.arg, name)) {\r\n            return p;\r\n        }\r\n    }\r\n}\r\nfunction isStaticArgOf(arg, name) {\r\n    return !!(arg && isStaticExp(arg) && arg.content === name);\r\n}\r\nfunction hasDynamicKeyVBind(node) {\r\n    return node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n        p.name === 'bind' &&\r\n        (!p.arg || // v-bind=\"obj\"\r\n            p.arg.type !== 4 /* SIMPLE_EXPRESSION */ || // v-bind:[_ctx.foo]\r\n            !p.arg.isStatic) // v-bind:[foo]\r\n    );\r\n}\r\nfunction isText(node) {\r\n    return node.type === 5 /* INTERPOLATION */ || node.type === 2 /* TEXT */;\r\n}\r\nfunction isVSlot(p) {\r\n    return p.type === 7 /* DIRECTIVE */ && p.name === 'slot';\r\n}\r\nfunction isTemplateNode(node) {\r\n    return (node.type === 1 /* ELEMENT */ && node.tagType === 3 /* TEMPLATE */);\r\n}\r\nfunction isSlotOutlet(node) {\r\n    return node.type === 1 /* ELEMENT */ && node.tagType === 2 /* SLOT */;\r\n}\r\nfunction getVNodeHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_VNODE : CREATE_ELEMENT_VNODE;\r\n}\r\nfunction getVNodeBlockHelper(ssr, isComponent) {\r\n    return ssr || isComponent ? CREATE_BLOCK : CREATE_ELEMENT_BLOCK;\r\n}\r\nconst propsHelperSet = new Set([NORMALIZE_PROPS, GUARD_REACTIVE_PROPS]);\r\nfunction getUnnormalizedProps(props, callPath = []) {\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const callee = props.callee;\r\n        if (!isString(callee) && propsHelperSet.has(callee)) {\r\n            return getUnnormalizedProps(props.arguments[0], callPath.concat(props));\r\n        }\r\n    }\r\n    return [props, callPath];\r\n}\r\nfunction injectProp(node, prop, context) {\r\n    let propsWithInjection;\r\n    /**\r\n     * 1. mergeProps(...)\r\n     * 2. toHandlers(...)\r\n     * 3. normalizeProps(...)\r\n     * 4. normalizeProps(guardReactiveProps(...))\r\n     *\r\n     * we need to get the real props before normalization\r\n     */\r\n    let props = node.type === 13 /* VNODE_CALL */ ? node.props : node.arguments[2];\r\n    let callPath = [];\r\n    let parentCall;\r\n    if (props &&\r\n        !isString(props) &&\r\n        props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        const ret = getUnnormalizedProps(props);\r\n        props = ret[0];\r\n        callPath = ret[1];\r\n        parentCall = callPath[callPath.length - 1];\r\n    }\r\n    if (props == null || isString(props)) {\r\n        propsWithInjection = createObjectExpression([prop]);\r\n    }\r\n    else if (props.type === 14 /* JS_CALL_EXPRESSION */) {\r\n        // merged props... add ours\r\n        // only inject key to object literal if it's the first argument so that\r\n        // if doesn't override user provided keys\r\n        const first = props.arguments[0];\r\n        if (!isString(first) && first.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n            first.properties.unshift(prop);\r\n        }\r\n        else {\r\n            if (props.callee === TO_HANDLERS) {\r\n                // #2366\r\n                propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n                    createObjectExpression([prop]),\r\n                    props\r\n                ]);\r\n            }\r\n            else {\r\n                props.arguments.unshift(createObjectExpression([prop]));\r\n            }\r\n        }\r\n        !propsWithInjection && (propsWithInjection = props);\r\n    }\r\n    else if (props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        let alreadyExists = false;\r\n        // check existing key to avoid overriding user provided keys\r\n        if (prop.key.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            const propKeyName = prop.key.content;\r\n            alreadyExists = props.properties.some(p => p.key.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                p.key.content === propKeyName);\r\n        }\r\n        if (!alreadyExists) {\r\n            props.properties.unshift(prop);\r\n        }\r\n        propsWithInjection = props;\r\n    }\r\n    else {\r\n        // single v-bind with expression, return a merged replacement\r\n        propsWithInjection = createCallExpression(context.helper(MERGE_PROPS), [\r\n            createObjectExpression([prop]),\r\n            props\r\n        ]);\r\n        // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(props))`,\r\n        // it will be rewritten as `normalizeProps(mergeProps({ key: 0 }, props))`,\r\n        // the `guardReactiveProps` will no longer be needed\r\n        if (parentCall && parentCall.callee === GUARD_REACTIVE_PROPS) {\r\n            parentCall = callPath[callPath.length - 2];\r\n        }\r\n    }\r\n    if (node.type === 13 /* VNODE_CALL */) {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.props = propsWithInjection;\r\n        }\r\n    }\r\n    else {\r\n        if (parentCall) {\r\n            parentCall.arguments[0] = propsWithInjection;\r\n        }\r\n        else {\r\n            node.arguments[2] = propsWithInjection;\r\n        }\r\n    }\r\n}\r\nfunction toValidAssetId(name, type) {\r\n    // see issue#4422, we need adding identifier on validAssetId if variable `name` has specific character\r\n    return `_${type}_${name.replace(/[^\\w]/g, (searchValue, replaceValue) => {\r\n        return searchValue === '-' ? '_' : name.charCodeAt(replaceValue).toString();\r\n    })}`;\r\n}\r\n// Check if a node contains expressions that reference current context scope ids\r\nfunction hasScopeRef(node, ids) {\r\n    if (!node || Object.keys(ids).length === 0) {\r\n        return false;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            for (let i = 0; i < node.props.length; i++) {\r\n                const p = node.props[i];\r\n                if (p.type === 7 /* DIRECTIVE */ &&\r\n                    (hasScopeRef(p.arg, ids) || hasScopeRef(p.exp, ids))) {\r\n                    return true;\r\n                }\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 11 /* FOR */:\r\n            if (hasScopeRef(node.source, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 9 /* IF */:\r\n            return node.branches.some(b => hasScopeRef(b, ids));\r\n        case 10 /* IF_BRANCH */:\r\n            if (hasScopeRef(node.condition, ids)) {\r\n                return true;\r\n            }\r\n            return node.children.some(c => hasScopeRef(c, ids));\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return (!node.isStatic &&\r\n                isSimpleIdentifier(node.content) &&\r\n                !!ids[node.content]);\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            return node.children.some(c => isObject(c) && hasScopeRef(c, ids));\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return hasScopeRef(node.content, ids);\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return false;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return false;\r\n    }\r\n}\r\nfunction getMemoedVNodeCall(node) {\r\n    if (node.type === 14 /* JS_CALL_EXPRESSION */ && node.callee === WITH_MEMO) {\r\n        return node.arguments[1].returns;\r\n    }\r\n    else {\r\n        return node;\r\n    }\r\n}\r\nfunction makeBlock(node, { helper, removeHelper, inSSR }) {\r\n    if (!node.isBlock) {\r\n        node.isBlock = true;\r\n        removeHelper(getVNodeHelper(inSSR, node.isComponent));\r\n        helper(OPEN_BLOCK);\r\n        helper(getVNodeBlockHelper(inSSR, node.isComponent));\r\n    }\r\n}\n\nconst deprecationData = {\r\n    [\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */]: {\r\n        message: `Platform-native elements with \"is\" prop will no longer be ` +\r\n            `treated as components in Vue 3 unless the \"is\" value is explicitly ` +\r\n            `prefixed with \"vue:\".`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/custom-elements-interop.html`\r\n    },\r\n    [\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */]: {\r\n        message: key => `.sync modifier for v-bind has been removed. Use v-model with ` +\r\n            `argument instead. \\`v-bind:${key}.sync\\` should be changed to ` +\r\n            `\\`v-model:${key}\\`.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-model.html`\r\n    },\r\n    [\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */]: {\r\n        message: `.prop modifier for v-bind has been removed and no longer necessary. ` +\r\n            `Vue 3 will automatically set a binding as DOM property when appropriate.`\r\n    },\r\n    [\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */]: {\r\n        message: `v-bind=\"obj\" usage is now order sensitive and behaves like JavaScript ` +\r\n            `object spread: it will now overwrite an existing non-mergeable attribute ` +\r\n            `that appears before v-bind in the case of conflict. ` +\r\n            `To retain 2.x behavior, move v-bind to make it the first attribute. ` +\r\n            `You can also suppress this warning if the usage is intended.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-bind.html`\r\n    },\r\n    [\"COMPILER_V_ON_NATIVE\" /* COMPILER_V_ON_NATIVE */]: {\r\n        message: `.native modifier for v-on has been removed as is no longer necessary.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-on-native-modifier-removed.html`\r\n    },\r\n    [\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */]: {\r\n        message: `v-if / v-for precedence when used on the same element has changed ` +\r\n            `in Vue 3: v-if now takes higher precedence and will no longer have ` +\r\n            `access to v-for scope variables. It is best to avoid the ambiguity ` +\r\n            `with <template> tags or use a computed property that filters v-for ` +\r\n            `data source.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/v-if-v-for.html`\r\n    },\r\n    [\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */]: {\r\n        message: `<template> with no special directives will render as a native template ` +\r\n            `element instead of its inner content in Vue 3.`\r\n    },\r\n    [\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */]: {\r\n        message: `\"inline-template\" has been removed in Vue 3.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/inline-template-attribute.html`\r\n    },\r\n    [\"COMPILER_FILTER\" /* COMPILER_FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3-migration.vuejs.org/breaking-changes/filters.html`\r\n    }\r\n};\r\nfunction getCompatValue(key, context) {\r\n    const config = context.options\r\n        ? context.options.compatConfig\r\n        : context.compatConfig;\r\n    const value = config && config[key];\r\n    if (key === 'MODE') {\r\n        return value || 3; // compiler defaults to v3 behavior\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\r\nfunction isCompatEnabled(key, context) {\r\n    const mode = getCompatValue('MODE', context);\r\n    const value = getCompatValue(key, context);\r\n    // in v3 mode, only enable if explicitly set to true\r\n    // otherwise enable for any non-false value\r\n    return mode === 3 ? value === true : value !== false;\r\n}\r\nfunction checkCompatEnabled(key, context, loc, ...args) {\r\n    const enabled = isCompatEnabled(key, context);\r\n    if ((process.env.NODE_ENV !== 'production') && enabled) {\r\n        warnDeprecation(key, context, loc, ...args);\r\n    }\r\n    return enabled;\r\n}\r\nfunction warnDeprecation(key, context, loc, ...args) {\r\n    const val = getCompatValue(key, context);\r\n    if (val === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const { message, link } = deprecationData[key];\r\n    const msg = `(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`;\r\n    const err = new SyntaxError(msg);\r\n    err.code = key;\r\n    if (loc)\r\n        err.loc = loc;\r\n    context.onWarn(err);\r\n}\n\n// The default decoder only provides escapes for characters reserved as part of\r\n// the template syntax, and is only used if the custom renderer did not provide\r\n// a platform-specific decoder.\r\nconst decodeRE = /&(gt|lt|amp|apos|quot);/g;\r\nconst decodeMap = {\r\n    gt: '>',\r\n    lt: '<',\r\n    amp: '&',\r\n    apos: \"'\",\r\n    quot: '\"'\r\n};\r\nconst defaultParserOptions = {\r\n    delimiters: [`{{`, `}}`],\r\n    getNamespace: () => 0 /* HTML */,\r\n    getTextMode: () => 0 /* DATA */,\r\n    isVoidTag: NO,\r\n    isPreTag: NO,\r\n    isCustomElement: NO,\r\n    decodeEntities: (rawText) => rawText.replace(decodeRE, (_, p1) => decodeMap[p1]),\r\n    onError: defaultOnError,\r\n    onWarn: defaultOnWarn,\r\n    comments: (process.env.NODE_ENV !== 'production')\r\n};\r\nfunction baseParse(content, options = {}) {\r\n    const context = createParserContext(content, options);\r\n    const start = getCursor(context);\r\n    return createRoot(parseChildren(context, 0 /* DATA */, []), getSelection(context, start));\r\n}\r\nfunction createParserContext(content, rawOptions) {\r\n    const options = extend({}, defaultParserOptions);\r\n    let key;\r\n    for (key in rawOptions) {\r\n        // @ts-ignore\r\n        options[key] =\r\n            rawOptions[key] === undefined\r\n                ? defaultParserOptions[key]\r\n                : rawOptions[key];\r\n    }\r\n    return {\r\n        options,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        originalSource: content,\r\n        source: content,\r\n        inPre: false,\r\n        inVPre: false,\r\n        onWarn: options.onWarn\r\n    };\r\n}\r\nfunction parseChildren(context, mode, ancestors) {\r\n    const parent = last(ancestors);\r\n    const ns = parent ? parent.ns : 0 /* HTML */;\r\n    const nodes = [];\r\n    while (!isEnd(context, mode, ancestors)) {\r\n        const s = context.source;\r\n        let node = undefined;\r\n        if (mode === 0 /* DATA */ || mode === 1 /* RCDATA */) {\r\n            if (!context.inVPre && startsWith(s, context.options.delimiters[0])) {\r\n                // '{{'\r\n                node = parseInterpolation(context, mode);\r\n            }\r\n            else if (mode === 0 /* DATA */ && s[0] === '<') {\r\n                // https://html.spec.whatwg.org/multipage/parsing.html#tag-open-state\r\n                if (s.length === 1) {\r\n                    emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 1);\r\n                }\r\n                else if (s[1] === '!') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\r\n                    if (startsWith(s, '<!--')) {\r\n                        node = parseComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<!DOCTYPE')) {\r\n                        // Ignore DOCTYPE by a limitation.\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                    else if (startsWith(s, '<![CDATA[')) {\r\n                        if (ns !== 0 /* HTML */) {\r\n                            node = parseCDATA(context, ancestors);\r\n                        }\r\n                        else {\r\n                            emitError(context, 1 /* CDATA_IN_HTML_CONTENT */);\r\n                            node = parseBogusComment(context);\r\n                        }\r\n                    }\r\n                    else {\r\n                        emitError(context, 11 /* INCORRECTLY_OPENED_COMMENT */);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (s[1] === '/') {\r\n                    // https://html.spec.whatwg.org/multipage/parsing.html#end-tag-open-state\r\n                    if (s.length === 2) {\r\n                        emitError(context, 5 /* EOF_BEFORE_TAG_NAME */, 2);\r\n                    }\r\n                    else if (s[2] === '>') {\r\n                        emitError(context, 14 /* MISSING_END_TAG_NAME */, 2);\r\n                        advanceBy(context, 3);\r\n                        continue;\r\n                    }\r\n                    else if (/[a-z]/i.test(s[2])) {\r\n                        emitError(context, 23 /* X_INVALID_END_TAG */);\r\n                        parseTag(context, 1 /* End */, parent);\r\n                        continue;\r\n                    }\r\n                    else {\r\n                        emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 2);\r\n                        node = parseBogusComment(context);\r\n                    }\r\n                }\r\n                else if (/[a-z]/i.test(s[1])) {\r\n                    node = parseElement(context, ancestors);\r\n                    // 2.x <template> with no directive compat\r\n                    if (isCompatEnabled(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context) &&\r\n                        node &&\r\n                        node.tag === 'template' &&\r\n                        !node.props.some(p => p.type === 7 /* DIRECTIVE */ &&\r\n                            isSpecialTemplateDirective(p.name))) {\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warnDeprecation(\"COMPILER_NATIVE_TEMPLATE\" /* COMPILER_NATIVE_TEMPLATE */, context, node.loc);\r\n                        node = node.children;\r\n                    }\r\n                }\r\n                else if (s[1] === '?') {\r\n                    emitError(context, 21 /* UNEXPECTED_QUESTION_MARK_INSTEAD_OF_TAG_NAME */, 1);\r\n                    node = parseBogusComment(context);\r\n                }\r\n                else {\r\n                    emitError(context, 12 /* INVALID_FIRST_CHARACTER_OF_TAG_NAME */, 1);\r\n                }\r\n            }\r\n        }\r\n        if (!node) {\r\n            node = parseText(context, mode);\r\n        }\r\n        if (isArray(node)) {\r\n            for (let i = 0; i < node.length; i++) {\r\n                pushNode(nodes, node[i]);\r\n            }\r\n        }\r\n        else {\r\n            pushNode(nodes, node);\r\n        }\r\n    }\r\n    // Whitespace handling strategy like v2\r\n    let removedWhitespace = false;\r\n    if (mode !== 2 /* RAWTEXT */ && mode !== 1 /* RCDATA */) {\r\n        const shouldCondense = context.options.whitespace !== 'preserve';\r\n        for (let i = 0; i < nodes.length; i++) {\r\n            const node = nodes[i];\r\n            if (!context.inPre && node.type === 2 /* TEXT */) {\r\n                if (!/[^\\t\\r\\n\\f ]/.test(node.content)) {\r\n                    const prev = nodes[i - 1];\r\n                    const next = nodes[i + 1];\r\n                    // Remove if:\r\n                    // - the whitespace is the first or last node, or:\r\n                    // - (condense mode) the whitespace is adjacent to a comment, or:\r\n                    // - (condense mode) the whitespace is between two elements AND contains newline\r\n                    if (!prev ||\r\n                        !next ||\r\n                        (shouldCondense &&\r\n                            (prev.type === 3 /* COMMENT */ ||\r\n                                next.type === 3 /* COMMENT */ ||\r\n                                (prev.type === 1 /* ELEMENT */ &&\r\n                                    next.type === 1 /* ELEMENT */ &&\r\n                                    /[\\r\\n]/.test(node.content))))) {\r\n                        removedWhitespace = true;\r\n                        nodes[i] = null;\r\n                    }\r\n                    else {\r\n                        // Otherwise, the whitespace is condensed into a single space\r\n                        node.content = ' ';\r\n                    }\r\n                }\r\n                else if (shouldCondense) {\r\n                    // in condense mode, consecutive whitespaces in text are condensed\r\n                    // down to a single space.\r\n                    node.content = node.content.replace(/[\\t\\r\\n\\f ]+/g, ' ');\r\n                }\r\n            }\r\n            // Remove comment nodes if desired by configuration.\r\n            else if (node.type === 3 /* COMMENT */ && !context.options.comments) {\r\n                removedWhitespace = true;\r\n                nodes[i] = null;\r\n            }\r\n        }\r\n        if (context.inPre && parent && context.options.isPreTag(parent.tag)) {\r\n            // remove leading newline per html spec\r\n            // https://html.spec.whatwg.org/multipage/grouping-content.html#the-pre-element\r\n            const first = nodes[0];\r\n            if (first && first.type === 2 /* TEXT */) {\r\n                first.content = first.content.replace(/^\\r?\\n/, '');\r\n            }\r\n        }\r\n    }\r\n    return removedWhitespace ? nodes.filter(Boolean) : nodes;\r\n}\r\nfunction pushNode(nodes, node) {\r\n    if (node.type === 2 /* TEXT */) {\r\n        const prev = last(nodes);\r\n        // Merge if both this and the previous node are text and those are\r\n        // consecutive. This happens for cases like \"a < b\".\r\n        if (prev &&\r\n            prev.type === 2 /* TEXT */ &&\r\n            prev.loc.end.offset === node.loc.start.offset) {\r\n            prev.content += node.content;\r\n            prev.loc.end = node.loc.end;\r\n            prev.loc.source += node.loc.source;\r\n            return;\r\n        }\r\n    }\r\n    nodes.push(node);\r\n}\r\nfunction parseCDATA(context, ancestors) {\r\n    advanceBy(context, 9);\r\n    const nodes = parseChildren(context, 3 /* CDATA */, ancestors);\r\n    if (context.source.length === 0) {\r\n        emitError(context, 6 /* EOF_IN_CDATA */);\r\n    }\r\n    else {\r\n        advanceBy(context, 3);\r\n    }\r\n    return nodes;\r\n}\r\nfunction parseComment(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    // Regular comment.\r\n    const match = /--(\\!)?>/.exec(context.source);\r\n    if (!match) {\r\n        content = context.source.slice(4);\r\n        advanceBy(context, context.source.length);\r\n        emitError(context, 7 /* EOF_IN_COMMENT */);\r\n    }\r\n    else {\r\n        if (match.index <= 3) {\r\n            emitError(context, 0 /* ABRUPT_CLOSING_OF_EMPTY_COMMENT */);\r\n        }\r\n        if (match[1]) {\r\n            emitError(context, 10 /* INCORRECTLY_CLOSED_COMMENT */);\r\n        }\r\n        content = context.source.slice(4, match.index);\r\n        // Advancing with reporting nested comments.\r\n        const s = context.source.slice(0, match.index);\r\n        let prevIndex = 1, nestedIndex = 0;\r\n        while ((nestedIndex = s.indexOf('<!--', prevIndex)) !== -1) {\r\n            advanceBy(context, nestedIndex - prevIndex + 1);\r\n            if (nestedIndex + 4 < s.length) {\r\n                emitError(context, 16 /* NESTED_COMMENT */);\r\n            }\r\n            prevIndex = nestedIndex + 1;\r\n        }\r\n        advanceBy(context, match.index + match[0].length - prevIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseBogusComment(context) {\r\n    const start = getCursor(context);\r\n    const contentStart = context.source[1] === '?' ? 1 : 2;\r\n    let content;\r\n    const closeIndex = context.source.indexOf('>');\r\n    if (closeIndex === -1) {\r\n        content = context.source.slice(contentStart);\r\n        advanceBy(context, context.source.length);\r\n    }\r\n    else {\r\n        content = context.source.slice(contentStart, closeIndex);\r\n        advanceBy(context, closeIndex + 1);\r\n    }\r\n    return {\r\n        type: 3 /* COMMENT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseElement(context, ancestors) {\r\n    // Start tag.\r\n    const wasInPre = context.inPre;\r\n    const wasInVPre = context.inVPre;\r\n    const parent = last(ancestors);\r\n    const element = parseTag(context, 0 /* Start */, parent);\r\n    const isPreBoundary = context.inPre && !wasInPre;\r\n    const isVPreBoundary = context.inVPre && !wasInVPre;\r\n    if (element.isSelfClosing || context.options.isVoidTag(element.tag)) {\r\n        // #4030 self-closing <pre> tag\r\n        if (isPreBoundary) {\r\n            context.inPre = false;\r\n        }\r\n        if (isVPreBoundary) {\r\n            context.inVPre = false;\r\n        }\r\n        return element;\r\n    }\r\n    // Children.\r\n    ancestors.push(element);\r\n    const mode = context.options.getTextMode(element, parent);\r\n    const children = parseChildren(context, mode, ancestors);\r\n    ancestors.pop();\r\n    // 2.x inline-template compat\r\n    {\r\n        const inlineTemplateProp = element.props.find(p => p.type === 6 /* ATTRIBUTE */ && p.name === 'inline-template');\r\n        if (inlineTemplateProp &&\r\n            checkCompatEnabled(\"COMPILER_INLINE_TEMPLATE\" /* COMPILER_INLINE_TEMPLATE */, context, inlineTemplateProp.loc)) {\r\n            const loc = getSelection(context, element.loc.end);\r\n            inlineTemplateProp.value = {\r\n                type: 2 /* TEXT */,\r\n                content: loc.source,\r\n                loc\r\n            };\r\n        }\r\n    }\r\n    element.children = children;\r\n    // End tag.\r\n    if (startsWithEndTagOpen(context.source, element.tag)) {\r\n        parseTag(context, 1 /* End */, parent);\r\n    }\r\n    else {\r\n        emitError(context, 24 /* X_MISSING_END_TAG */, 0, element.loc.start);\r\n        if (context.source.length === 0 && element.tag.toLowerCase() === 'script') {\r\n            const first = children[0];\r\n            if (first && startsWith(first.loc.source, '<!--')) {\r\n                emitError(context, 8 /* EOF_IN_SCRIPT_HTML_COMMENT_LIKE_TEXT */);\r\n            }\r\n        }\r\n    }\r\n    element.loc = getSelection(context, element.loc.start);\r\n    if (isPreBoundary) {\r\n        context.inPre = false;\r\n    }\r\n    if (isVPreBoundary) {\r\n        context.inVPre = false;\r\n    }\r\n    return element;\r\n}\r\nconst isSpecialTemplateDirective = /*#__PURE__*/ makeMap(`if,else,else-if,for,slot`);\r\nfunction parseTag(context, type, parent) {\r\n    // Tag open.\r\n    const start = getCursor(context);\r\n    const match = /^<\\/?([a-z][^\\t\\r\\n\\f />]*)/i.exec(context.source);\r\n    const tag = match[1];\r\n    const ns = context.options.getNamespace(tag, parent);\r\n    advanceBy(context, match[0].length);\r\n    advanceSpaces(context);\r\n    // save current state in case we need to re-parse attributes with v-pre\r\n    const cursor = getCursor(context);\r\n    const currentSource = context.source;\r\n    // check <pre> tag\r\n    if (context.options.isPreTag(tag)) {\r\n        context.inPre = true;\r\n    }\r\n    // Attributes.\r\n    let props = parseAttributes(context, type);\r\n    // check v-pre\r\n    if (type === 0 /* Start */ &&\r\n        !context.inVPre &&\r\n        props.some(p => p.type === 7 /* DIRECTIVE */ && p.name === 'pre')) {\r\n        context.inVPre = true;\r\n        // reset context\r\n        extend(context, cursor);\r\n        context.source = currentSource;\r\n        // re-parse attrs and filter out v-pre itself\r\n        props = parseAttributes(context, type).filter(p => p.name !== 'v-pre');\r\n    }\r\n    // Tag close.\r\n    let isSelfClosing = false;\r\n    if (context.source.length === 0) {\r\n        emitError(context, 9 /* EOF_IN_TAG */);\r\n    }\r\n    else {\r\n        isSelfClosing = startsWith(context.source, '/>');\r\n        if (type === 1 /* End */ && isSelfClosing) {\r\n            emitError(context, 4 /* END_TAG_WITH_TRAILING_SOLIDUS */);\r\n        }\r\n        advanceBy(context, isSelfClosing ? 2 : 1);\r\n    }\r\n    if (type === 1 /* End */) {\r\n        return;\r\n    }\r\n    // 2.x deprecation checks\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        isCompatEnabled(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context)) {\r\n        let hasIf = false;\r\n        let hasFor = false;\r\n        for (let i = 0; i < props.length; i++) {\r\n            const p = props[i];\r\n            if (p.type === 7 /* DIRECTIVE */) {\r\n                if (p.name === 'if') {\r\n                    hasIf = true;\r\n                }\r\n                else if (p.name === 'for') {\r\n                    hasFor = true;\r\n                }\r\n            }\r\n            if (hasIf && hasFor) {\r\n                warnDeprecation(\"COMPILER_V_IF_V_FOR_PRECEDENCE\" /* COMPILER_V_IF_V_FOR_PRECEDENCE */, context, getSelection(context, start));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    let tagType = 0 /* ELEMENT */;\r\n    if (!context.inVPre) {\r\n        if (tag === 'slot') {\r\n            tagType = 2 /* SLOT */;\r\n        }\r\n        else if (tag === 'template') {\r\n            if (props.some(p => p.type === 7 /* DIRECTIVE */ && isSpecialTemplateDirective(p.name))) {\r\n                tagType = 3 /* TEMPLATE */;\r\n            }\r\n        }\r\n        else if (isComponent(tag, props, context)) {\r\n            tagType = 1 /* COMPONENT */;\r\n        }\r\n    }\r\n    return {\r\n        type: 1 /* ELEMENT */,\r\n        ns,\r\n        tag,\r\n        tagType,\r\n        props,\r\n        isSelfClosing,\r\n        children: [],\r\n        loc: getSelection(context, start),\r\n        codegenNode: undefined // to be created during transform phase\r\n    };\r\n}\r\nfunction isComponent(tag, props, context) {\r\n    const options = context.options;\r\n    if (options.isCustomElement(tag)) {\r\n        return false;\r\n    }\r\n    if (tag === 'component' ||\r\n        /^[A-Z]/.test(tag) ||\r\n        isCoreComponent(tag) ||\r\n        (options.isBuiltInComponent && options.isBuiltInComponent(tag)) ||\r\n        (options.isNativeTag && !options.isNativeTag(tag))) {\r\n        return true;\r\n    }\r\n    // at this point the tag should be a native tag, but check for potential \"is\"\r\n    // casting\r\n    for (let i = 0; i < props.length; i++) {\r\n        const p = props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.name === 'is' && p.value) {\r\n                if (p.value.content.startsWith('vue:')) {\r\n                    return true;\r\n                }\r\n                else if (checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // directive\r\n            // v-is (TODO Deprecate)\r\n            if (p.name === 'is') {\r\n                return true;\r\n            }\r\n            else if (\r\n            // :is on plain element - only treat as component in compat mode\r\n            p.name === 'bind' &&\r\n                isStaticArgOf(p.arg, 'is') &&\r\n                true &&\r\n                checkCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context, p.loc)) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseAttributes(context, type) {\r\n    const props = [];\r\n    const attributeNames = new Set();\r\n    while (context.source.length > 0 &&\r\n        !startsWith(context.source, '>') &&\r\n        !startsWith(context.source, '/>')) {\r\n        if (startsWith(context.source, '/')) {\r\n            emitError(context, 22 /* UNEXPECTED_SOLIDUS_IN_TAG */);\r\n            advanceBy(context, 1);\r\n            advanceSpaces(context);\r\n            continue;\r\n        }\r\n        if (type === 1 /* End */) {\r\n            emitError(context, 3 /* END_TAG_WITH_ATTRIBUTES */);\r\n        }\r\n        const attr = parseAttribute(context, attributeNames);\r\n        // Trim whitespace between class\r\n        // https://github.com/vuejs/core/issues/4251\r\n        if (attr.type === 6 /* ATTRIBUTE */ &&\r\n            attr.value &&\r\n            attr.name === 'class') {\r\n            attr.value.content = attr.value.content.replace(/\\s+/g, ' ').trim();\r\n        }\r\n        if (type === 0 /* Start */) {\r\n            props.push(attr);\r\n        }\r\n        if (/^[^\\t\\r\\n\\f />]/.test(context.source)) {\r\n            emitError(context, 15 /* MISSING_WHITESPACE_BETWEEN_ATTRIBUTES */);\r\n        }\r\n        advanceSpaces(context);\r\n    }\r\n    return props;\r\n}\r\nfunction parseAttribute(context, nameSet) {\r\n    // Name.\r\n    const start = getCursor(context);\r\n    const match = /^[^\\t\\r\\n\\f />][^\\t\\r\\n\\f />=]*/.exec(context.source);\r\n    const name = match[0];\r\n    if (nameSet.has(name)) {\r\n        emitError(context, 2 /* DUPLICATE_ATTRIBUTE */);\r\n    }\r\n    nameSet.add(name);\r\n    if (name[0] === '=') {\r\n        emitError(context, 19 /* UNEXPECTED_EQUALS_SIGN_BEFORE_ATTRIBUTE_NAME */);\r\n    }\r\n    {\r\n        const pattern = /[\"'<]/g;\r\n        let m;\r\n        while ((m = pattern.exec(name))) {\r\n            emitError(context, 17 /* UNEXPECTED_CHARACTER_IN_ATTRIBUTE_NAME */, m.index);\r\n        }\r\n    }\r\n    advanceBy(context, name.length);\r\n    // Value\r\n    let value = undefined;\r\n    if (/^[\\t\\r\\n\\f ]*=/.test(context.source)) {\r\n        advanceSpaces(context);\r\n        advanceBy(context, 1);\r\n        advanceSpaces(context);\r\n        value = parseAttributeValue(context);\r\n        if (!value) {\r\n            emitError(context, 13 /* MISSING_ATTRIBUTE_VALUE */);\r\n        }\r\n    }\r\n    const loc = getSelection(context, start);\r\n    if (!context.inVPre && /^(v-[A-Za-z0-9-]|:|\\.|@|#)/.test(name)) {\r\n        const match = /(?:^v-([a-z0-9-]+))?(?:(?::|^\\.|^@|^#)(\\[[^\\]]+\\]|[^\\.]+))?(.+)?$/i.exec(name);\r\n        let isPropShorthand = startsWith(name, '.');\r\n        let dirName = match[1] ||\r\n            (isPropShorthand || startsWith(name, ':')\r\n                ? 'bind'\r\n                : startsWith(name, '@')\r\n                    ? 'on'\r\n                    : 'slot');\r\n        let arg;\r\n        if (match[2]) {\r\n            const isSlot = dirName === 'slot';\r\n            const startOffset = name.lastIndexOf(match[2]);\r\n            const loc = getSelection(context, getNewPosition(context, start, startOffset), getNewPosition(context, start, startOffset + match[2].length + ((isSlot && match[3]) || '').length));\r\n            let content = match[2];\r\n            let isStatic = true;\r\n            if (content.startsWith('[')) {\r\n                isStatic = false;\r\n                if (!content.endsWith(']')) {\r\n                    emitError(context, 27 /* X_MISSING_DYNAMIC_DIRECTIVE_ARGUMENT_END */);\r\n                    content = content.slice(1);\r\n                }\r\n                else {\r\n                    content = content.slice(1, content.length - 1);\r\n                }\r\n            }\r\n            else if (isSlot) {\r\n                // #1241 special case for v-slot: vuetify relies extensively on slot\r\n                // names containing dots. v-slot doesn't have any modifiers and Vue 2.x\r\n                // supports such usage so we are keeping it consistent with 2.x.\r\n                content += match[3] || '';\r\n            }\r\n            arg = {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content,\r\n                isStatic,\r\n                constType: isStatic\r\n                    ? 3 /* CAN_STRINGIFY */\r\n                    : 0 /* NOT_CONSTANT */,\r\n                loc\r\n            };\r\n        }\r\n        if (value && value.isQuoted) {\r\n            const valueLoc = value.loc;\r\n            valueLoc.start.offset++;\r\n            valueLoc.start.column++;\r\n            valueLoc.end = advancePositionWithClone(valueLoc.start, value.content);\r\n            valueLoc.source = valueLoc.source.slice(1, -1);\r\n        }\r\n        const modifiers = match[3] ? match[3].slice(1).split('.') : [];\r\n        if (isPropShorthand)\r\n            modifiers.push('prop');\r\n        // 2.x compat v-bind:foo.sync -> v-model:foo\r\n        if (dirName === 'bind' && arg) {\r\n            if (modifiers.includes('sync') &&\r\n                checkCompatEnabled(\"COMPILER_V_BIND_SYNC\" /* COMPILER_V_BIND_SYNC */, context, loc, arg.loc.source)) {\r\n                dirName = 'model';\r\n                modifiers.splice(modifiers.indexOf('sync'), 1);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && modifiers.includes('prop')) {\r\n                checkCompatEnabled(\"COMPILER_V_BIND_PROP\" /* COMPILER_V_BIND_PROP */, context, loc);\r\n            }\r\n        }\r\n        return {\r\n            type: 7 /* DIRECTIVE */,\r\n            name: dirName,\r\n            exp: value && {\r\n                type: 4 /* SIMPLE_EXPRESSION */,\r\n                content: value.content,\r\n                isStatic: false,\r\n                // Treat as non-constant by default. This can be potentially set to\r\n                // other values by `transformExpression` to make it eligible for hoisting.\r\n                constType: 0 /* NOT_CONSTANT */,\r\n                loc: value.loc\r\n            },\r\n            arg,\r\n            modifiers,\r\n            loc\r\n        };\r\n    }\r\n    // missing directive name or illegal directive name\r\n    if (!context.inVPre && startsWith(name, 'v-')) {\r\n        emitError(context, 26 /* X_MISSING_DIRECTIVE_NAME */);\r\n    }\r\n    return {\r\n        type: 6 /* ATTRIBUTE */,\r\n        name,\r\n        value: value && {\r\n            type: 2 /* TEXT */,\r\n            content: value.content,\r\n            loc: value.loc\r\n        },\r\n        loc\r\n    };\r\n}\r\nfunction parseAttributeValue(context) {\r\n    const start = getCursor(context);\r\n    let content;\r\n    const quote = context.source[0];\r\n    const isQuoted = quote === `\"` || quote === `'`;\r\n    if (isQuoted) {\r\n        // Quoted value.\r\n        advanceBy(context, 1);\r\n        const endIndex = context.source.indexOf(quote);\r\n        if (endIndex === -1) {\r\n            content = parseTextData(context, context.source.length, 4 /* ATTRIBUTE_VALUE */);\r\n        }\r\n        else {\r\n            content = parseTextData(context, endIndex, 4 /* ATTRIBUTE_VALUE */);\r\n            advanceBy(context, 1);\r\n        }\r\n    }\r\n    else {\r\n        // Unquoted\r\n        const match = /^[^\\t\\r\\n\\f >]+/.exec(context.source);\r\n        if (!match) {\r\n            return undefined;\r\n        }\r\n        const unexpectedChars = /[\"'<=`]/g;\r\n        let m;\r\n        while ((m = unexpectedChars.exec(match[0]))) {\r\n            emitError(context, 18 /* UNEXPECTED_CHARACTER_IN_UNQUOTED_ATTRIBUTE_VALUE */, m.index);\r\n        }\r\n        content = parseTextData(context, match[0].length, 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n    return { content, isQuoted, loc: getSelection(context, start) };\r\n}\r\nfunction parseInterpolation(context, mode) {\r\n    const [open, close] = context.options.delimiters;\r\n    const closeIndex = context.source.indexOf(close, open.length);\r\n    if (closeIndex === -1) {\r\n        emitError(context, 25 /* X_MISSING_INTERPOLATION_END */);\r\n        return undefined;\r\n    }\r\n    const start = getCursor(context);\r\n    advanceBy(context, open.length);\r\n    const innerStart = getCursor(context);\r\n    const innerEnd = getCursor(context);\r\n    const rawContentLength = closeIndex - open.length;\r\n    const rawContent = context.source.slice(0, rawContentLength);\r\n    const preTrimContent = parseTextData(context, rawContentLength, mode);\r\n    const content = preTrimContent.trim();\r\n    const startOffset = preTrimContent.indexOf(content);\r\n    if (startOffset > 0) {\r\n        advancePositionWithMutation(innerStart, rawContent, startOffset);\r\n    }\r\n    const endOffset = rawContentLength - (preTrimContent.length - content.length - startOffset);\r\n    advancePositionWithMutation(innerEnd, rawContent, endOffset);\r\n    advanceBy(context, close.length);\r\n    return {\r\n        type: 5 /* INTERPOLATION */,\r\n        content: {\r\n            type: 4 /* SIMPLE_EXPRESSION */,\r\n            isStatic: false,\r\n            // Set `isConstant` to false by default and will decide in transformExpression\r\n            constType: 0 /* NOT_CONSTANT */,\r\n            content,\r\n            loc: getSelection(context, innerStart, innerEnd)\r\n        },\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\nfunction parseText(context, mode) {\r\n    const endTokens = mode === 3 /* CDATA */ ? [']]>'] : ['<', context.options.delimiters[0]];\r\n    let endIndex = context.source.length;\r\n    for (let i = 0; i < endTokens.length; i++) {\r\n        const index = context.source.indexOf(endTokens[i], 1);\r\n        if (index !== -1 && endIndex > index) {\r\n            endIndex = index;\r\n        }\r\n    }\r\n    const start = getCursor(context);\r\n    const content = parseTextData(context, endIndex, mode);\r\n    return {\r\n        type: 2 /* TEXT */,\r\n        content,\r\n        loc: getSelection(context, start)\r\n    };\r\n}\r\n/**\r\n * Get text data with a given length from the current location.\r\n * This translates HTML entities in the text data.\r\n */\r\nfunction parseTextData(context, length, mode) {\r\n    const rawText = context.source.slice(0, length);\r\n    advanceBy(context, length);\r\n    if (mode === 2 /* RAWTEXT */ ||\r\n        mode === 3 /* CDATA */ ||\r\n        !rawText.includes('&')) {\r\n        return rawText;\r\n    }\r\n    else {\r\n        // DATA or RCDATA containing \"&\"\". Entity decoding required.\r\n        return context.options.decodeEntities(rawText, mode === 4 /* ATTRIBUTE_VALUE */);\r\n    }\r\n}\r\nfunction getCursor(context) {\r\n    const { column, line, offset } = context;\r\n    return { column, line, offset };\r\n}\r\nfunction getSelection(context, start, end) {\r\n    end = end || getCursor(context);\r\n    return {\r\n        start,\r\n        end,\r\n        source: context.originalSource.slice(start.offset, end.offset)\r\n    };\r\n}\r\nfunction last(xs) {\r\n    return xs[xs.length - 1];\r\n}\r\nfunction startsWith(source, searchString) {\r\n    return source.startsWith(searchString);\r\n}\r\nfunction advanceBy(context, numberOfCharacters) {\r\n    const { source } = context;\r\n    advancePositionWithMutation(context, source, numberOfCharacters);\r\n    context.source = source.slice(numberOfCharacters);\r\n}\r\nfunction advanceSpaces(context) {\r\n    const match = /^[\\t\\r\\n\\f ]+/.exec(context.source);\r\n    if (match) {\r\n        advanceBy(context, match[0].length);\r\n    }\r\n}\r\nfunction getNewPosition(context, start, numberOfCharacters) {\r\n    return advancePositionWithClone(start, context.originalSource.slice(start.offset, numberOfCharacters), numberOfCharacters);\r\n}\r\nfunction emitError(context, code, offset, loc = getCursor(context)) {\r\n    if (offset) {\r\n        loc.offset += offset;\r\n        loc.column += offset;\r\n    }\r\n    context.options.onError(createCompilerError(code, {\r\n        start: loc,\r\n        end: loc,\r\n        source: ''\r\n    }));\r\n}\r\nfunction isEnd(context, mode, ancestors) {\r\n    const s = context.source;\r\n    switch (mode) {\r\n        case 0 /* DATA */:\r\n            if (startsWith(s, '</')) {\r\n                // TODO: probably bad performance\r\n                for (let i = ancestors.length - 1; i >= 0; --i) {\r\n                    if (startsWithEndTagOpen(s, ancestors[i].tag)) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        case 1 /* RCDATA */:\r\n        case 2 /* RAWTEXT */: {\r\n            const parent = last(ancestors);\r\n            if (parent && startsWithEndTagOpen(s, parent.tag)) {\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        case 3 /* CDATA */:\r\n            if (startsWith(s, ']]>')) {\r\n                return true;\r\n            }\r\n            break;\r\n    }\r\n    return !s;\r\n}\r\nfunction startsWithEndTagOpen(source, tag) {\r\n    return (startsWith(source, '</') &&\r\n        source.slice(2, 2 + tag.length).toLowerCase() === tag.toLowerCase() &&\r\n        /[\\t\\r\\n\\f />]/.test(source[2 + tag.length] || '>'));\r\n}\n\nfunction hoistStatic(root, context) {\r\n    walk(root, context, \r\n    // Root node is unfortunately non-hoistable due to potential parent\r\n    // fallthrough attributes.\r\n    isSingleElementRoot(root, root.children[0]));\r\n}\r\nfunction isSingleElementRoot(root, child) {\r\n    const { children } = root;\r\n    return (children.length === 1 &&\r\n        child.type === 1 /* ELEMENT */ &&\r\n        !isSlotOutlet(child));\r\n}\r\nfunction walk(node, context, doNotHoistNode = false) {\r\n    const { children } = node;\r\n    const originalCount = children.length;\r\n    let hoistedCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // only plain elements & text calls are eligible for hoisting.\r\n        if (child.type === 1 /* ELEMENT */ &&\r\n            child.tagType === 0 /* ELEMENT */) {\r\n            const constantType = doNotHoistNode\r\n                ? 0 /* NOT_CONSTANT */\r\n                : getConstantType(child, context);\r\n            if (constantType > 0 /* NOT_CONSTANT */) {\r\n                if (constantType >= 2 /* CAN_HOIST */) {\r\n                    child.codegenNode.patchFlag =\r\n                        -1 /* HOISTED */ + ((process.env.NODE_ENV !== 'production') ? ` /* HOISTED */` : ``);\r\n                    child.codegenNode = context.hoist(child.codegenNode);\r\n                    hoistedCount++;\r\n                    continue;\r\n                }\r\n            }\r\n            else {\r\n                // node may contain dynamic children, but its props may be eligible for\r\n                // hoisting.\r\n                const codegenNode = child.codegenNode;\r\n                if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                    const flag = getPatchFlag(codegenNode);\r\n                    if ((!flag ||\r\n                        flag === 512 /* NEED_PATCH */ ||\r\n                        flag === 1 /* TEXT */) &&\r\n                        getGeneratedPropsConstantType(child, context) >=\r\n                            2 /* CAN_HOIST */) {\r\n                        const props = getNodeProps(child);\r\n                        if (props) {\r\n                            codegenNode.props = context.hoist(props);\r\n                        }\r\n                    }\r\n                    if (codegenNode.dynamicProps) {\r\n                        codegenNode.dynamicProps = context.hoist(codegenNode.dynamicProps);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (child.type === 12 /* TEXT_CALL */ &&\r\n            getConstantType(child.content, context) >= 2 /* CAN_HOIST */) {\r\n            child.codegenNode = context.hoist(child.codegenNode);\r\n            hoistedCount++;\r\n        }\r\n        // walk further\r\n        if (child.type === 1 /* ELEMENT */) {\r\n            const isComponent = child.tagType === 1 /* COMPONENT */;\r\n            if (isComponent) {\r\n                context.scopes.vSlot++;\r\n            }\r\n            walk(child, context);\r\n            if (isComponent) {\r\n                context.scopes.vSlot--;\r\n            }\r\n        }\r\n        else if (child.type === 11 /* FOR */) {\r\n            // Do not hoist v-for single child because it has to be a block\r\n            walk(child, context, child.children.length === 1);\r\n        }\r\n        else if (child.type === 9 /* IF */) {\r\n            for (let i = 0; i < child.branches.length; i++) {\r\n                // Do not hoist v-if single child because it has to be a block\r\n                walk(child.branches[i], context, child.branches[i].children.length === 1);\r\n            }\r\n        }\r\n    }\r\n    if (hoistedCount && context.transformHoist) {\r\n        context.transformHoist(children, context, node);\r\n    }\r\n    // all children were hoisted - the entire children array is hoistable.\r\n    if (hoistedCount &&\r\n        hoistedCount === originalCount &&\r\n        node.type === 1 /* ELEMENT */ &&\r\n        node.tagType === 0 /* ELEMENT */ &&\r\n        node.codegenNode &&\r\n        node.codegenNode.type === 13 /* VNODE_CALL */ &&\r\n        isArray(node.codegenNode.children)) {\r\n        node.codegenNode.children = context.hoist(createArrayExpression(node.codegenNode.children));\r\n    }\r\n}\r\nfunction getConstantType(node, context) {\r\n    const { constantCache } = context;\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n            if (node.tagType !== 0 /* ELEMENT */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const cached = constantCache.get(node);\r\n            if (cached !== undefined) {\r\n                return cached;\r\n            }\r\n            const codegenNode = node.codegenNode;\r\n            if (codegenNode.type !== 13 /* VNODE_CALL */) {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (codegenNode.isBlock &&\r\n                node.tag !== 'svg' &&\r\n                node.tag !== 'foreignObject') {\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n            const flag = getPatchFlag(codegenNode);\r\n            if (!flag) {\r\n                let returnType = 3 /* CAN_STRINGIFY */;\r\n                // Element itself has no patch flag. However we still need to check:\r\n                // 1. Even for a node with no patch flag, it is possible for it to contain\r\n                // non-hoistable expressions that refers to scope variables, e.g. compiler\r\n                // injected keys or cached event handlers. Therefore we need to always\r\n                // check the codegenNode's props to be sure.\r\n                const generatedPropsType = getGeneratedPropsConstantType(node, context);\r\n                if (generatedPropsType === 0 /* NOT_CONSTANT */) {\r\n                    constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                if (generatedPropsType < returnType) {\r\n                    returnType = generatedPropsType;\r\n                }\r\n                // 2. its children.\r\n                for (let i = 0; i < node.children.length; i++) {\r\n                    const childType = getConstantType(node.children[i], context);\r\n                    if (childType === 0 /* NOT_CONSTANT */) {\r\n                        constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                        return 0 /* NOT_CONSTANT */;\r\n                    }\r\n                    if (childType < returnType) {\r\n                        returnType = childType;\r\n                    }\r\n                }\r\n                // 3. if the type is not already CAN_SKIP_PATCH which is the lowest non-0\r\n                // type, check if any of the props can cause the type to be lowered\r\n                // we can skip can_patch because it's guaranteed by the absence of a\r\n                // patchFlag.\r\n                if (returnType > 1 /* CAN_SKIP_PATCH */) {\r\n                    for (let i = 0; i < node.props.length; i++) {\r\n                        const p = node.props[i];\r\n                        if (p.type === 7 /* DIRECTIVE */ && p.name === 'bind' && p.exp) {\r\n                            const expType = getConstantType(p.exp, context);\r\n                            if (expType === 0 /* NOT_CONSTANT */) {\r\n                                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                                return 0 /* NOT_CONSTANT */;\r\n                            }\r\n                            if (expType < returnType) {\r\n                                returnType = expType;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                // only svg/foreignObject could be block here, however if they are\r\n                // static then they don't need to be blocks since there will be no\r\n                // nested updates.\r\n                if (codegenNode.isBlock) {\r\n                    context.removeHelper(OPEN_BLOCK);\r\n                    context.removeHelper(getVNodeBlockHelper(context.inSSR, codegenNode.isComponent));\r\n                    codegenNode.isBlock = false;\r\n                    context.helper(getVNodeHelper(context.inSSR, codegenNode.isComponent));\r\n                }\r\n                constantCache.set(node, returnType);\r\n                return returnType;\r\n            }\r\n            else {\r\n                constantCache.set(node, 0 /* NOT_CONSTANT */);\r\n                return 0 /* NOT_CONSTANT */;\r\n            }\r\n        case 2 /* TEXT */:\r\n        case 3 /* COMMENT */:\r\n            return 3 /* CAN_STRINGIFY */;\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n        case 10 /* IF_BRANCH */:\r\n            return 0 /* NOT_CONSTANT */;\r\n        case 5 /* INTERPOLATION */:\r\n        case 12 /* TEXT_CALL */:\r\n            return getConstantType(node.content, context);\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            return node.constType;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            let returnType = 3 /* CAN_STRINGIFY */;\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                const child = node.children[i];\r\n                if (isString(child) || isSymbol(child)) {\r\n                    continue;\r\n                }\r\n                const childType = getConstantType(child, context);\r\n                if (childType === 0 /* NOT_CONSTANT */) {\r\n                    return 0 /* NOT_CONSTANT */;\r\n                }\r\n                else if (childType < returnType) {\r\n                    returnType = childType;\r\n                }\r\n            }\r\n            return returnType;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) ;\r\n            return 0 /* NOT_CONSTANT */;\r\n    }\r\n}\r\nconst allowHoistedHelperSet = new Set([\r\n    NORMALIZE_CLASS,\r\n    NORMALIZE_STYLE,\r\n    NORMALIZE_PROPS,\r\n    GUARD_REACTIVE_PROPS\r\n]);\r\nfunction getConstantTypeOfHelperCall(value, context) {\r\n    if (value.type === 14 /* JS_CALL_EXPRESSION */ &&\r\n        !isString(value.callee) &&\r\n        allowHoistedHelperSet.has(value.callee)) {\r\n        const arg = value.arguments[0];\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            return getConstantType(arg, context);\r\n        }\r\n        else if (arg.type === 14 /* JS_CALL_EXPRESSION */) {\r\n            // in the case of nested helper call, e.g. `normalizeProps(guardReactiveProps(exp))`\r\n            return getConstantTypeOfHelperCall(arg, context);\r\n        }\r\n    }\r\n    return 0 /* NOT_CONSTANT */;\r\n}\r\nfunction getGeneratedPropsConstantType(node, context) {\r\n    let returnType = 3 /* CAN_STRINGIFY */;\r\n    const props = getNodeProps(node);\r\n    if (props && props.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n        const { properties } = props;\r\n        for (let i = 0; i < properties.length; i++) {\r\n            const { key, value } = properties[i];\r\n            const keyType = getConstantType(key, context);\r\n            if (keyType === 0 /* NOT_CONSTANT */) {\r\n                return keyType;\r\n            }\r\n            if (keyType < returnType) {\r\n                returnType = keyType;\r\n            }\r\n            let valueType;\r\n            if (value.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                valueType = getConstantType(value, context);\r\n            }\r\n            else if (value.type === 14 /* JS_CALL_EXPRESSION */) {\r\n                // some helper calls can be hoisted,\r\n                // such as the `normalizeProps` generated by the compiler for pre-normalize class,\r\n                // in this case we need to respect the ConstantType of the helper's arguments\r\n                valueType = getConstantTypeOfHelperCall(value, context);\r\n            }\r\n            else {\r\n                valueType = 0 /* NOT_CONSTANT */;\r\n            }\r\n            if (valueType === 0 /* NOT_CONSTANT */) {\r\n                return valueType;\r\n            }\r\n            if (valueType < returnType) {\r\n                returnType = valueType;\r\n            }\r\n        }\r\n    }\r\n    return returnType;\r\n}\r\nfunction getNodeProps(node) {\r\n    const codegenNode = node.codegenNode;\r\n    if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n        return codegenNode.props;\r\n    }\r\n}\r\nfunction getPatchFlag(node) {\r\n    const flag = node.patchFlag;\r\n    return flag ? parseInt(flag, 10) : undefined;\r\n}\n\nfunction createTransformContext(root, { filename = '', prefixIdentifiers = false, hoistStatic = false, cacheHandlers = false, nodeTransforms = [], directiveTransforms = {}, transformHoist = null, isBuiltInComponent = NOOP, isCustomElement = NOOP, expressionPlugins = [], scopeId = null, slotted = true, ssr = false, inSSR = false, ssrCssVars = ``, bindingMetadata = EMPTY_OBJ, inline = false, isTS = false, onError = defaultOnError, onWarn = defaultOnWarn, compatConfig }) {\r\n    const nameMatch = filename.replace(/\\?.*$/, '').match(/([^/\\\\]+)\\.\\w+$/);\r\n    const context = {\r\n        // options\r\n        selfName: nameMatch && capitalize(camelize$1(nameMatch[1])),\r\n        prefixIdentifiers,\r\n        hoistStatic,\r\n        cacheHandlers,\r\n        nodeTransforms,\r\n        directiveTransforms,\r\n        transformHoist,\r\n        isBuiltInComponent,\r\n        isCustomElement,\r\n        expressionPlugins,\r\n        scopeId,\r\n        slotted,\r\n        ssr,\r\n        inSSR,\r\n        ssrCssVars,\r\n        bindingMetadata,\r\n        inline,\r\n        isTS,\r\n        onError,\r\n        onWarn,\r\n        compatConfig,\r\n        // state\r\n        root,\r\n        helpers: new Map(),\r\n        components: new Set(),\r\n        directives: new Set(),\r\n        hoists: [],\r\n        imports: [],\r\n        constantCache: new Map(),\r\n        temps: 0,\r\n        cached: 0,\r\n        identifiers: Object.create(null),\r\n        scopes: {\r\n            vFor: 0,\r\n            vSlot: 0,\r\n            vPre: 0,\r\n            vOnce: 0\r\n        },\r\n        parent: null,\r\n        currentNode: root,\r\n        childIndex: 0,\r\n        inVOnce: false,\r\n        // methods\r\n        helper(name) {\r\n            const count = context.helpers.get(name) || 0;\r\n            context.helpers.set(name, count + 1);\r\n            return name;\r\n        },\r\n        removeHelper(name) {\r\n            const count = context.helpers.get(name);\r\n            if (count) {\r\n                const currentCount = count - 1;\r\n                if (!currentCount) {\r\n                    context.helpers.delete(name);\r\n                }\r\n                else {\r\n                    context.helpers.set(name, currentCount);\r\n                }\r\n            }\r\n        },\r\n        helperString(name) {\r\n            return `_${helperNameMap[context.helper(name)]}`;\r\n        },\r\n        replaceNode(node) {\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!context.currentNode) {\r\n                    throw new Error(`Node being replaced is already removed.`);\r\n                }\r\n                if (!context.parent) {\r\n                    throw new Error(`Cannot replace root node.`);\r\n                }\r\n            }\r\n            context.parent.children[context.childIndex] = context.currentNode = node;\r\n        },\r\n        removeNode(node) {\r\n            if ((process.env.NODE_ENV !== 'production') && !context.parent) {\r\n                throw new Error(`Cannot remove root node.`);\r\n            }\r\n            const list = context.parent.children;\r\n            const removalIndex = node\r\n                ? list.indexOf(node)\r\n                : context.currentNode\r\n                    ? context.childIndex\r\n                    : -1;\r\n            /* istanbul ignore if */\r\n            if ((process.env.NODE_ENV !== 'production') && removalIndex < 0) {\r\n                throw new Error(`node being removed is not a child of current parent`);\r\n            }\r\n            if (!node || node === context.currentNode) {\r\n                // current node removed\r\n                context.currentNode = null;\r\n                context.onNodeRemoved();\r\n            }\r\n            else {\r\n                // sibling node removed\r\n                if (context.childIndex > removalIndex) {\r\n                    context.childIndex--;\r\n                    context.onNodeRemoved();\r\n                }\r\n            }\r\n            context.parent.children.splice(removalIndex, 1);\r\n        },\r\n        onNodeRemoved: () => { },\r\n        addIdentifiers(exp) {\r\n        },\r\n        removeIdentifiers(exp) {\r\n        },\r\n        hoist(exp) {\r\n            if (isString(exp))\r\n                exp = createSimpleExpression(exp);\r\n            context.hoists.push(exp);\r\n            const identifier = createSimpleExpression(`_hoisted_${context.hoists.length}`, false, exp.loc, 2 /* CAN_HOIST */);\r\n            identifier.hoisted = exp;\r\n            return identifier;\r\n        },\r\n        cache(exp, isVNode = false) {\r\n            return createCacheExpression(context.cached++, exp, isVNode);\r\n        }\r\n    };\r\n    {\r\n        context.filters = new Set();\r\n    }\r\n    return context;\r\n}\r\nfunction transform(root, options) {\r\n    const context = createTransformContext(root, options);\r\n    traverseNode(root, context);\r\n    if (options.hoistStatic) {\r\n        hoistStatic(root, context);\r\n    }\r\n    if (!options.ssr) {\r\n        createRootCodegen(root, context);\r\n    }\r\n    // finalize meta information\r\n    root.helpers = [...context.helpers.keys()];\r\n    root.components = [...context.components];\r\n    root.directives = [...context.directives];\r\n    root.imports = context.imports;\r\n    root.hoists = context.hoists;\r\n    root.temps = context.temps;\r\n    root.cached = context.cached;\r\n    {\r\n        root.filters = [...context.filters];\r\n    }\r\n}\r\nfunction createRootCodegen(root, context) {\r\n    const { helper } = context;\r\n    const { children } = root;\r\n    if (children.length === 1) {\r\n        const child = children[0];\r\n        // if the single child is an element, turn it into a block.\r\n        if (isSingleElementRoot(root, child) && child.codegenNode) {\r\n            // single element root is never hoisted so codegenNode will never be\r\n            // SimpleExpressionNode\r\n            const codegenNode = child.codegenNode;\r\n            if (codegenNode.type === 13 /* VNODE_CALL */) {\r\n                makeBlock(codegenNode, context);\r\n            }\r\n            root.codegenNode = codegenNode;\r\n        }\r\n        else {\r\n            // - single <slot/>, IfNode, ForNode: already blocks.\r\n            // - single text node: always patched.\r\n            // root codegen falls through via genNode()\r\n            root.codegenNode = child;\r\n        }\r\n    }\r\n    else if (children.length > 1) {\r\n        // root has multiple nodes - return a fragment block.\r\n        let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n        let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n        // check if the fragment actually contains a single valid child with\r\n        // the rest being comments\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n            patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n            patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n        }\r\n        root.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, root.children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n    }\r\n    else ;\r\n}\r\nfunction traverseChildren(parent, context) {\r\n    let i = 0;\r\n    const nodeRemoved = () => {\r\n        i--;\r\n    };\r\n    for (; i < parent.children.length; i++) {\r\n        const child = parent.children[i];\r\n        if (isString(child))\r\n            continue;\r\n        context.parent = parent;\r\n        context.childIndex = i;\r\n        context.onNodeRemoved = nodeRemoved;\r\n        traverseNode(child, context);\r\n    }\r\n}\r\nfunction traverseNode(node, context) {\r\n    context.currentNode = node;\r\n    // apply transform plugins\r\n    const { nodeTransforms } = context;\r\n    const exitFns = [];\r\n    for (let i = 0; i < nodeTransforms.length; i++) {\r\n        const onExit = nodeTransforms[i](node, context);\r\n        if (onExit) {\r\n            if (isArray(onExit)) {\r\n                exitFns.push(...onExit);\r\n            }\r\n            else {\r\n                exitFns.push(onExit);\r\n            }\r\n        }\r\n        if (!context.currentNode) {\r\n            // node was removed\r\n            return;\r\n        }\r\n        else {\r\n            // node may have been replaced\r\n            node = context.currentNode;\r\n        }\r\n    }\r\n    switch (node.type) {\r\n        case 3 /* COMMENT */:\r\n            if (!context.ssr) {\r\n                // inject import for the Comment symbol, which is needed for creating\r\n                // comment nodes with `createVNode`\r\n                context.helper(CREATE_COMMENT);\r\n            }\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            // no need to traverse, but we need to inject toString helper\r\n            if (!context.ssr) {\r\n                context.helper(TO_DISPLAY_STRING);\r\n            }\r\n            break;\r\n        // for container types, further traverse downwards\r\n        case 9 /* IF */:\r\n            for (let i = 0; i < node.branches.length; i++) {\r\n                traverseNode(node.branches[i], context);\r\n            }\r\n            break;\r\n        case 10 /* IF_BRANCH */:\r\n        case 11 /* FOR */:\r\n        case 1 /* ELEMENT */:\r\n        case 0 /* ROOT */:\r\n            traverseChildren(node, context);\r\n            break;\r\n    }\r\n    // exit transforms\r\n    context.currentNode = node;\r\n    let i = exitFns.length;\r\n    while (i--) {\r\n        exitFns[i]();\r\n    }\r\n}\r\nfunction createStructuralDirectiveTransform(name, fn) {\r\n    const matches = isString(name)\r\n        ? (n) => n === name\r\n        : (n) => name.test(n);\r\n    return (node, context) => {\r\n        if (node.type === 1 /* ELEMENT */) {\r\n            const { props } = node;\r\n            // structural directive transforms are not concerned with slots\r\n            // as they are handled separately in vSlot.ts\r\n            if (node.tagType === 3 /* TEMPLATE */ && props.some(isVSlot)) {\r\n                return;\r\n            }\r\n            const exitFns = [];\r\n            for (let i = 0; i < props.length; i++) {\r\n                const prop = props[i];\r\n                if (prop.type === 7 /* DIRECTIVE */ && matches(prop.name)) {\r\n                    // structural directives are removed to avoid infinite recursion\r\n                    // also we remove them *before* applying so that it can further\r\n                    // traverse itself in case it moves the node around\r\n                    props.splice(i, 1);\r\n                    i--;\r\n                    const onExit = fn(node, prop, context);\r\n                    if (onExit)\r\n                        exitFns.push(onExit);\r\n                }\r\n            }\r\n            return exitFns;\r\n        }\r\n    };\r\n}\n\nconst PURE_ANNOTATION = `/*#__PURE__*/`;\r\nfunction createCodegenContext(ast, { mode = 'function', prefixIdentifiers = mode === 'module', sourceMap = false, filename = `template.vue.html`, scopeId = null, optimizeImports = false, runtimeGlobalName = `Vue`, runtimeModuleName = `vue`, ssrRuntimeModuleName = 'vue/server-renderer', ssr = false, isTS = false, inSSR = false }) {\r\n    const context = {\r\n        mode,\r\n        prefixIdentifiers,\r\n        sourceMap,\r\n        filename,\r\n        scopeId,\r\n        optimizeImports,\r\n        runtimeGlobalName,\r\n        runtimeModuleName,\r\n        ssrRuntimeModuleName,\r\n        ssr,\r\n        isTS,\r\n        inSSR,\r\n        source: ast.loc.source,\r\n        code: ``,\r\n        column: 1,\r\n        line: 1,\r\n        offset: 0,\r\n        indentLevel: 0,\r\n        pure: false,\r\n        map: undefined,\r\n        helper(key) {\r\n            return `_${helperNameMap[key]}`;\r\n        },\r\n        push(code, node) {\r\n            context.code += code;\r\n        },\r\n        indent() {\r\n            newline(++context.indentLevel);\r\n        },\r\n        deindent(withoutNewLine = false) {\r\n            if (withoutNewLine) {\r\n                --context.indentLevel;\r\n            }\r\n            else {\r\n                newline(--context.indentLevel);\r\n            }\r\n        },\r\n        newline() {\r\n            newline(context.indentLevel);\r\n        }\r\n    };\r\n    function newline(n) {\r\n        context.push('\\n' + `  `.repeat(n));\r\n    }\r\n    return context;\r\n}\r\nfunction generate(ast, options = {}) {\r\n    const context = createCodegenContext(ast, options);\r\n    if (options.onContextCreated)\r\n        options.onContextCreated(context);\r\n    const { mode, push, prefixIdentifiers, indent, deindent, newline, scopeId, ssr } = context;\r\n    const hasHelpers = ast.helpers.length > 0;\r\n    const useWithBlock = !prefixIdentifiers && mode !== 'module';\r\n    // preambles\r\n    // in setup() inline mode, the preamble is generated in a sub context\r\n    // and returned separately.\r\n    const preambleContext = context;\r\n    {\r\n        genFunctionPreamble(ast, preambleContext);\r\n    }\r\n    // enter render function\r\n    const functionName = ssr ? `ssrRender` : `render`;\r\n    const args = ssr ? ['_ctx', '_push', '_parent', '_attrs'] : ['_ctx', '_cache'];\r\n    const signature = args.join(', ');\r\n    {\r\n        push(`function ${functionName}(${signature}) {`);\r\n    }\r\n    indent();\r\n    if (useWithBlock) {\r\n        push(`with (_ctx) {`);\r\n        indent();\r\n        // function mode const declarations should be inside with block\r\n        // also they should be renamed to avoid collision with user properties\r\n        if (hasHelpers) {\r\n            push(`const { ${ast.helpers\r\n                .map(s => `${helperNameMap[s]}: _${helperNameMap[s]}`)\r\n                .join(', ')} } = _Vue`);\r\n            push(`\\n`);\r\n            newline();\r\n        }\r\n    }\r\n    // generate asset resolution statements\r\n    if (ast.components.length) {\r\n        genAssets(ast.components, 'component', context);\r\n        if (ast.directives.length || ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.directives.length) {\r\n        genAssets(ast.directives, 'directive', context);\r\n        if (ast.temps > 0) {\r\n            newline();\r\n        }\r\n    }\r\n    if (ast.filters && ast.filters.length) {\r\n        newline();\r\n        genAssets(ast.filters, 'filter', context);\r\n        newline();\r\n    }\r\n    if (ast.temps > 0) {\r\n        push(`let `);\r\n        for (let i = 0; i < ast.temps; i++) {\r\n            push(`${i > 0 ? `, ` : ``}_temp${i}`);\r\n        }\r\n    }\r\n    if (ast.components.length || ast.directives.length || ast.temps) {\r\n        push(`\\n`);\r\n        newline();\r\n    }\r\n    // generate the VNode tree expression\r\n    if (!ssr) {\r\n        push(`return `);\r\n    }\r\n    if (ast.codegenNode) {\r\n        genNode(ast.codegenNode, context);\r\n    }\r\n    else {\r\n        push(`null`);\r\n    }\r\n    if (useWithBlock) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    deindent();\r\n    push(`}`);\r\n    return {\r\n        ast,\r\n        code: context.code,\r\n        preamble: ``,\r\n        // SourceMapGenerator does have toJSON() method but it's not in the types\r\n        map: context.map ? context.map.toJSON() : undefined\r\n    };\r\n}\r\nfunction genFunctionPreamble(ast, context) {\r\n    const { ssr, prefixIdentifiers, push, newline, runtimeModuleName, runtimeGlobalName, ssrRuntimeModuleName } = context;\r\n    const VueBinding = runtimeGlobalName;\r\n    const aliasHelper = (s) => `${helperNameMap[s]}: _${helperNameMap[s]}`;\r\n    // Generate const declaration for helpers\r\n    // In prefix mode, we place the const declaration at top so it's done\r\n    // only once; But if we not prefixing, we place the declaration inside the\r\n    // with block so it doesn't incur the `in` check cost for every helper access.\r\n    if (ast.helpers.length > 0) {\r\n        {\r\n            // \"with\" mode.\r\n            // save Vue in a separate variable to avoid collision\r\n            push(`const _Vue = ${VueBinding}\\n`);\r\n            // in \"with\" mode, helpers are declared inside the with block to avoid\r\n            // has check cost, but hoists are lifted out of the function - we need\r\n            // to provide the helper here.\r\n            if (ast.hoists.length) {\r\n                const staticHelpers = [\r\n                    CREATE_VNODE,\r\n                    CREATE_ELEMENT_VNODE,\r\n                    CREATE_COMMENT,\r\n                    CREATE_TEXT,\r\n                    CREATE_STATIC\r\n                ]\r\n                    .filter(helper => ast.helpers.includes(helper))\r\n                    .map(aliasHelper)\r\n                    .join(', ');\r\n                push(`const { ${staticHelpers} } = _Vue\\n`);\r\n            }\r\n        }\r\n    }\r\n    genHoists(ast.hoists, context);\r\n    newline();\r\n    push(`return `);\r\n}\r\nfunction genAssets(assets, type, { helper, push, newline, isTS }) {\r\n    const resolver = helper(type === 'filter'\r\n        ? RESOLVE_FILTER\r\n        : type === 'component'\r\n            ? RESOLVE_COMPONENT\r\n            : RESOLVE_DIRECTIVE);\r\n    for (let i = 0; i < assets.length; i++) {\r\n        let id = assets[i];\r\n        // potential component implicit self-reference inferred from SFC filename\r\n        const maybeSelfReference = id.endsWith('__self');\r\n        if (maybeSelfReference) {\r\n            id = id.slice(0, -6);\r\n        }\r\n        push(`const ${toValidAssetId(id, type)} = ${resolver}(${JSON.stringify(id)}${maybeSelfReference ? `, true` : ``})${isTS ? `!` : ``}`);\r\n        if (i < assets.length - 1) {\r\n            newline();\r\n        }\r\n    }\r\n}\r\nfunction genHoists(hoists, context) {\r\n    if (!hoists.length) {\r\n        return;\r\n    }\r\n    context.pure = true;\r\n    const { push, newline, helper, scopeId, mode } = context;\r\n    newline();\r\n    for (let i = 0; i < hoists.length; i++) {\r\n        const exp = hoists[i];\r\n        if (exp) {\r\n            push(`const _hoisted_${i + 1} = ${``}`);\r\n            genNode(exp, context);\r\n            newline();\r\n        }\r\n    }\r\n    context.pure = false;\r\n}\r\nfunction isText$1(n) {\r\n    return (isString(n) ||\r\n        n.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n        n.type === 2 /* TEXT */ ||\r\n        n.type === 5 /* INTERPOLATION */ ||\r\n        n.type === 8 /* COMPOUND_EXPRESSION */);\r\n}\r\nfunction genNodeListAsArray(nodes, context) {\r\n    const multilines = nodes.length > 3 ||\r\n        (((process.env.NODE_ENV !== 'production')) && nodes.some(n => isArray(n) || !isText$1(n)));\r\n    context.push(`[`);\r\n    multilines && context.indent();\r\n    genNodeList(nodes, context, multilines);\r\n    multilines && context.deindent();\r\n    context.push(`]`);\r\n}\r\nfunction genNodeList(nodes, context, multilines = false, comma = true) {\r\n    const { push, newline } = context;\r\n    for (let i = 0; i < nodes.length; i++) {\r\n        const node = nodes[i];\r\n        if (isString(node)) {\r\n            push(node);\r\n        }\r\n        else if (isArray(node)) {\r\n            genNodeListAsArray(node, context);\r\n        }\r\n        else {\r\n            genNode(node, context);\r\n        }\r\n        if (i < nodes.length - 1) {\r\n            if (multilines) {\r\n                comma && push(',');\r\n                newline();\r\n            }\r\n            else {\r\n                comma && push(', ');\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction genNode(node, context) {\r\n    if (isString(node)) {\r\n        context.push(node);\r\n        return;\r\n    }\r\n    if (isSymbol(node)) {\r\n        context.push(context.helper(node));\r\n        return;\r\n    }\r\n    switch (node.type) {\r\n        case 1 /* ELEMENT */:\r\n        case 9 /* IF */:\r\n        case 11 /* FOR */:\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                assert(node.codegenNode != null, `Codegen node is missing for element/if/for node. ` +\r\n                    `Apply appropriate transforms first.`);\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 2 /* TEXT */:\r\n            genText(node, context);\r\n            break;\r\n        case 4 /* SIMPLE_EXPRESSION */:\r\n            genExpression(node, context);\r\n            break;\r\n        case 5 /* INTERPOLATION */:\r\n            genInterpolation(node, context);\r\n            break;\r\n        case 12 /* TEXT_CALL */:\r\n            genNode(node.codegenNode, context);\r\n            break;\r\n        case 8 /* COMPOUND_EXPRESSION */:\r\n            genCompoundExpression(node, context);\r\n            break;\r\n        case 3 /* COMMENT */:\r\n            genComment(node, context);\r\n            break;\r\n        case 13 /* VNODE_CALL */:\r\n            genVNodeCall(node, context);\r\n            break;\r\n        case 14 /* JS_CALL_EXPRESSION */:\r\n            genCallExpression(node, context);\r\n            break;\r\n        case 15 /* JS_OBJECT_EXPRESSION */:\r\n            genObjectExpression(node, context);\r\n            break;\r\n        case 17 /* JS_ARRAY_EXPRESSION */:\r\n            genArrayExpression(node, context);\r\n            break;\r\n        case 18 /* JS_FUNCTION_EXPRESSION */:\r\n            genFunctionExpression(node, context);\r\n            break;\r\n        case 19 /* JS_CONDITIONAL_EXPRESSION */:\r\n            genConditionalExpression(node, context);\r\n            break;\r\n        case 20 /* JS_CACHE_EXPRESSION */:\r\n            genCacheExpression(node, context);\r\n            break;\r\n        case 21 /* JS_BLOCK_STATEMENT */:\r\n            genNodeList(node.body, context, true, false);\r\n            break;\r\n        // SSR only types\r\n        case 22 /* JS_TEMPLATE_LITERAL */:\r\n            break;\r\n        case 23 /* JS_IF_STATEMENT */:\r\n            break;\r\n        case 24 /* JS_ASSIGNMENT_EXPRESSION */:\r\n            break;\r\n        case 25 /* JS_SEQUENCE_EXPRESSION */:\r\n            break;\r\n        case 26 /* JS_RETURN_STATEMENT */:\r\n            break;\r\n        /* istanbul ignore next */\r\n        case 10 /* IF_BRANCH */:\r\n            // noop\r\n            break;\r\n        default:\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                assert(false, `unhandled codegen node type: ${node.type}`);\r\n                // make sure we exhaust all possible types\r\n                const exhaustiveCheck = node;\r\n                return exhaustiveCheck;\r\n            }\r\n    }\r\n}\r\nfunction genText(node, context) {\r\n    context.push(JSON.stringify(node.content), node);\r\n}\r\nfunction genExpression(node, context) {\r\n    const { content, isStatic } = node;\r\n    context.push(isStatic ? JSON.stringify(content) : content, node);\r\n}\r\nfunction genInterpolation(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure)\r\n        push(PURE_ANNOTATION);\r\n    push(`${helper(TO_DISPLAY_STRING)}(`);\r\n    genNode(node.content, context);\r\n    push(`)`);\r\n}\r\nfunction genCompoundExpression(node, context) {\r\n    for (let i = 0; i < node.children.length; i++) {\r\n        const child = node.children[i];\r\n        if (isString(child)) {\r\n            context.push(child);\r\n        }\r\n        else {\r\n            genNode(child, context);\r\n        }\r\n    }\r\n}\r\nfunction genExpressionAsPropertyKey(node, context) {\r\n    const { push } = context;\r\n    if (node.type === 8 /* COMPOUND_EXPRESSION */) {\r\n        push(`[`);\r\n        genCompoundExpression(node, context);\r\n        push(`]`);\r\n    }\r\n    else if (node.isStatic) {\r\n        // only quote keys if necessary\r\n        const text = isSimpleIdentifier(node.content)\r\n            ? node.content\r\n            : JSON.stringify(node.content);\r\n        push(text, node);\r\n    }\r\n    else {\r\n        push(`[${node.content}]`, node);\r\n    }\r\n}\r\nfunction genComment(node, context) {\r\n    const { push, helper, pure } = context;\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(`${helper(CREATE_COMMENT)}(${JSON.stringify(node.content)})`, node);\r\n}\r\nfunction genVNodeCall(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const { tag, props, children, patchFlag, dynamicProps, directives, isBlock, disableTracking, isComponent } = node;\r\n    if (directives) {\r\n        push(helper(WITH_DIRECTIVES) + `(`);\r\n    }\r\n    if (isBlock) {\r\n        push(`(${helper(OPEN_BLOCK)}(${disableTracking ? `true` : ``}), `);\r\n    }\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    const callHelper = isBlock\r\n        ? getVNodeBlockHelper(context.inSSR, isComponent)\r\n        : getVNodeHelper(context.inSSR, isComponent);\r\n    push(helper(callHelper) + `(`, node);\r\n    genNodeList(genNullableArgs([tag, props, children, patchFlag, dynamicProps]), context);\r\n    push(`)`);\r\n    if (isBlock) {\r\n        push(`)`);\r\n    }\r\n    if (directives) {\r\n        push(`, `);\r\n        genNode(directives, context);\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genNullableArgs(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i] != null)\r\n            break;\r\n    }\r\n    return args.slice(0, i + 1).map(arg => arg || `null`);\r\n}\r\n// JavaScript\r\nfunction genCallExpression(node, context) {\r\n    const { push, helper, pure } = context;\r\n    const callee = isString(node.callee) ? node.callee : helper(node.callee);\r\n    if (pure) {\r\n        push(PURE_ANNOTATION);\r\n    }\r\n    push(callee + `(`, node);\r\n    genNodeList(node.arguments, context);\r\n    push(`)`);\r\n}\r\nfunction genObjectExpression(node, context) {\r\n    const { push, indent, deindent, newline } = context;\r\n    const { properties } = node;\r\n    if (!properties.length) {\r\n        push(`{}`, node);\r\n        return;\r\n    }\r\n    const multilines = properties.length > 1 ||\r\n        (((process.env.NODE_ENV !== 'production')) &&\r\n            properties.some(p => p.value.type !== 4 /* SIMPLE_EXPRESSION */));\r\n    push(multilines ? `{` : `{ `);\r\n    multilines && indent();\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const { key, value } = properties[i];\r\n        // key\r\n        genExpressionAsPropertyKey(key, context);\r\n        push(`: `);\r\n        // value\r\n        genNode(value, context);\r\n        if (i < properties.length - 1) {\r\n            // will only reach this if it's multilines\r\n            push(`,`);\r\n            newline();\r\n        }\r\n    }\r\n    multilines && deindent();\r\n    push(multilines ? `}` : ` }`);\r\n}\r\nfunction genArrayExpression(node, context) {\r\n    genNodeListAsArray(node.elements, context);\r\n}\r\nfunction genFunctionExpression(node, context) {\r\n    const { push, indent, deindent } = context;\r\n    const { params, returns, body, newline, isSlot } = node;\r\n    if (isSlot) {\r\n        // wrap slot functions with owner context\r\n        push(`_${helperNameMap[WITH_CTX]}(`);\r\n    }\r\n    push(`(`, node);\r\n    if (isArray(params)) {\r\n        genNodeList(params, context);\r\n    }\r\n    else if (params) {\r\n        genNode(params, context);\r\n    }\r\n    push(`) => `);\r\n    if (newline || body) {\r\n        push(`{`);\r\n        indent();\r\n    }\r\n    if (returns) {\r\n        if (newline) {\r\n            push(`return `);\r\n        }\r\n        if (isArray(returns)) {\r\n            genNodeListAsArray(returns, context);\r\n        }\r\n        else {\r\n            genNode(returns, context);\r\n        }\r\n    }\r\n    else if (body) {\r\n        genNode(body, context);\r\n    }\r\n    if (newline || body) {\r\n        deindent();\r\n        push(`}`);\r\n    }\r\n    if (isSlot) {\r\n        if (node.isNonScopedSlot) {\r\n            push(`, undefined, true`);\r\n        }\r\n        push(`)`);\r\n    }\r\n}\r\nfunction genConditionalExpression(node, context) {\r\n    const { test, consequent, alternate, newline: needNewline } = node;\r\n    const { push, indent, deindent, newline } = context;\r\n    if (test.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        const needsParens = !isSimpleIdentifier(test.content);\r\n        needsParens && push(`(`);\r\n        genExpression(test, context);\r\n        needsParens && push(`)`);\r\n    }\r\n    else {\r\n        push(`(`);\r\n        genNode(test, context);\r\n        push(`)`);\r\n    }\r\n    needNewline && indent();\r\n    context.indentLevel++;\r\n    needNewline || push(` `);\r\n    push(`? `);\r\n    genNode(consequent, context);\r\n    context.indentLevel--;\r\n    needNewline && newline();\r\n    needNewline || push(` `);\r\n    push(`: `);\r\n    const isNested = alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */;\r\n    if (!isNested) {\r\n        context.indentLevel++;\r\n    }\r\n    genNode(alternate, context);\r\n    if (!isNested) {\r\n        context.indentLevel--;\r\n    }\r\n    needNewline && deindent(true /* without newline */);\r\n}\r\nfunction genCacheExpression(node, context) {\r\n    const { push, helper, indent, deindent, newline } = context;\r\n    push(`_cache[${node.index}] || (`);\r\n    if (node.isVNode) {\r\n        indent();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(-1),`);\r\n        newline();\r\n    }\r\n    push(`_cache[${node.index}] = `);\r\n    genNode(node.value, context);\r\n    if (node.isVNode) {\r\n        push(`,`);\r\n        newline();\r\n        push(`${helper(SET_BLOCK_TRACKING)}(1),`);\r\n        newline();\r\n        push(`_cache[${node.index}]`);\r\n        deindent();\r\n    }\r\n    push(`)`);\r\n}\n\nfunction walkIdentifiers(root, onIdentifier, includeAll = false, parentStack = [], knownIds = Object.create(null)) {\r\n    {\r\n        return;\r\n    }\r\n}\r\nfunction isReferencedIdentifier(id, parent, parentStack) {\r\n    {\r\n        return false;\r\n    }\r\n}\r\nfunction isInDestructureAssignment(parent, parentStack) {\r\n    if (parent &&\r\n        (parent.type === 'ObjectProperty' || parent.type === 'ArrayPattern')) {\r\n        let i = parentStack.length;\r\n        while (i--) {\r\n            const p = parentStack[i];\r\n            if (p.type === 'AssignmentExpression') {\r\n                return true;\r\n            }\r\n            else if (p.type !== 'ObjectProperty' && !p.type.endsWith('Pattern')) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction walkFunctionParams(node, onIdent) {\r\n    for (const p of node.params) {\r\n        for (const id of extractIdentifiers(p)) {\r\n            onIdent(id);\r\n        }\r\n    }\r\n}\r\nfunction walkBlockDeclarations(block, onIdent) {\r\n    for (const stmt of block.body) {\r\n        if (stmt.type === 'VariableDeclaration') {\r\n            if (stmt.declare)\r\n                continue;\r\n            for (const decl of stmt.declarations) {\r\n                for (const id of extractIdentifiers(decl.id)) {\r\n                    onIdent(id);\r\n                }\r\n            }\r\n        }\r\n        else if (stmt.type === 'FunctionDeclaration' ||\r\n            stmt.type === 'ClassDeclaration') {\r\n            if (stmt.declare || !stmt.id)\r\n                continue;\r\n            onIdent(stmt.id);\r\n        }\r\n    }\r\n}\r\nfunction extractIdentifiers(param, nodes = []) {\r\n    switch (param.type) {\r\n        case 'Identifier':\r\n            nodes.push(param);\r\n            break;\r\n        case 'MemberExpression':\r\n            let object = param;\r\n            while (object.type === 'MemberExpression') {\r\n                object = object.object;\r\n            }\r\n            nodes.push(object);\r\n            break;\r\n        case 'ObjectPattern':\r\n            for (const prop of param.properties) {\r\n                if (prop.type === 'RestElement') {\r\n                    extractIdentifiers(prop.argument, nodes);\r\n                }\r\n                else {\r\n                    extractIdentifiers(prop.value, nodes);\r\n                }\r\n            }\r\n            break;\r\n        case 'ArrayPattern':\r\n            param.elements.forEach(element => {\r\n                if (element)\r\n                    extractIdentifiers(element, nodes);\r\n            });\r\n            break;\r\n        case 'RestElement':\r\n            extractIdentifiers(param.argument, nodes);\r\n            break;\r\n        case 'AssignmentPattern':\r\n            extractIdentifiers(param.left, nodes);\r\n            break;\r\n    }\r\n    return nodes;\r\n}\r\nconst isFunctionType = (node) => {\r\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\r\n};\r\nconst isStaticProperty = (node) => node &&\r\n    (node.type === 'ObjectProperty' || node.type === 'ObjectMethod') &&\r\n    !node.computed;\r\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\n\n// these keywords should not appear inside expressions, but operators like\r\n// typeof, instanceof and in are allowed\r\nconst prohibitedKeywordRE = new RegExp('\\\\b' +\r\n    ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\r\n        'super,throw,while,yield,delete,export,import,return,switch,default,' +\r\n        'extends,finally,continue,debugger,function,arguments,typeof,void')\r\n        .split(',')\r\n        .join('\\\\b|\\\\b') +\r\n    '\\\\b');\r\n// strip strings in expressions\r\nconst stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\r\n/**\r\n * Validate a non-prefixed expression.\r\n * This is only called when using the in-browser runtime compiler since it\r\n * doesn't prefix expressions.\r\n */\r\nfunction validateBrowserExpression(node, context, asParams = false, asRawStatements = false) {\r\n    const exp = node.content;\r\n    // empty expressions are validated per-directive since some directives\r\n    // do allow empty expressions.\r\n    if (!exp.trim()) {\r\n        return;\r\n    }\r\n    try {\r\n        new Function(asRawStatements\r\n            ? ` ${exp} `\r\n            : `return ${asParams ? `(${exp}) => {}` : `(${exp})`}`);\r\n    }\r\n    catch (e) {\r\n        let message = e.message;\r\n        const keywordMatch = exp\r\n            .replace(stripStringRE, '')\r\n            .match(prohibitedKeywordRE);\r\n        if (keywordMatch) {\r\n            message = `avoid using JavaScript keyword as property name: \"${keywordMatch[0]}\"`;\r\n        }\r\n        context.onError(createCompilerError(44 /* X_INVALID_EXPRESSION */, node.loc, undefined, message));\r\n    }\r\n}\n\nconst transformExpression = (node, context) => {\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        node.content = processExpression(node.content, context);\r\n    }\r\n    else if (node.type === 1 /* ELEMENT */) {\r\n        // handle directives on element\r\n        for (let i = 0; i < node.props.length; i++) {\r\n            const dir = node.props[i];\r\n            // do not process for v-on & v-for since they are special handled\r\n            if (dir.type === 7 /* DIRECTIVE */ && dir.name !== 'for') {\r\n                const exp = dir.exp;\r\n                const arg = dir.arg;\r\n                // do not process exp if this is v-on:arg - we need special handling\r\n                // for wrapping inline statements.\r\n                if (exp &&\r\n                    exp.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n                    !(dir.name === 'on' && arg)) {\r\n                    dir.exp = processExpression(exp, context, \r\n                    // slot args must be processed as function params\r\n                    dir.name === 'slot');\r\n                }\r\n                if (arg && arg.type === 4 /* SIMPLE_EXPRESSION */ && !arg.isStatic) {\r\n                    dir.arg = processExpression(arg, context);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n// Important: since this function uses Node.js only dependencies, it should\r\n// always be used with a leading !true check so that it can be\r\n// tree-shaken from the browser build.\r\nfunction processExpression(node, context, \r\n// some expressions like v-slot props & v-for aliases should be parsed as\r\n// function params\r\nasParams = false, \r\n// v-on handler values may contain multiple statements\r\nasRawStatements = false, localVars = Object.create(context.identifiers)) {\r\n    {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // simple in-browser validation (same logic in 2.x)\r\n            validateBrowserExpression(node, context, asParams, asRawStatements);\r\n        }\r\n        return node;\r\n    }\r\n}\n\nconst transformIf = createStructuralDirectiveTransform(/^(if|else|else-if)$/, (node, dir, context) => {\r\n    return processIf(node, dir, context, (ifNode, branch, isRoot) => {\r\n        // #1587: We need to dynamically increment the key based on the current\r\n        // node's sibling nodes, since chained v-if/else branches are\r\n        // rendered at the same depth\r\n        const siblings = context.parent.children;\r\n        let i = siblings.indexOf(ifNode);\r\n        let key = 0;\r\n        while (i-- >= 0) {\r\n            const sibling = siblings[i];\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                key += sibling.branches.length;\r\n            }\r\n        }\r\n        // Exit callback. Complete the codegenNode when all children have been\r\n        // transformed.\r\n        return () => {\r\n            if (isRoot) {\r\n                ifNode.codegenNode = createCodegenNodeForBranch(branch, key, context);\r\n            }\r\n            else {\r\n                // attach this branch's codegen node to the v-if root.\r\n                const parentCondition = getParentCondition(ifNode.codegenNode);\r\n                parentCondition.alternate = createCodegenNodeForBranch(branch, key + ifNode.branches.length - 1, context);\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processIf(node, dir, context, processCodegen) {\r\n    if (dir.name !== 'else' &&\r\n        (!dir.exp || !dir.exp.content.trim())) {\r\n        const loc = dir.exp ? dir.exp.loc : node.loc;\r\n        context.onError(createCompilerError(28 /* X_V_IF_NO_EXPRESSION */, dir.loc));\r\n        dir.exp = createSimpleExpression(`true`, false, loc);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && true && dir.exp) {\r\n        validateBrowserExpression(dir.exp, context);\r\n    }\r\n    if (dir.name === 'if') {\r\n        const branch = createIfBranch(node, dir);\r\n        const ifNode = {\r\n            type: 9 /* IF */,\r\n            loc: node.loc,\r\n            branches: [branch]\r\n        };\r\n        context.replaceNode(ifNode);\r\n        if (processCodegen) {\r\n            return processCodegen(ifNode, branch, true);\r\n        }\r\n    }\r\n    else {\r\n        // locate the adjacent v-if\r\n        const siblings = context.parent.children;\r\n        const comments = [];\r\n        let i = siblings.indexOf(node);\r\n        while (i-- >= -1) {\r\n            const sibling = siblings[i];\r\n            if ((process.env.NODE_ENV !== 'production') && sibling && sibling.type === 3 /* COMMENT */) {\r\n                context.removeNode(sibling);\r\n                comments.unshift(sibling);\r\n                continue;\r\n            }\r\n            if (sibling &&\r\n                sibling.type === 2 /* TEXT */ &&\r\n                !sibling.content.trim().length) {\r\n                context.removeNode(sibling);\r\n                continue;\r\n            }\r\n            if (sibling && sibling.type === 9 /* IF */) {\r\n                // Check if v-else was followed by v-else-if\r\n                if (dir.name === 'else-if' &&\r\n                    sibling.branches[sibling.branches.length - 1].condition === undefined) {\r\n                    context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n                }\r\n                // move the node to the if node's branches\r\n                context.removeNode();\r\n                const branch = createIfBranch(node, dir);\r\n                if ((process.env.NODE_ENV !== 'production') &&\r\n                    comments.length &&\r\n                    // #3619 ignore comments if the v-if is direct child of <transition>\r\n                    !(context.parent &&\r\n                        context.parent.type === 1 /* ELEMENT */ &&\r\n                        isBuiltInType(context.parent.tag, 'transition'))) {\r\n                    branch.children = [...comments, ...branch.children];\r\n                }\r\n                // check if user is forcing same key on different branches\r\n                if ((process.env.NODE_ENV !== 'production') || !true) {\r\n                    const key = branch.userKey;\r\n                    if (key) {\r\n                        sibling.branches.forEach(({ userKey }) => {\r\n                            if (isSameKey(userKey, key)) {\r\n                                context.onError(createCompilerError(29 /* X_V_IF_SAME_KEY */, branch.userKey.loc));\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                sibling.branches.push(branch);\r\n                const onExit = processCodegen && processCodegen(sibling, branch, false);\r\n                // since the branch was removed, it will not be traversed.\r\n                // make sure to traverse here.\r\n                traverseNode(branch, context);\r\n                // call on exit\r\n                if (onExit)\r\n                    onExit();\r\n                // make sure to reset currentNode after traversal to indicate this\r\n                // node has been removed.\r\n                context.currentNode = null;\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, node.loc));\r\n            }\r\n            break;\r\n        }\r\n    }\r\n}\r\nfunction createIfBranch(node, dir) {\r\n    return {\r\n        type: 10 /* IF_BRANCH */,\r\n        loc: node.loc,\r\n        condition: dir.name === 'else' ? undefined : dir.exp,\r\n        children: node.tagType === 3 /* TEMPLATE */ && !findDir(node, 'for')\r\n            ? node.children\r\n            : [node],\r\n        userKey: findProp(node, `key`)\r\n    };\r\n}\r\nfunction createCodegenNodeForBranch(branch, keyIndex, context) {\r\n    if (branch.condition) {\r\n        return createConditionalExpression(branch.condition, createChildrenCodegenNode(branch, keyIndex, context), \r\n        // make sure to pass in asBlock: true so that the comment node call\r\n        // closes the current block.\r\n        createCallExpression(context.helper(CREATE_COMMENT), [\r\n            (process.env.NODE_ENV !== 'production') ? '\"v-if\"' : '\"\"',\r\n            'true'\r\n        ]));\r\n    }\r\n    else {\r\n        return createChildrenCodegenNode(branch, keyIndex, context);\r\n    }\r\n}\r\nfunction createChildrenCodegenNode(branch, keyIndex, context) {\r\n    const { helper } = context;\r\n    const keyProperty = createObjectProperty(`key`, createSimpleExpression(`${keyIndex}`, false, locStub, 2 /* CAN_HOIST */));\r\n    const { children } = branch;\r\n    const firstChild = children[0];\r\n    const needFragmentWrapper = children.length !== 1 || firstChild.type !== 1 /* ELEMENT */;\r\n    if (needFragmentWrapper) {\r\n        if (children.length === 1 && firstChild.type === 11 /* FOR */) {\r\n            // optimize away nested fragments when child is a ForNode\r\n            const vnodeCall = firstChild.codegenNode;\r\n            injectProp(vnodeCall, keyProperty, context);\r\n            return vnodeCall;\r\n        }\r\n        else {\r\n            let patchFlag = 64 /* STABLE_FRAGMENT */;\r\n            let patchFlagText = PatchFlagNames[64 /* STABLE_FRAGMENT */];\r\n            // check if the fragment actually contains a single valid child with\r\n            // the rest being comments\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                children.filter(c => c.type !== 3 /* COMMENT */).length === 1) {\r\n                patchFlag |= 2048 /* DEV_ROOT_FRAGMENT */;\r\n                patchFlagText += `, ${PatchFlagNames[2048 /* DEV_ROOT_FRAGMENT */]}`;\r\n            }\r\n            return createVNodeCall(context, helper(FRAGMENT), createObjectExpression([keyProperty]), children, patchFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${patchFlagText} */` : ``), undefined, undefined, true, false, false /* isComponent */, branch.loc);\r\n        }\r\n    }\r\n    else {\r\n        const ret = firstChild.codegenNode;\r\n        const vnodeCall = getMemoedVNodeCall(ret);\r\n        // Change createVNode to createBlock.\r\n        if (vnodeCall.type === 13 /* VNODE_CALL */) {\r\n            makeBlock(vnodeCall, context);\r\n        }\r\n        // inject branch key\r\n        injectProp(vnodeCall, keyProperty, context);\r\n        return ret;\r\n    }\r\n}\r\nfunction isSameKey(a, b) {\r\n    if (!a || a.type !== b.type) {\r\n        return false;\r\n    }\r\n    if (a.type === 6 /* ATTRIBUTE */) {\r\n        if (a.value.content !== b.value.content) {\r\n            return false;\r\n        }\r\n    }\r\n    else {\r\n        // directive\r\n        const exp = a.exp;\r\n        const branchExp = b.exp;\r\n        if (exp.type !== branchExp.type) {\r\n            return false;\r\n        }\r\n        if (exp.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n            exp.isStatic !== branchExp.isStatic ||\r\n            exp.content !== branchExp.content) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction getParentCondition(node) {\r\n    while (true) {\r\n        if (node.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n            if (node.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                node = node.alternate;\r\n            }\r\n            else {\r\n                return node;\r\n            }\r\n        }\r\n        else if (node.type === 20 /* JS_CACHE_EXPRESSION */) {\r\n            node = node.value;\r\n        }\r\n    }\r\n}\n\nconst transformFor = createStructuralDirectiveTransform('for', (node, dir, context) => {\r\n    const { helper, removeHelper } = context;\r\n    return processFor(node, dir, context, forNode => {\r\n        // create the loop render function expression now, and add the\r\n        // iterator on exit after all children have been traversed\r\n        const renderExp = createCallExpression(helper(RENDER_LIST), [\r\n            forNode.source\r\n        ]);\r\n        const isTemplate = isTemplateNode(node);\r\n        const memo = findDir(node, 'memo');\r\n        const keyProp = findProp(node, `key`);\r\n        const keyExp = keyProp &&\r\n            (keyProp.type === 6 /* ATTRIBUTE */\r\n                ? createSimpleExpression(keyProp.value.content, true)\r\n                : keyProp.exp);\r\n        const keyProperty = keyProp ? createObjectProperty(`key`, keyExp) : null;\r\n        const isStableFragment = forNode.source.type === 4 /* SIMPLE_EXPRESSION */ &&\r\n            forNode.source.constType > 0 /* NOT_CONSTANT */;\r\n        const fragmentFlag = isStableFragment\r\n            ? 64 /* STABLE_FRAGMENT */\r\n            : keyProp\r\n                ? 128 /* KEYED_FRAGMENT */\r\n                : 256 /* UNKEYED_FRAGMENT */;\r\n        forNode.codegenNode = createVNodeCall(context, helper(FRAGMENT), undefined, renderExp, fragmentFlag +\r\n            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[fragmentFlag]} */` : ``), undefined, undefined, true /* isBlock */, !isStableFragment /* disableTracking */, false /* isComponent */, node.loc);\r\n        return () => {\r\n            // finish the codegen now that all children have been traversed\r\n            let childBlock;\r\n            const { children } = forNode;\r\n            // check <template v-for> key placement\r\n            if (((process.env.NODE_ENV !== 'production') || !true) && isTemplate) {\r\n                node.children.some(c => {\r\n                    if (c.type === 1 /* ELEMENT */) {\r\n                        const key = findProp(c, 'key');\r\n                        if (key) {\r\n                            context.onError(createCompilerError(33 /* X_V_FOR_TEMPLATE_KEY_PLACEMENT */, key.loc));\r\n                            return true;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            const needFragmentWrapper = children.length !== 1 || children[0].type !== 1 /* ELEMENT */;\r\n            const slotOutlet = isSlotOutlet(node)\r\n                ? node\r\n                : isTemplate &&\r\n                    node.children.length === 1 &&\r\n                    isSlotOutlet(node.children[0])\r\n                    ? node.children[0] // api-extractor somehow fails to infer this\r\n                    : null;\r\n            if (slotOutlet) {\r\n                // <slot v-for=\"...\"> or <template v-for=\"...\"><slot/></template>\r\n                childBlock = slotOutlet.codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    // <template v-for=\"...\" :key=\"...\"><slot/></template>\r\n                    // we need to inject the key to the renderSlot() call.\r\n                    // the props for renderSlot is passed as the 3rd argument.\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n            }\r\n            else if (needFragmentWrapper) {\r\n                // <template v-for=\"...\"> with text or multi-elements\r\n                // should generate a fragment block for each loop\r\n                childBlock = createVNodeCall(context, helper(FRAGMENT), keyProperty ? createObjectExpression([keyProperty]) : undefined, node.children, 64 /* STABLE_FRAGMENT */ +\r\n                    ((process.env.NODE_ENV !== 'production')\r\n                        ? ` /* ${PatchFlagNames[64 /* STABLE_FRAGMENT */]} */`\r\n                        : ``), undefined, undefined, true, undefined, false /* isComponent */);\r\n            }\r\n            else {\r\n                // Normal element v-for. Directly use the child's codegenNode\r\n                // but mark it as a block.\r\n                childBlock = children[0]\r\n                    .codegenNode;\r\n                if (isTemplate && keyProperty) {\r\n                    injectProp(childBlock, keyProperty, context);\r\n                }\r\n                if (childBlock.isBlock !== !isStableFragment) {\r\n                    if (childBlock.isBlock) {\r\n                        // switch from block to vnode\r\n                        removeHelper(OPEN_BLOCK);\r\n                        removeHelper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                    else {\r\n                        // switch from vnode to block\r\n                        removeHelper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                    }\r\n                }\r\n                childBlock.isBlock = !isStableFragment;\r\n                if (childBlock.isBlock) {\r\n                    helper(OPEN_BLOCK);\r\n                    helper(getVNodeBlockHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n                else {\r\n                    helper(getVNodeHelper(context.inSSR, childBlock.isComponent));\r\n                }\r\n            }\r\n            if (memo) {\r\n                const loop = createFunctionExpression(createForLoopParams(forNode.parseResult, [\r\n                    createSimpleExpression(`_cached`)\r\n                ]));\r\n                loop.body = createBlockStatement([\r\n                    createCompoundExpression([`const _memo = (`, memo.exp, `)`]),\r\n                    createCompoundExpression([\r\n                        `if (_cached`,\r\n                        ...(keyExp ? [` && _cached.key === `, keyExp] : []),\r\n                        ` && ${context.helperString(IS_MEMO_SAME)}(_cached, _memo)) return _cached`\r\n                    ]),\r\n                    createCompoundExpression([`const _item = `, childBlock]),\r\n                    createSimpleExpression(`_item.memo = _memo`),\r\n                    createSimpleExpression(`return _item`)\r\n                ]);\r\n                renderExp.arguments.push(loop, createSimpleExpression(`_cache`), createSimpleExpression(String(context.cached++)));\r\n            }\r\n            else {\r\n                renderExp.arguments.push(createFunctionExpression(createForLoopParams(forNode.parseResult), childBlock, true /* force newline */));\r\n            }\r\n        };\r\n    });\r\n});\r\n// target-agnostic transform used for both Client and SSR\r\nfunction processFor(node, dir, context, processCodegen) {\r\n    if (!dir.exp) {\r\n        context.onError(createCompilerError(31 /* X_V_FOR_NO_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const parseResult = parseForExpression(\r\n    // can only be simple expression because vFor transform is applied\r\n    // before expression transform.\r\n    dir.exp, context);\r\n    if (!parseResult) {\r\n        context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, dir.loc));\r\n        return;\r\n    }\r\n    const { addIdentifiers, removeIdentifiers, scopes } = context;\r\n    const { source, value, key, index } = parseResult;\r\n    const forNode = {\r\n        type: 11 /* FOR */,\r\n        loc: dir.loc,\r\n        source,\r\n        valueAlias: value,\r\n        keyAlias: key,\r\n        objectIndexAlias: index,\r\n        parseResult,\r\n        children: isTemplateNode(node) ? node.children : [node]\r\n    };\r\n    context.replaceNode(forNode);\r\n    // bookkeeping\r\n    scopes.vFor++;\r\n    const onExit = processCodegen && processCodegen(forNode);\r\n    return () => {\r\n        scopes.vFor--;\r\n        if (onExit)\r\n            onExit();\r\n    };\r\n}\r\nconst forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\r\n// This regex doesn't cover the case if key or index aliases have destructuring,\r\n// but those do not make sense in the first place, so this works in practice.\r\nconst forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\r\nconst stripParensRE = /^\\(|\\)$/g;\r\nfunction parseForExpression(input, context) {\r\n    const loc = input.loc;\r\n    const exp = input.content;\r\n    const inMatch = exp.match(forAliasRE);\r\n    if (!inMatch)\r\n        return;\r\n    const [, LHS, RHS] = inMatch;\r\n    const result = {\r\n        source: createAliasExpression(loc, RHS.trim(), exp.indexOf(RHS, LHS.length)),\r\n        value: undefined,\r\n        key: undefined,\r\n        index: undefined\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production') && true) {\r\n        validateBrowserExpression(result.source, context);\r\n    }\r\n    let valueContent = LHS.trim().replace(stripParensRE, '').trim();\r\n    const trimmedOffset = LHS.indexOf(valueContent);\r\n    const iteratorMatch = valueContent.match(forIteratorRE);\r\n    if (iteratorMatch) {\r\n        valueContent = valueContent.replace(forIteratorRE, '').trim();\r\n        const keyContent = iteratorMatch[1].trim();\r\n        let keyOffset;\r\n        if (keyContent) {\r\n            keyOffset = exp.indexOf(keyContent, trimmedOffset + valueContent.length);\r\n            result.key = createAliasExpression(loc, keyContent, keyOffset);\r\n            if ((process.env.NODE_ENV !== 'production') && true) {\r\n                validateBrowserExpression(result.key, context, true);\r\n            }\r\n        }\r\n        if (iteratorMatch[2]) {\r\n            const indexContent = iteratorMatch[2].trim();\r\n            if (indexContent) {\r\n                result.index = createAliasExpression(loc, indexContent, exp.indexOf(indexContent, result.key\r\n                    ? keyOffset + keyContent.length\r\n                    : trimmedOffset + valueContent.length));\r\n                if ((process.env.NODE_ENV !== 'production') && true) {\r\n                    validateBrowserExpression(result.index, context, true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (valueContent) {\r\n        result.value = createAliasExpression(loc, valueContent, trimmedOffset);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(result.value, context, true);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction createAliasExpression(range, content, offset) {\r\n    return createSimpleExpression(content, false, getInnerRange(range, offset, content.length));\r\n}\r\nfunction createForLoopParams({ value, key, index }, memoArgs = []) {\r\n    return createParamsList([value, key, index, ...memoArgs]);\r\n}\r\nfunction createParamsList(args) {\r\n    let i = args.length;\r\n    while (i--) {\r\n        if (args[i])\r\n            break;\r\n    }\r\n    return args\r\n        .slice(0, i + 1)\r\n        .map((arg, i) => arg || createSimpleExpression(`_`.repeat(i + 1), false));\r\n}\n\nconst defaultFallback = createSimpleExpression(`undefined`, false);\r\n// A NodeTransform that:\r\n// 1. Tracks scope identifiers for scoped slots so that they don't get prefixed\r\n//    by transformExpression. This is only applied in non-browser builds with\r\n//    { prefixIdentifiers: true }.\r\n// 2. Track v-slot depths so that we know a slot is inside another slot.\r\n//    Note the exit callback is executed before buildSlots() on the same node,\r\n//    so only nested slots see positive numbers.\r\nconst trackSlotScopes = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ &&\r\n        (node.tagType === 1 /* COMPONENT */ ||\r\n            node.tagType === 3 /* TEMPLATE */)) {\r\n        // We are only checking non-empty v-slot here\r\n        // since we only care about slots that introduce scope variables.\r\n        const vSlot = findDir(node, 'slot');\r\n        if (vSlot) {\r\n            vSlot.exp;\r\n            context.scopes.vSlot++;\r\n            return () => {\r\n                context.scopes.vSlot--;\r\n            };\r\n        }\r\n    }\r\n};\r\n// A NodeTransform that tracks scope identifiers for scoped slots with v-for.\r\n// This transform is only applied in non-browser builds with { prefixIdentifiers: true }\r\nconst trackVForSlotScopes = (node, context) => {\r\n    let vFor;\r\n    if (isTemplateNode(node) &&\r\n        node.props.some(isVSlot) &&\r\n        (vFor = findDir(node, 'for'))) {\r\n        const result = (vFor.parseResult = parseForExpression(vFor.exp, context));\r\n        if (result) {\r\n            const { value, key, index } = result;\r\n            const { addIdentifiers, removeIdentifiers } = context;\r\n            value && addIdentifiers(value);\r\n            key && addIdentifiers(key);\r\n            index && addIdentifiers(index);\r\n            return () => {\r\n                value && removeIdentifiers(value);\r\n                key && removeIdentifiers(key);\r\n                index && removeIdentifiers(index);\r\n            };\r\n        }\r\n    }\r\n};\r\nconst buildClientSlotFn = (props, children, loc) => createFunctionExpression(props, children, false /* newline */, true /* isSlot */, children.length ? children[0].loc : loc);\r\n// Instead of being a DirectiveTransform, v-slot processing is called during\r\n// transformElement to build the slots object for a component.\r\nfunction buildSlots(node, context, buildSlotFn = buildClientSlotFn) {\r\n    context.helper(WITH_CTX);\r\n    const { children, loc } = node;\r\n    const slotsProperties = [];\r\n    const dynamicSlots = [];\r\n    // If the slot is inside a v-for or another v-slot, force it to be dynamic\r\n    // since it likely uses a scope variable.\r\n    let hasDynamicSlots = context.scopes.vSlot > 0 || context.scopes.vFor > 0;\r\n    // 1. Check for slot with slotProps on component itself.\r\n    //    <Comp v-slot=\"{ prop }\"/>\r\n    const onComponentSlot = findDir(node, 'slot', true);\r\n    if (onComponentSlot) {\r\n        const { arg, exp } = onComponentSlot;\r\n        if (arg && !isStaticExp(arg)) {\r\n            hasDynamicSlots = true;\r\n        }\r\n        slotsProperties.push(createObjectProperty(arg || createSimpleExpression('default', true), buildSlotFn(exp, children, loc)));\r\n    }\r\n    // 2. Iterate through children and check for template slots\r\n    //    <template v-slot:foo=\"{ prop }\">\r\n    let hasTemplateSlots = false;\r\n    let hasNamedDefaultSlot = false;\r\n    const implicitDefaultChildren = [];\r\n    const seenSlotNames = new Set();\r\n    for (let i = 0; i < children.length; i++) {\r\n        const slotElement = children[i];\r\n        let slotDir;\r\n        if (!isTemplateNode(slotElement) ||\r\n            !(slotDir = findDir(slotElement, 'slot', true))) {\r\n            // not a <template v-slot>, skip.\r\n            if (slotElement.type !== 3 /* COMMENT */) {\r\n                implicitDefaultChildren.push(slotElement);\r\n            }\r\n            continue;\r\n        }\r\n        if (onComponentSlot) {\r\n            // already has on-component slot - this is incorrect usage.\r\n            context.onError(createCompilerError(37 /* X_V_SLOT_MIXED_SLOT_USAGE */, slotDir.loc));\r\n            break;\r\n        }\r\n        hasTemplateSlots = true;\r\n        const { children: slotChildren, loc: slotLoc } = slotElement;\r\n        const { arg: slotName = createSimpleExpression(`default`, true), exp: slotProps, loc: dirLoc } = slotDir;\r\n        // check if name is dynamic.\r\n        let staticSlotName;\r\n        if (isStaticExp(slotName)) {\r\n            staticSlotName = slotName ? slotName.content : `default`;\r\n        }\r\n        else {\r\n            hasDynamicSlots = true;\r\n        }\r\n        const slotFunction = buildSlotFn(slotProps, slotChildren, slotLoc);\r\n        // check if this slot is conditional (v-if/v-for)\r\n        let vIf;\r\n        let vElse;\r\n        let vFor;\r\n        if ((vIf = findDir(slotElement, 'if'))) {\r\n            hasDynamicSlots = true;\r\n            dynamicSlots.push(createConditionalExpression(vIf.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback));\r\n        }\r\n        else if ((vElse = findDir(slotElement, /^else(-if)?$/, true /* allowEmpty */))) {\r\n            // find adjacent v-if\r\n            let j = i;\r\n            let prev;\r\n            while (j--) {\r\n                prev = children[j];\r\n                if (prev.type !== 3 /* COMMENT */) {\r\n                    break;\r\n                }\r\n            }\r\n            if (prev && isTemplateNode(prev) && findDir(prev, 'if')) {\r\n                // remove node\r\n                children.splice(i, 1);\r\n                i--;\r\n                // attach this slot to previous conditional\r\n                let conditional = dynamicSlots[dynamicSlots.length - 1];\r\n                while (conditional.alternate.type === 19 /* JS_CONDITIONAL_EXPRESSION */) {\r\n                    conditional = conditional.alternate;\r\n                }\r\n                conditional.alternate = vElse.exp\r\n                    ? createConditionalExpression(vElse.exp, buildDynamicSlot(slotName, slotFunction), defaultFallback)\r\n                    : buildDynamicSlot(slotName, slotFunction);\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(30 /* X_V_ELSE_NO_ADJACENT_IF */, vElse.loc));\r\n            }\r\n        }\r\n        else if ((vFor = findDir(slotElement, 'for'))) {\r\n            hasDynamicSlots = true;\r\n            const parseResult = vFor.parseResult ||\r\n                parseForExpression(vFor.exp, context);\r\n            if (parseResult) {\r\n                // Render the dynamic slots as an array and add it to the createSlot()\r\n                // args. The runtime knows how to handle it appropriately.\r\n                dynamicSlots.push(createCallExpression(context.helper(RENDER_LIST), [\r\n                    parseResult.source,\r\n                    createFunctionExpression(createForLoopParams(parseResult), buildDynamicSlot(slotName, slotFunction), true /* force newline */)\r\n                ]));\r\n            }\r\n            else {\r\n                context.onError(createCompilerError(32 /* X_V_FOR_MALFORMED_EXPRESSION */, vFor.loc));\r\n            }\r\n        }\r\n        else {\r\n            // check duplicate static names\r\n            if (staticSlotName) {\r\n                if (seenSlotNames.has(staticSlotName)) {\r\n                    context.onError(createCompilerError(38 /* X_V_SLOT_DUPLICATE_SLOT_NAMES */, dirLoc));\r\n                    continue;\r\n                }\r\n                seenSlotNames.add(staticSlotName);\r\n                if (staticSlotName === 'default') {\r\n                    hasNamedDefaultSlot = true;\r\n                }\r\n            }\r\n            slotsProperties.push(createObjectProperty(slotName, slotFunction));\r\n        }\r\n    }\r\n    if (!onComponentSlot) {\r\n        const buildDefaultSlotProperty = (props, children) => {\r\n            const fn = buildSlotFn(props, children, loc);\r\n            if (context.compatConfig) {\r\n                fn.isNonScopedSlot = true;\r\n            }\r\n            return createObjectProperty(`default`, fn);\r\n        };\r\n        if (!hasTemplateSlots) {\r\n            // implicit default slot (on component)\r\n            slotsProperties.push(buildDefaultSlotProperty(undefined, children));\r\n        }\r\n        else if (implicitDefaultChildren.length &&\r\n            // #3766\r\n            // with whitespace: 'preserve', whitespaces between slots will end up in\r\n            // implicitDefaultChildren. Ignore if all implicit children are whitespaces.\r\n            implicitDefaultChildren.some(node => isNonWhitespaceContent(node))) {\r\n            // implicit default slot (mixed with named slots)\r\n            if (hasNamedDefaultSlot) {\r\n                context.onError(createCompilerError(39 /* X_V_SLOT_EXTRANEOUS_DEFAULT_SLOT_CHILDREN */, implicitDefaultChildren[0].loc));\r\n            }\r\n            else {\r\n                slotsProperties.push(buildDefaultSlotProperty(undefined, implicitDefaultChildren));\r\n            }\r\n        }\r\n    }\r\n    const slotFlag = hasDynamicSlots\r\n        ? 2 /* DYNAMIC */\r\n        : hasForwardedSlots(node.children)\r\n            ? 3 /* FORWARDED */\r\n            : 1 /* STABLE */;\r\n    let slots = createObjectExpression(slotsProperties.concat(createObjectProperty(`_`, \r\n    // 2 = compiled but dynamic = can skip normalization, but must run diff\r\n    // 1 = compiled and static = can skip normalization AND diff as optimized\r\n    createSimpleExpression(slotFlag + ((process.env.NODE_ENV !== 'production') ? ` /* ${slotFlagsText[slotFlag]} */` : ``), false))), loc);\r\n    if (dynamicSlots.length) {\r\n        slots = createCallExpression(context.helper(CREATE_SLOTS), [\r\n            slots,\r\n            createArrayExpression(dynamicSlots)\r\n        ]);\r\n    }\r\n    return {\r\n        slots,\r\n        hasDynamicSlots\r\n    };\r\n}\r\nfunction buildDynamicSlot(name, fn) {\r\n    return createObjectExpression([\r\n        createObjectProperty(`name`, name),\r\n        createObjectProperty(`fn`, fn)\r\n    ]);\r\n}\r\nfunction hasForwardedSlots(children) {\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        switch (child.type) {\r\n            case 1 /* ELEMENT */:\r\n                if (child.tagType === 2 /* SLOT */ ||\r\n                    hasForwardedSlots(child.children)) {\r\n                    return true;\r\n                }\r\n                break;\r\n            case 9 /* IF */:\r\n                if (hasForwardedSlots(child.branches))\r\n                    return true;\r\n                break;\r\n            case 10 /* IF_BRANCH */:\r\n            case 11 /* FOR */:\r\n                if (hasForwardedSlots(child.children))\r\n                    return true;\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isNonWhitespaceContent(node) {\r\n    if (node.type !== 2 /* TEXT */ && node.type !== 12 /* TEXT_CALL */)\r\n        return true;\r\n    return node.type === 2 /* TEXT */\r\n        ? !!node.content.trim()\r\n        : isNonWhitespaceContent(node.content);\r\n}\n\n// some directive transforms (e.g. v-model) may return a symbol for runtime\r\n// import, which should be used instead of a resolveDirective call.\r\nconst directiveImportMap = new WeakMap();\r\n// generate a JavaScript AST for this element's codegen\r\nconst transformElement = (node, context) => {\r\n    // perform the work on exit, after all child expressions have been\r\n    // processed and merged.\r\n    return function postTransformElement() {\r\n        node = context.currentNode;\r\n        if (!(node.type === 1 /* ELEMENT */ &&\r\n            (node.tagType === 0 /* ELEMENT */ ||\r\n                node.tagType === 1 /* COMPONENT */))) {\r\n            return;\r\n        }\r\n        const { tag, props } = node;\r\n        const isComponent = node.tagType === 1 /* COMPONENT */;\r\n        // The goal of the transform is to create a codegenNode implementing the\r\n        // VNodeCall interface.\r\n        let vnodeTag = isComponent\r\n            ? resolveComponentType(node, context)\r\n            : `\"${tag}\"`;\r\n        const isDynamicComponent = isObject(vnodeTag) && vnodeTag.callee === RESOLVE_DYNAMIC_COMPONENT;\r\n        let vnodeProps;\r\n        let vnodeChildren;\r\n        let vnodePatchFlag;\r\n        let patchFlag = 0;\r\n        let vnodeDynamicProps;\r\n        let dynamicPropNames;\r\n        let vnodeDirectives;\r\n        let shouldUseBlock = \r\n        // dynamic component may resolve to plain elements\r\n        isDynamicComponent ||\r\n            vnodeTag === TELEPORT ||\r\n            vnodeTag === SUSPENSE ||\r\n            (!isComponent &&\r\n                // <svg> and <foreignObject> must be forced into blocks so that block\r\n                // updates inside get proper isSVG flag at runtime. (#639, #643)\r\n                // This is technically web-specific, but splitting the logic out of core\r\n                // leads to too much unnecessary complexity.\r\n                (tag === 'svg' || tag === 'foreignObject'));\r\n        // props\r\n        if (props.length > 0) {\r\n            const propsBuildResult = buildProps(node, context);\r\n            vnodeProps = propsBuildResult.props;\r\n            patchFlag = propsBuildResult.patchFlag;\r\n            dynamicPropNames = propsBuildResult.dynamicPropNames;\r\n            const directives = propsBuildResult.directives;\r\n            vnodeDirectives =\r\n                directives && directives.length\r\n                    ? createArrayExpression(directives.map(dir => buildDirectiveArgs(dir, context)))\r\n                    : undefined;\r\n            if (propsBuildResult.shouldUseBlock) {\r\n                shouldUseBlock = true;\r\n            }\r\n        }\r\n        // children\r\n        if (node.children.length > 0) {\r\n            if (vnodeTag === KEEP_ALIVE) {\r\n                // Although a built-in component, we compile KeepAlive with raw children\r\n                // instead of slot functions so that it can be used inside Transition\r\n                // or other Transition-wrapping HOCs.\r\n                // To ensure correct updates with block optimizations, we need to:\r\n                // 1. Force keep-alive into a block. This avoids its children being\r\n                //    collected by a parent block.\r\n                shouldUseBlock = true;\r\n                // 2. Force keep-alive to always be updated, since it uses raw children.\r\n                patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                if ((process.env.NODE_ENV !== 'production') && node.children.length > 1) {\r\n                    context.onError(createCompilerError(45 /* X_KEEP_ALIVE_INVALID_CHILDREN */, {\r\n                        start: node.children[0].loc.start,\r\n                        end: node.children[node.children.length - 1].loc.end,\r\n                        source: ''\r\n                    }));\r\n                }\r\n            }\r\n            const shouldBuildAsSlots = isComponent &&\r\n                // Teleport is not a real component and has dedicated runtime handling\r\n                vnodeTag !== TELEPORT &&\r\n                // explained above.\r\n                vnodeTag !== KEEP_ALIVE;\r\n            if (shouldBuildAsSlots) {\r\n                const { slots, hasDynamicSlots } = buildSlots(node, context);\r\n                vnodeChildren = slots;\r\n                if (hasDynamicSlots) {\r\n                    patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n            else if (node.children.length === 1 && vnodeTag !== TELEPORT) {\r\n                const child = node.children[0];\r\n                const type = child.type;\r\n                // check for dynamic text children\r\n                const hasDynamicTextChild = type === 5 /* INTERPOLATION */ ||\r\n                    type === 8 /* COMPOUND_EXPRESSION */;\r\n                if (hasDynamicTextChild &&\r\n                    getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                    patchFlag |= 1 /* TEXT */;\r\n                }\r\n                // pass directly if the only child is a text node\r\n                // (plain / interpolation / expression)\r\n                if (hasDynamicTextChild || type === 2 /* TEXT */) {\r\n                    vnodeChildren = child;\r\n                }\r\n                else {\r\n                    vnodeChildren = node.children;\r\n                }\r\n            }\r\n            else {\r\n                vnodeChildren = node.children;\r\n            }\r\n        }\r\n        // patchFlag & dynamicPropNames\r\n        if (patchFlag !== 0) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (patchFlag < 0) {\r\n                    // special flags (negative and mutually exclusive)\r\n                    vnodePatchFlag = patchFlag + ` /* ${PatchFlagNames[patchFlag]} */`;\r\n                }\r\n                else {\r\n                    // bitwise flags\r\n                    const flagNames = Object.keys(PatchFlagNames)\r\n                        .map(Number)\r\n                        .filter(n => n > 0 && patchFlag & n)\r\n                        .map(n => PatchFlagNames[n])\r\n                        .join(`, `);\r\n                    vnodePatchFlag = patchFlag + ` /* ${flagNames} */`;\r\n                }\r\n            }\r\n            else {\r\n                vnodePatchFlag = String(patchFlag);\r\n            }\r\n            if (dynamicPropNames && dynamicPropNames.length) {\r\n                vnodeDynamicProps = stringifyDynamicPropNames(dynamicPropNames);\r\n            }\r\n        }\r\n        node.codegenNode = createVNodeCall(context, vnodeTag, vnodeProps, vnodeChildren, vnodePatchFlag, vnodeDynamicProps, vnodeDirectives, !!shouldUseBlock, false /* disableTracking */, isComponent, node.loc);\r\n    };\r\n};\r\nfunction resolveComponentType(node, context, ssr = false) {\r\n    let { tag } = node;\r\n    // 1. dynamic component\r\n    const isExplicitDynamic = isComponentTag(tag);\r\n    const isProp = findProp(node, 'is');\r\n    if (isProp) {\r\n        if (isExplicitDynamic ||\r\n            (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))) {\r\n            const exp = isProp.type === 6 /* ATTRIBUTE */\r\n                ? isProp.value && createSimpleExpression(isProp.value.content, true)\r\n                : isProp.exp;\r\n            if (exp) {\r\n                return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n                    exp\r\n                ]);\r\n            }\r\n        }\r\n        else if (isProp.type === 6 /* ATTRIBUTE */ &&\r\n            isProp.value.content.startsWith('vue:')) {\r\n            // <button is=\"vue:xxx\">\r\n            // if not <component>, only is value that starts with \"vue:\" will be\r\n            // treated as component by the parse phase and reach here, unless it's\r\n            // compat mode where all is values are considered components\r\n            tag = isProp.value.content.slice(4);\r\n        }\r\n    }\r\n    // 1.5 v-is (TODO: Deprecate)\r\n    const isDir = !isExplicitDynamic && findDir(node, 'is');\r\n    if (isDir && isDir.exp) {\r\n        return createCallExpression(context.helper(RESOLVE_DYNAMIC_COMPONENT), [\r\n            isDir.exp\r\n        ]);\r\n    }\r\n    // 2. built-in components (Teleport, Transition, KeepAlive, Suspense...)\r\n    const builtIn = isCoreComponent(tag) || context.isBuiltInComponent(tag);\r\n    if (builtIn) {\r\n        // built-ins are simply fallthroughs / have special handling during ssr\r\n        // so we don't need to import their runtime equivalents\r\n        if (!ssr)\r\n            context.helper(builtIn);\r\n        return builtIn;\r\n    }\r\n    // 5. user component (resolve)\r\n    context.helper(RESOLVE_COMPONENT);\r\n    context.components.add(tag);\r\n    return toValidAssetId(tag, `component`);\r\n}\r\nfunction buildProps(node, context, props = node.props, ssr = false) {\r\n    const { tag, loc: elementLoc, children } = node;\r\n    const isComponent = node.tagType === 1 /* COMPONENT */;\r\n    let properties = [];\r\n    const mergeArgs = [];\r\n    const runtimeDirectives = [];\r\n    const hasChildren = children.length > 0;\r\n    let shouldUseBlock = false;\r\n    // patchFlag analysis\r\n    let patchFlag = 0;\r\n    let hasRef = false;\r\n    let hasClassBinding = false;\r\n    let hasStyleBinding = false;\r\n    let hasHydrationEventBinding = false;\r\n    let hasDynamicKeys = false;\r\n    let hasVnodeHook = false;\r\n    const dynamicPropNames = [];\r\n    const analyzePatchFlag = ({ key, value }) => {\r\n        if (isStaticExp(key)) {\r\n            const name = key.content;\r\n            const isEventHandler = isOn(name);\r\n            if (!isComponent &&\r\n                isEventHandler &&\r\n                // omit the flag for click handlers because hydration gives click\r\n                // dedicated fast path.\r\n                name.toLowerCase() !== 'onclick' &&\r\n                // omit v-model handlers\r\n                name !== 'onUpdate:modelValue' &&\r\n                // omit onVnodeXXX hooks\r\n                !isReservedProp(name)) {\r\n                hasHydrationEventBinding = true;\r\n            }\r\n            if (isEventHandler && isReservedProp(name)) {\r\n                hasVnodeHook = true;\r\n            }\r\n            if (value.type === 20 /* JS_CACHE_EXPRESSION */ ||\r\n                ((value.type === 4 /* SIMPLE_EXPRESSION */ ||\r\n                    value.type === 8 /* COMPOUND_EXPRESSION */) &&\r\n                    getConstantType(value, context) > 0)) {\r\n                // skip if the prop is a cached handler or has constant value\r\n                return;\r\n            }\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n            }\r\n            else if (name === 'class') {\r\n                hasClassBinding = true;\r\n            }\r\n            else if (name === 'style') {\r\n                hasStyleBinding = true;\r\n            }\r\n            else if (name !== 'key' && !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n            // treat the dynamic class and style binding of the component as dynamic props\r\n            if (isComponent &&\r\n                (name === 'class' || name === 'style') &&\r\n                !dynamicPropNames.includes(name)) {\r\n                dynamicPropNames.push(name);\r\n            }\r\n        }\r\n        else {\r\n            hasDynamicKeys = true;\r\n        }\r\n    };\r\n    for (let i = 0; i < props.length; i++) {\r\n        // static attribute\r\n        const prop = props[i];\r\n        if (prop.type === 6 /* ATTRIBUTE */) {\r\n            const { loc, name, value } = prop;\r\n            let isStatic = true;\r\n            if (name === 'ref') {\r\n                hasRef = true;\r\n                if (context.scopes.vFor > 0) {\r\n                    properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n                }\r\n            }\r\n            // skip is on <component>, or is=\"vue:xxx\"\r\n            if (name === 'is' &&\r\n                (isComponentTag(tag) ||\r\n                    (value && value.content.startsWith('vue:')) ||\r\n                    (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context)))) {\r\n                continue;\r\n            }\r\n            properties.push(createObjectProperty(createSimpleExpression(name, true, getInnerRange(loc, 0, name.length)), createSimpleExpression(value ? value.content : '', isStatic, value ? value.loc : loc)));\r\n        }\r\n        else {\r\n            // directives\r\n            const { name, arg, exp, loc } = prop;\r\n            const isVBind = name === 'bind';\r\n            const isVOn = name === 'on';\r\n            // skip v-slot - it is handled by its dedicated transform.\r\n            if (name === 'slot') {\r\n                if (!isComponent) {\r\n                    context.onError(createCompilerError(40 /* X_V_SLOT_MISPLACED */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            // skip v-once/v-memo - they are handled by dedicated transforms.\r\n            if (name === 'once' || name === 'memo') {\r\n                continue;\r\n            }\r\n            // skip v-is and :is on <component>\r\n            if (name === 'is' ||\r\n                (isVBind &&\r\n                    isStaticArgOf(arg, 'is') &&\r\n                    (isComponentTag(tag) ||\r\n                        (isCompatEnabled(\"COMPILER_IS_ON_ELEMENT\" /* COMPILER_IS_ON_ELEMENT */, context))))) {\r\n                continue;\r\n            }\r\n            // skip v-on in SSR compilation\r\n            if (isVOn && ssr) {\r\n                continue;\r\n            }\r\n            if (\r\n            // #938: elements with dynamic keys should be forced into blocks\r\n            (isVBind && isStaticArgOf(arg, 'key')) ||\r\n                // inline before-update hooks need to force block so that it is invoked\r\n                // before children\r\n                (isVOn && hasChildren && isStaticArgOf(arg, 'vue:before-update'))) {\r\n                shouldUseBlock = true;\r\n            }\r\n            if (isVBind && isStaticArgOf(arg, 'ref') && context.scopes.vFor > 0) {\r\n                properties.push(createObjectProperty(createSimpleExpression('ref_for', true), createSimpleExpression('true')));\r\n            }\r\n            // special case for v-bind and v-on with no argument\r\n            if (!arg && (isVBind || isVOn)) {\r\n                hasDynamicKeys = true;\r\n                if (exp) {\r\n                    if (properties.length) {\r\n                        mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n                        properties = [];\r\n                    }\r\n                    if (isVBind) {\r\n                        {\r\n                            // 2.x v-bind object order compat\r\n                            if ((process.env.NODE_ENV !== 'production')) {\r\n                                const hasOverridableKeys = mergeArgs.some(arg => {\r\n                                    if (arg.type === 15 /* JS_OBJECT_EXPRESSION */) {\r\n                                        return arg.properties.some(({ key }) => {\r\n                                            if (key.type !== 4 /* SIMPLE_EXPRESSION */ ||\r\n                                                !key.isStatic) {\r\n                                                return true;\r\n                                            }\r\n                                            return (key.content !== 'class' &&\r\n                                                key.content !== 'style' &&\r\n                                                !isOn(key.content));\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        // dynamic expression\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                if (hasOverridableKeys) {\r\n                                    checkCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context, loc);\r\n                                }\r\n                            }\r\n                            if (isCompatEnabled(\"COMPILER_V_BIND_OBJECT_ORDER\" /* COMPILER_V_BIND_OBJECT_ORDER */, context)) {\r\n                                mergeArgs.unshift(exp);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        mergeArgs.push(exp);\r\n                    }\r\n                    else {\r\n                        // v-on=\"obj\" -> toHandlers(obj)\r\n                        mergeArgs.push({\r\n                            type: 14 /* JS_CALL_EXPRESSION */,\r\n                            loc,\r\n                            callee: context.helper(TO_HANDLERS),\r\n                            arguments: [exp]\r\n                        });\r\n                    }\r\n                }\r\n                else {\r\n                    context.onError(createCompilerError(isVBind\r\n                        ? 34 /* X_V_BIND_NO_EXPRESSION */\r\n                        : 35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n                }\r\n                continue;\r\n            }\r\n            const directiveTransform = context.directiveTransforms[name];\r\n            if (directiveTransform) {\r\n                // has built-in directive transform.\r\n                const { props, needRuntime } = directiveTransform(prop, node, context);\r\n                !ssr && props.forEach(analyzePatchFlag);\r\n                properties.push(...props);\r\n                if (needRuntime) {\r\n                    runtimeDirectives.push(prop);\r\n                    if (isSymbol(needRuntime)) {\r\n                        directiveImportMap.set(prop, needRuntime);\r\n                    }\r\n                }\r\n            }\r\n            else if (!isBuiltInDirective(name)) {\r\n                // no built-in transform, this is a user custom directive.\r\n                runtimeDirectives.push(prop);\r\n                // custom dirs may use beforeUpdate so they need to force blocks\r\n                // to ensure before-update gets called before children update\r\n                if (hasChildren) {\r\n                    shouldUseBlock = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let propsExpression = undefined;\r\n    // has v-bind=\"object\" or v-on=\"object\", wrap with mergeProps\r\n    if (mergeArgs.length) {\r\n        if (properties.length) {\r\n            mergeArgs.push(createObjectExpression(dedupeProperties(properties), elementLoc));\r\n        }\r\n        if (mergeArgs.length > 1) {\r\n            propsExpression = createCallExpression(context.helper(MERGE_PROPS), mergeArgs, elementLoc);\r\n        }\r\n        else {\r\n            // single v-bind with nothing else - no need for a mergeProps call\r\n            propsExpression = mergeArgs[0];\r\n        }\r\n    }\r\n    else if (properties.length) {\r\n        propsExpression = createObjectExpression(dedupeProperties(properties), elementLoc);\r\n    }\r\n    // patchFlag analysis\r\n    if (hasDynamicKeys) {\r\n        patchFlag |= 16 /* FULL_PROPS */;\r\n    }\r\n    else {\r\n        if (hasClassBinding && !isComponent) {\r\n            patchFlag |= 2 /* CLASS */;\r\n        }\r\n        if (hasStyleBinding && !isComponent) {\r\n            patchFlag |= 4 /* STYLE */;\r\n        }\r\n        if (dynamicPropNames.length) {\r\n            patchFlag |= 8 /* PROPS */;\r\n        }\r\n        if (hasHydrationEventBinding) {\r\n            patchFlag |= 32 /* HYDRATE_EVENTS */;\r\n        }\r\n    }\r\n    if (!shouldUseBlock &&\r\n        (patchFlag === 0 || patchFlag === 32 /* HYDRATE_EVENTS */) &&\r\n        (hasRef || hasVnodeHook || runtimeDirectives.length > 0)) {\r\n        patchFlag |= 512 /* NEED_PATCH */;\r\n    }\r\n    // pre-normalize props, SSR is skipped for now\r\n    if (!context.inSSR && propsExpression) {\r\n        switch (propsExpression.type) {\r\n            case 15 /* JS_OBJECT_EXPRESSION */:\r\n                // means that there is no v-bind,\r\n                // but still need to deal with dynamic key binding\r\n                let classKeyIndex = -1;\r\n                let styleKeyIndex = -1;\r\n                let hasDynamicKey = false;\r\n                for (let i = 0; i < propsExpression.properties.length; i++) {\r\n                    const key = propsExpression.properties[i].key;\r\n                    if (isStaticExp(key)) {\r\n                        if (key.content === 'class') {\r\n                            classKeyIndex = i;\r\n                        }\r\n                        else if (key.content === 'style') {\r\n                            styleKeyIndex = i;\r\n                        }\r\n                    }\r\n                    else if (!key.isHandlerKey) {\r\n                        hasDynamicKey = true;\r\n                    }\r\n                }\r\n                const classProp = propsExpression.properties[classKeyIndex];\r\n                const styleProp = propsExpression.properties[styleKeyIndex];\r\n                // no dynamic key\r\n                if (!hasDynamicKey) {\r\n                    if (classProp && !isStaticExp(classProp.value)) {\r\n                        classProp.value = createCallExpression(context.helper(NORMALIZE_CLASS), [classProp.value]);\r\n                    }\r\n                    if (styleProp &&\r\n                        !isStaticExp(styleProp.value) &&\r\n                        // the static style is compiled into an object,\r\n                        // so use `hasStyleBinding` to ensure that it is a dynamic style binding\r\n                        (hasStyleBinding ||\r\n                            // v-bind:style and style both exist,\r\n                            // v-bind:style with static literal object\r\n                            styleProp.value.type === 17 /* JS_ARRAY_EXPRESSION */)) {\r\n                        styleProp.value = createCallExpression(context.helper(NORMALIZE_STYLE), [styleProp.value]);\r\n                    }\r\n                }\r\n                else {\r\n                    // dynamic key binding, wrap with `normalizeProps`\r\n                    propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [propsExpression]);\r\n                }\r\n                break;\r\n            case 14 /* JS_CALL_EXPRESSION */:\r\n                // mergeProps call, do nothing\r\n                break;\r\n            default:\r\n                // single v-bind\r\n                propsExpression = createCallExpression(context.helper(NORMALIZE_PROPS), [\r\n                    createCallExpression(context.helper(GUARD_REACTIVE_PROPS), [\r\n                        propsExpression\r\n                    ])\r\n                ]);\r\n                break;\r\n        }\r\n    }\r\n    return {\r\n        props: propsExpression,\r\n        directives: runtimeDirectives,\r\n        patchFlag,\r\n        dynamicPropNames,\r\n        shouldUseBlock\r\n    };\r\n}\r\n// Dedupe props in an object literal.\r\n// Literal duplicated attributes would have been warned during the parse phase,\r\n// however, it's possible to encounter duplicated `onXXX` handlers with different\r\n// modifiers. We also need to merge static and dynamic class / style attributes.\r\n// - onXXX handlers / style: merge into array\r\n// - class: merge into single expression with concatenation\r\nfunction dedupeProperties(properties) {\r\n    const knownProps = new Map();\r\n    const deduped = [];\r\n    for (let i = 0; i < properties.length; i++) {\r\n        const prop = properties[i];\r\n        // dynamic keys are always allowed\r\n        if (prop.key.type === 8 /* COMPOUND_EXPRESSION */ || !prop.key.isStatic) {\r\n            deduped.push(prop);\r\n            continue;\r\n        }\r\n        const name = prop.key.content;\r\n        const existing = knownProps.get(name);\r\n        if (existing) {\r\n            if (name === 'style' || name === 'class' || isOn(name)) {\r\n                mergeAsArray(existing, prop);\r\n            }\r\n            // unexpected duplicate, should have emitted error during parse\r\n        }\r\n        else {\r\n            knownProps.set(name, prop);\r\n            deduped.push(prop);\r\n        }\r\n    }\r\n    return deduped;\r\n}\r\nfunction mergeAsArray(existing, incoming) {\r\n    if (existing.value.type === 17 /* JS_ARRAY_EXPRESSION */) {\r\n        existing.value.elements.push(incoming.value);\r\n    }\r\n    else {\r\n        existing.value = createArrayExpression([existing.value, incoming.value], existing.loc);\r\n    }\r\n}\r\nfunction buildDirectiveArgs(dir, context) {\r\n    const dirArgs = [];\r\n    const runtime = directiveImportMap.get(dir);\r\n    if (runtime) {\r\n        // built-in directive with runtime\r\n        dirArgs.push(context.helperString(runtime));\r\n    }\r\n    else {\r\n        {\r\n            // inject statement for resolving directive\r\n            context.helper(RESOLVE_DIRECTIVE);\r\n            context.directives.add(dir.name);\r\n            dirArgs.push(toValidAssetId(dir.name, `directive`));\r\n        }\r\n    }\r\n    const { loc } = dir;\r\n    if (dir.exp)\r\n        dirArgs.push(dir.exp);\r\n    if (dir.arg) {\r\n        if (!dir.exp) {\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        dirArgs.push(dir.arg);\r\n    }\r\n    if (Object.keys(dir.modifiers).length) {\r\n        if (!dir.arg) {\r\n            if (!dir.exp) {\r\n                dirArgs.push(`void 0`);\r\n            }\r\n            dirArgs.push(`void 0`);\r\n        }\r\n        const trueExpression = createSimpleExpression(`true`, false, loc);\r\n        dirArgs.push(createObjectExpression(dir.modifiers.map(modifier => createObjectProperty(modifier, trueExpression)), loc));\r\n    }\r\n    return createArrayExpression(dirArgs, dir.loc);\r\n}\r\nfunction stringifyDynamicPropNames(props) {\r\n    let propsNamesString = `[`;\r\n    for (let i = 0, l = props.length; i < l; i++) {\r\n        propsNamesString += JSON.stringify(props[i]);\r\n        if (i < l - 1)\r\n            propsNamesString += ', ';\r\n    }\r\n    return propsNamesString + `]`;\r\n}\r\nfunction isComponentTag(tag) {\r\n    return tag === 'component' || tag === 'Component';\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\n\nconst transformSlotOutlet = (node, context) => {\r\n    if (isSlotOutlet(node)) {\r\n        const { children, loc } = node;\r\n        const { slotName, slotProps } = processSlotOutlet(node, context);\r\n        const slotArgs = [\r\n            context.prefixIdentifiers ? `_ctx.$slots` : `$slots`,\r\n            slotName,\r\n            '{}',\r\n            'undefined',\r\n            'true'\r\n        ];\r\n        let expectedLen = 2;\r\n        if (slotProps) {\r\n            slotArgs[2] = slotProps;\r\n            expectedLen = 3;\r\n        }\r\n        if (children.length) {\r\n            slotArgs[3] = createFunctionExpression([], children, false, false, loc);\r\n            expectedLen = 4;\r\n        }\r\n        if (context.scopeId && !context.slotted) {\r\n            expectedLen = 5;\r\n        }\r\n        slotArgs.splice(expectedLen); // remove unused arguments\r\n        node.codegenNode = createCallExpression(context.helper(RENDER_SLOT), slotArgs, loc);\r\n    }\r\n};\r\nfunction processSlotOutlet(node, context) {\r\n    let slotName = `\"default\"`;\r\n    let slotProps = undefined;\r\n    const nonNameProps = [];\r\n    for (let i = 0; i < node.props.length; i++) {\r\n        const p = node.props[i];\r\n        if (p.type === 6 /* ATTRIBUTE */) {\r\n            if (p.value) {\r\n                if (p.name === 'name') {\r\n                    slotName = JSON.stringify(p.value.content);\r\n                }\r\n                else {\r\n                    p.name = camelize(p.name);\r\n                    nonNameProps.push(p);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (p.name === 'bind' && isStaticArgOf(p.arg, 'name')) {\r\n                if (p.exp)\r\n                    slotName = p.exp;\r\n            }\r\n            else {\r\n                if (p.name === 'bind' && p.arg && isStaticExp(p.arg)) {\r\n                    p.arg.content = camelize(p.arg.content);\r\n                }\r\n                nonNameProps.push(p);\r\n            }\r\n        }\r\n    }\r\n    if (nonNameProps.length > 0) {\r\n        const { props, directives } = buildProps(node, context, nonNameProps);\r\n        slotProps = props;\r\n        if (directives.length) {\r\n            context.onError(createCompilerError(36 /* X_V_SLOT_UNEXPECTED_DIRECTIVE_ON_SLOT_OUTLET */, directives[0].loc));\r\n        }\r\n    }\r\n    return {\r\n        slotName,\r\n        slotProps\r\n    };\r\n}\n\nconst fnExpRE = /^\\s*([\\w$_]+|(async\\s*)?\\([^)]*?\\))\\s*=>|^\\s*(async\\s+)?function(?:\\s+[\\w$]+)?\\s*\\(/;\r\nconst transformOn = (dir, node, context, augmentor) => {\r\n    const { loc, modifiers, arg } = dir;\r\n    if (!dir.exp && !modifiers.length) {\r\n        context.onError(createCompilerError(35 /* X_V_ON_NO_EXPRESSION */, loc));\r\n    }\r\n    let eventName;\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            let rawName = arg.content;\r\n            // TODO deprecate @vnodeXXX usage\r\n            if (rawName.startsWith('vue:')) {\r\n                rawName = `vnode-${rawName.slice(4)}`;\r\n            }\r\n            // for all event listeners, auto convert it to camelCase. See issue #2249\r\n            eventName = createSimpleExpression(toHandlerKey(camelize$1(rawName)), true, arg.loc);\r\n        }\r\n        else {\r\n            // #2388\r\n            eventName = createCompoundExpression([\r\n                `${context.helperString(TO_HANDLER_KEY)}(`,\r\n                arg,\r\n                `)`\r\n            ]);\r\n        }\r\n    }\r\n    else {\r\n        // already a compound expression.\r\n        eventName = arg;\r\n        eventName.children.unshift(`${context.helperString(TO_HANDLER_KEY)}(`);\r\n        eventName.children.push(`)`);\r\n    }\r\n    // handler processing\r\n    let exp = dir.exp;\r\n    if (exp && !exp.content.trim()) {\r\n        exp = undefined;\r\n    }\r\n    let shouldCache = context.cacheHandlers && !exp && !context.inVOnce;\r\n    if (exp) {\r\n        const isMemberExp = isMemberExpression(exp.content);\r\n        const isInlineStatement = !(isMemberExp || fnExpRE.test(exp.content));\r\n        const hasMultipleStatements = exp.content.includes(`;`);\r\n        if ((process.env.NODE_ENV !== 'production') && true) {\r\n            validateBrowserExpression(exp, context, false, hasMultipleStatements);\r\n        }\r\n        if (isInlineStatement || (shouldCache && isMemberExp)) {\r\n            // wrap inline statement in a function expression\r\n            exp = createCompoundExpression([\r\n                `${isInlineStatement\r\n                    ? `$event`\r\n                    : `${``}(...args)`} => ${hasMultipleStatements ? `{` : `(`}`,\r\n                exp,\r\n                hasMultipleStatements ? `}` : `)`\r\n            ]);\r\n        }\r\n    }\r\n    let ret = {\r\n        props: [\r\n            createObjectProperty(eventName, exp || createSimpleExpression(`() => {}`, false, loc))\r\n        ]\r\n    };\r\n    // apply extended compiler augmentor\r\n    if (augmentor) {\r\n        ret = augmentor(ret);\r\n    }\r\n    if (shouldCache) {\r\n        // cache handlers so that it's always the same handler being passed down.\r\n        // this avoids unnecessary re-renders when users use inline handlers on\r\n        // components.\r\n        ret.props[0].value = context.cache(ret.props[0].value);\r\n    }\r\n    // mark the key as handler for props normalization check\r\n    ret.props.forEach(p => (p.key.isHandlerKey = true));\r\n    return ret;\r\n};\n\n// v-bind without arg is handled directly in ./transformElements.ts due to it affecting\r\n// codegen for the entire props object. This transform here is only for v-bind\r\n// *with* args.\r\nconst transformBind = (dir, _node, context) => {\r\n    const { exp, modifiers, loc } = dir;\r\n    const arg = dir.arg;\r\n    if (arg.type !== 4 /* SIMPLE_EXPRESSION */) {\r\n        arg.children.unshift(`(`);\r\n        arg.children.push(`) || \"\"`);\r\n    }\r\n    else if (!arg.isStatic) {\r\n        arg.content = `${arg.content} || \"\"`;\r\n    }\r\n    // .sync is replaced by v-model:arg\r\n    if (modifiers.includes('camel')) {\r\n        if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n            if (arg.isStatic) {\r\n                arg.content = camelize$1(arg.content);\r\n            }\r\n            else {\r\n                arg.content = `${context.helperString(CAMELIZE)}(${arg.content})`;\r\n            }\r\n        }\r\n        else {\r\n            arg.children.unshift(`${context.helperString(CAMELIZE)}(`);\r\n            arg.children.push(`)`);\r\n        }\r\n    }\r\n    if (!context.inSSR) {\r\n        if (modifiers.includes('prop')) {\r\n            injectPrefix(arg, '.');\r\n        }\r\n        if (modifiers.includes('attr')) {\r\n            injectPrefix(arg, '^');\r\n        }\r\n    }\r\n    if (!exp ||\r\n        (exp.type === 4 /* SIMPLE_EXPRESSION */ && !exp.content.trim())) {\r\n        context.onError(createCompilerError(34 /* X_V_BIND_NO_EXPRESSION */, loc));\r\n        return {\r\n            props: [createObjectProperty(arg, createSimpleExpression('', true, loc))]\r\n        };\r\n    }\r\n    return {\r\n        props: [createObjectProperty(arg, exp)]\r\n    };\r\n};\r\nconst injectPrefix = (arg, prefix) => {\r\n    if (arg.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        if (arg.isStatic) {\r\n            arg.content = prefix + arg.content;\r\n        }\r\n        else {\r\n            arg.content = `\\`${prefix}\\${${arg.content}}\\``;\r\n        }\r\n    }\r\n    else {\r\n        arg.children.unshift(`'${prefix}' + (`);\r\n        arg.children.push(`)`);\r\n    }\r\n};\n\n// Merge adjacent text nodes and expressions into a single expression\r\n// e.g. <div>abc {{ d }} {{ e }}</div> should have a single expression node as child.\r\nconst transformText = (node, context) => {\r\n    if (node.type === 0 /* ROOT */ ||\r\n        node.type === 1 /* ELEMENT */ ||\r\n        node.type === 11 /* FOR */ ||\r\n        node.type === 10 /* IF_BRANCH */) {\r\n        // perform the transform on node exit so that all expressions have already\r\n        // been processed.\r\n        return () => {\r\n            const children = node.children;\r\n            let currentContainer = undefined;\r\n            let hasText = false;\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child)) {\r\n                    hasText = true;\r\n                    for (let j = i + 1; j < children.length; j++) {\r\n                        const next = children[j];\r\n                        if (isText(next)) {\r\n                            if (!currentContainer) {\r\n                                currentContainer = children[i] = {\r\n                                    type: 8 /* COMPOUND_EXPRESSION */,\r\n                                    loc: child.loc,\r\n                                    children: [child]\r\n                                };\r\n                            }\r\n                            // merge adjacent text node into current\r\n                            currentContainer.children.push(` + `, next);\r\n                            children.splice(j, 1);\r\n                            j--;\r\n                        }\r\n                        else {\r\n                            currentContainer = undefined;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (!hasText ||\r\n                // if this is a plain element with a single text child, leave it\r\n                // as-is since the runtime has dedicated fast path for this by directly\r\n                // setting textContent of the element.\r\n                // for component root it's always normalized anyway.\r\n                (children.length === 1 &&\r\n                    (node.type === 0 /* ROOT */ ||\r\n                        (node.type === 1 /* ELEMENT */ &&\r\n                            node.tagType === 0 /* ELEMENT */ &&\r\n                            // #3756\r\n                            // custom directives can potentially add DOM elements arbitrarily,\r\n                            // we need to avoid setting textContent of the element at runtime\r\n                            // to avoid accidentally overwriting the DOM elements added\r\n                            // by the user through custom directives.\r\n                            !node.props.find(p => p.type === 7 /* DIRECTIVE */ &&\r\n                                !context.directiveTransforms[p.name]) &&\r\n                            // in compat mode, <template> tags with no special directives\r\n                            // will be rendered as a fragment so its children must be\r\n                            // converted into vnodes.\r\n                            !(node.tag === 'template'))))) {\r\n                return;\r\n            }\r\n            // pre-convert text nodes into createTextVNode(text) calls to avoid\r\n            // runtime normalization.\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (isText(child) || child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                    const callArgs = [];\r\n                    // createTextVNode defaults to single whitespace, so if it is a\r\n                    // single space the code could be an empty call to save bytes.\r\n                    if (child.type !== 2 /* TEXT */ || child.content !== ' ') {\r\n                        callArgs.push(child);\r\n                    }\r\n                    // mark dynamic text with flag so it gets patched inside a block\r\n                    if (!context.ssr &&\r\n                        getConstantType(child, context) === 0 /* NOT_CONSTANT */) {\r\n                        callArgs.push(1 /* TEXT */ +\r\n                            ((process.env.NODE_ENV !== 'production') ? ` /* ${PatchFlagNames[1 /* TEXT */]} */` : ``));\r\n                    }\r\n                    children[i] = {\r\n                        type: 12 /* TEXT_CALL */,\r\n                        content: child,\r\n                        loc: child.loc,\r\n                        codegenNode: createCallExpression(context.helper(CREATE_TEXT), callArgs)\r\n                    };\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\n\nconst seen = new WeakSet();\r\nconst transformOnce = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */ && findDir(node, 'once', true)) {\r\n        if (seen.has(node) || context.inVOnce) {\r\n            return;\r\n        }\r\n        seen.add(node);\r\n        context.inVOnce = true;\r\n        context.helper(SET_BLOCK_TRACKING);\r\n        return () => {\r\n            context.inVOnce = false;\r\n            const cur = context.currentNode;\r\n            if (cur.codegenNode) {\r\n                cur.codegenNode = context.cache(cur.codegenNode, true /* isVNode */);\r\n            }\r\n        };\r\n    }\r\n};\n\nconst transformModel = (dir, node, context) => {\r\n    const { exp, arg } = dir;\r\n    if (!exp) {\r\n        context.onError(createCompilerError(41 /* X_V_MODEL_NO_EXPRESSION */, dir.loc));\r\n        return createTransformProps();\r\n    }\r\n    const rawExp = exp.loc.source;\r\n    const expString = exp.type === 4 /* SIMPLE_EXPRESSION */ ? exp.content : rawExp;\r\n    // im SFC <script setup> inline mode, the exp may have been transformed into\r\n    // _unref(exp)\r\n    context.bindingMetadata[rawExp];\r\n    const maybeRef = !true    /* SETUP_CONST */;\r\n    if (!expString.trim() ||\r\n        (!isMemberExpression(expString) && !maybeRef)) {\r\n        context.onError(createCompilerError(42 /* X_V_MODEL_MALFORMED_EXPRESSION */, exp.loc));\r\n        return createTransformProps();\r\n    }\r\n    const propName = arg ? arg : createSimpleExpression('modelValue', true);\r\n    const eventName = arg\r\n        ? isStaticExp(arg)\r\n            ? `onUpdate:${arg.content}`\r\n            : createCompoundExpression(['\"onUpdate:\" + ', arg])\r\n        : `onUpdate:modelValue`;\r\n    let assignmentExp;\r\n    const eventArg = context.isTS ? `($event: any)` : `$event`;\r\n    {\r\n        assignmentExp = createCompoundExpression([\r\n            `${eventArg} => ((`,\r\n            exp,\r\n            `) = $event)`\r\n        ]);\r\n    }\r\n    const props = [\r\n        // modelValue: foo\r\n        createObjectProperty(propName, dir.exp),\r\n        // \"onUpdate:modelValue\": $event => (foo = $event)\r\n        createObjectProperty(eventName, assignmentExp)\r\n    ];\r\n    // modelModifiers: { foo: true, \"bar-baz\": true }\r\n    if (dir.modifiers.length && node.tagType === 1 /* COMPONENT */) {\r\n        const modifiers = dir.modifiers\r\n            .map(m => (isSimpleIdentifier(m) ? m : JSON.stringify(m)) + `: true`)\r\n            .join(`, `);\r\n        const modifiersKey = arg\r\n            ? isStaticExp(arg)\r\n                ? `${arg.content}Modifiers`\r\n                : createCompoundExpression([arg, ' + \"Modifiers\"'])\r\n            : `modelModifiers`;\r\n        props.push(createObjectProperty(modifiersKey, createSimpleExpression(`{ ${modifiers} }`, false, dir.loc, 2 /* CAN_HOIST */)));\r\n    }\r\n    return createTransformProps(props);\r\n};\r\nfunction createTransformProps(props = []) {\r\n    return { props };\r\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/;\r\nconst transformFilter = (node, context) => {\r\n    if (!isCompatEnabled(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context)) {\r\n        return;\r\n    }\r\n    if (node.type === 5 /* INTERPOLATION */) {\r\n        // filter rewrite is applied before expression transform so only\r\n        // simple expressions are possible at this stage\r\n        rewriteFilter(node.content, context);\r\n    }\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        node.props.forEach((prop) => {\r\n            if (prop.type === 7 /* DIRECTIVE */ &&\r\n                prop.name !== 'for' &&\r\n                prop.exp) {\r\n                rewriteFilter(prop.exp, context);\r\n            }\r\n        });\r\n    }\r\n};\r\nfunction rewriteFilter(node, context) {\r\n    if (node.type === 4 /* SIMPLE_EXPRESSION */) {\r\n        parseFilter(node, context);\r\n    }\r\n    else {\r\n        for (let i = 0; i < node.children.length; i++) {\r\n            const child = node.children[i];\r\n            if (typeof child !== 'object')\r\n                continue;\r\n            if (child.type === 4 /* SIMPLE_EXPRESSION */) {\r\n                parseFilter(child, context);\r\n            }\r\n            else if (child.type === 8 /* COMPOUND_EXPRESSION */) {\r\n                rewriteFilter(node, context);\r\n            }\r\n            else if (child.type === 5 /* INTERPOLATION */) {\r\n                rewriteFilter(child.content, context);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction parseFilter(node, context) {\r\n    const exp = node.content;\r\n    let inSingle = false;\r\n    let inDouble = false;\r\n    let inTemplateString = false;\r\n    let inRegex = false;\r\n    let curly = 0;\r\n    let square = 0;\r\n    let paren = 0;\r\n    let lastFilterIndex = 0;\r\n    let c, prev, i, expression, filters = [];\r\n    for (i = 0; i < exp.length; i++) {\r\n        prev = c;\r\n        c = exp.charCodeAt(i);\r\n        if (inSingle) {\r\n            if (c === 0x27 && prev !== 0x5c)\r\n                inSingle = false;\r\n        }\r\n        else if (inDouble) {\r\n            if (c === 0x22 && prev !== 0x5c)\r\n                inDouble = false;\r\n        }\r\n        else if (inTemplateString) {\r\n            if (c === 0x60 && prev !== 0x5c)\r\n                inTemplateString = false;\r\n        }\r\n        else if (inRegex) {\r\n            if (c === 0x2f && prev !== 0x5c)\r\n                inRegex = false;\r\n        }\r\n        else if (c === 0x7c && // pipe\r\n            exp.charCodeAt(i + 1) !== 0x7c &&\r\n            exp.charCodeAt(i - 1) !== 0x7c &&\r\n            !curly &&\r\n            !square &&\r\n            !paren) {\r\n            if (expression === undefined) {\r\n                // first filter, end of expression\r\n                lastFilterIndex = i + 1;\r\n                expression = exp.slice(0, i).trim();\r\n            }\r\n            else {\r\n                pushFilter();\r\n            }\r\n        }\r\n        else {\r\n            switch (c) {\r\n                case 0x22:\r\n                    inDouble = true;\r\n                    break; // \"\r\n                case 0x27:\r\n                    inSingle = true;\r\n                    break; // '\r\n                case 0x60:\r\n                    inTemplateString = true;\r\n                    break; // `\r\n                case 0x28:\r\n                    paren++;\r\n                    break; // (\r\n                case 0x29:\r\n                    paren--;\r\n                    break; // )\r\n                case 0x5b:\r\n                    square++;\r\n                    break; // [\r\n                case 0x5d:\r\n                    square--;\r\n                    break; // ]\r\n                case 0x7b:\r\n                    curly++;\r\n                    break; // {\r\n                case 0x7d:\r\n                    curly--;\r\n                    break; // }\r\n            }\r\n            if (c === 0x2f) {\r\n                // /\r\n                let j = i - 1;\r\n                let p;\r\n                // find first non-whitespace prev char\r\n                for (; j >= 0; j--) {\r\n                    p = exp.charAt(j);\r\n                    if (p !== ' ')\r\n                        break;\r\n                }\r\n                if (!p || !validDivisionCharRE.test(p)) {\r\n                    inRegex = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (expression === undefined) {\r\n        expression = exp.slice(0, i).trim();\r\n    }\r\n    else if (lastFilterIndex !== 0) {\r\n        pushFilter();\r\n    }\r\n    function pushFilter() {\r\n        filters.push(exp.slice(lastFilterIndex, i).trim());\r\n        lastFilterIndex = i + 1;\r\n    }\r\n    if (filters.length) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warnDeprecation(\"COMPILER_FILTER\" /* COMPILER_FILTERS */, context, node.loc);\r\n        for (i = 0; i < filters.length; i++) {\r\n            expression = wrapFilter(expression, filters[i], context);\r\n        }\r\n        node.content = expression;\r\n    }\r\n}\r\nfunction wrapFilter(exp, filter, context) {\r\n    context.helper(RESOLVE_FILTER);\r\n    const i = filter.indexOf('(');\r\n    if (i < 0) {\r\n        context.filters.add(filter);\r\n        return `${toValidAssetId(filter, 'filter')}(${exp})`;\r\n    }\r\n    else {\r\n        const name = filter.slice(0, i);\r\n        const args = filter.slice(i + 1);\r\n        context.filters.add(name);\r\n        return `${toValidAssetId(name, 'filter')}(${exp}${args !== ')' ? ',' + args : args}`;\r\n    }\r\n}\n\nconst seen$1 = new WeakSet();\r\nconst transformMemo = (node, context) => {\r\n    if (node.type === 1 /* ELEMENT */) {\r\n        const dir = findDir(node, 'memo');\r\n        if (!dir || seen$1.has(node)) {\r\n            return;\r\n        }\r\n        seen$1.add(node);\r\n        return () => {\r\n            const codegenNode = node.codegenNode ||\r\n                context.currentNode.codegenNode;\r\n            if (codegenNode && codegenNode.type === 13 /* VNODE_CALL */) {\r\n                // non-component sub tree should be turned into a block\r\n                if (node.tagType !== 1 /* COMPONENT */) {\r\n                    makeBlock(codegenNode, context);\r\n                }\r\n                node.codegenNode = createCallExpression(context.helper(WITH_MEMO), [\r\n                    dir.exp,\r\n                    createFunctionExpression(undefined, codegenNode),\r\n                    `_cache`,\r\n                    String(context.cached++)\r\n                ]);\r\n            }\r\n        };\r\n    }\r\n};\n\nfunction getBaseTransformPreset(prefixIdentifiers) {\r\n    return [\r\n        [\r\n            transformOnce,\r\n            transformIf,\r\n            transformMemo,\r\n            transformFor,\r\n            ...([transformFilter] ),\r\n            ...((process.env.NODE_ENV !== 'production')\r\n                    ? [transformExpression]\r\n                    : []),\r\n            transformSlotOutlet,\r\n            transformElement,\r\n            trackSlotScopes,\r\n            transformText\r\n        ],\r\n        {\r\n            on: transformOn,\r\n            bind: transformBind,\r\n            model: transformModel\r\n        }\r\n    ];\r\n}\r\n// we name it `baseCompile` so that higher order compilers like\r\n// @vue/compiler-dom can export `compile` while re-exporting everything else.\r\nfunction baseCompile(template, options = {}) {\r\n    const onError = options.onError || defaultOnError;\r\n    const isModuleMode = options.mode === 'module';\r\n    /* istanbul ignore if */\r\n    {\r\n        if (options.prefixIdentifiers === true) {\r\n            onError(createCompilerError(46 /* X_PREFIX_ID_NOT_SUPPORTED */));\r\n        }\r\n        else if (isModuleMode) {\r\n            onError(createCompilerError(47 /* X_MODULE_MODE_NOT_SUPPORTED */));\r\n        }\r\n    }\r\n    const prefixIdentifiers = !true ;\r\n    if (options.cacheHandlers) {\r\n        onError(createCompilerError(48 /* X_CACHE_HANDLER_NOT_SUPPORTED */));\r\n    }\r\n    if (options.scopeId && !isModuleMode) {\r\n        onError(createCompilerError(49 /* X_SCOPE_ID_NOT_SUPPORTED */));\r\n    }\r\n    const ast = isString(template) ? baseParse(template, options) : template;\r\n    const [nodeTransforms, directiveTransforms] = getBaseTransformPreset();\r\n    transform(ast, extend({}, options, {\r\n        prefixIdentifiers,\r\n        nodeTransforms: [\r\n            ...nodeTransforms,\r\n            ...(options.nodeTransforms || []) // user transforms\r\n        ],\r\n        directiveTransforms: extend({}, directiveTransforms, options.directiveTransforms || {} // user transforms\r\n        )\r\n    }));\r\n    return generate(ast, extend({}, options, {\r\n        prefixIdentifiers\r\n    }));\r\n}\n\nconst noopDirectiveTransform = () => ({ props: [] });\n\nexport { BASE_TRANSITION, CAMELIZE, CAPITALIZE, CREATE_BLOCK, CREATE_COMMENT, CREATE_ELEMENT_BLOCK, CREATE_ELEMENT_VNODE, CREATE_SLOTS, CREATE_STATIC, CREATE_TEXT, CREATE_VNODE, FRAGMENT, GUARD_REACTIVE_PROPS, IS_MEMO_SAME, IS_REF, KEEP_ALIVE, MERGE_PROPS, NORMALIZE_CLASS, NORMALIZE_PROPS, NORMALIZE_STYLE, OPEN_BLOCK, POP_SCOPE_ID, PUSH_SCOPE_ID, RENDER_LIST, RENDER_SLOT, RESOLVE_COMPONENT, RESOLVE_DIRECTIVE, RESOLVE_DYNAMIC_COMPONENT, RESOLVE_FILTER, SET_BLOCK_TRACKING, SUSPENSE, TELEPORT, TO_DISPLAY_STRING, TO_HANDLERS, TO_HANDLER_KEY, UNREF, WITH_CTX, WITH_DIRECTIVES, WITH_MEMO, advancePositionWithClone, advancePositionWithMutation, assert, baseCompile, baseParse, buildDirectiveArgs, buildProps, buildSlots, checkCompatEnabled, createArrayExpression, createAssignmentExpression, createBlockStatement, createCacheExpression, createCallExpression, createCompilerError, createCompoundExpression, createConditionalExpression, createForLoopParams, createFunctionExpression, createIfStatement, createInterpolation, createObjectExpression, createObjectProperty, createReturnStatement, createRoot, createSequenceExpression, createSimpleExpression, createStructuralDirectiveTransform, createTemplateLiteral, createTransformContext, createVNodeCall, extractIdentifiers, findDir, findProp, generate, getBaseTransformPreset, getInnerRange, getMemoedVNodeCall, getVNodeBlockHelper, getVNodeHelper, hasDynamicKeyVBind, hasScopeRef, helperNameMap, injectProp, isBuiltInType, isCoreComponent, isFunctionType, isInDestructureAssignment, isMemberExpression, isMemberExpressionBrowser, isMemberExpressionNode, isReferencedIdentifier, isSimpleIdentifier, isSlotOutlet, isStaticArgOf, isStaticExp, isStaticProperty, isStaticPropertyKey, isTemplateNode, isText, isVSlot, locStub, makeBlock, noopDirectiveTransform, processExpression, processFor, processIf, processSlotOutlet, registerRuntimeHelpers, resolveComponentType, toValidAssetId, trackSlotScopes, trackVForSlotScopes, transform, transformBind, transformElement, transformExpression, transformModel, transformOn, traverseNode, walkBlockDeclarations, walkFunctionParams, walkIdentifiers, warnDeprecation };\n"]},"metadata":{},"sourceType":"module"}