{"ast":null,"code":"import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\n  {\n    initCustomFormatter();\n  }\n} // This entry is the \"full-build\" that includes both the runtime\n\n\nif (process.env.NODE_ENV !== 'production') {\n  initDev();\n}\n\nconst compileCache = Object.create(null);\n\nfunction compileToFunction(template, options) {\n  if (!isString(template)) {\n    if (template.nodeType) {\n      template = template.innerHTML;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn(`invalid template option: `, template);\n      return NOOP;\n    }\n  }\n\n  const key = template;\n  const cached = compileCache[key];\n\n  if (cached) {\n    return cached;\n  }\n\n  if (template[0] === '#') {\n    const el = document.querySelector(template);\n\n    if (process.env.NODE_ENV !== 'production' && !el) {\n      warn(`Template element not found or is empty: ${template}`);\n    } // __UNSAFE__\n    // Reason: potential execution of JS expressions in in-DOM template.\n    // The user must make sure the in-DOM template is trusted. If it's rendered\n    // by the server, the template should not contain any user data.\n\n\n    template = el ? el.innerHTML : ``;\n  }\n\n  const {\n    code\n  } = compile(template, extend({\n    hoistStatic: true,\n    onError: process.env.NODE_ENV !== 'production' ? onError : undefined,\n    onWarn: process.env.NODE_ENV !== 'production' ? e => onError(e, true) : NOOP\n  }, options));\n\n  function onError(err, asWarning = false) {\n    const message = asWarning ? err.message : `Template compilation error: ${err.message}`;\n    const codeFrame = err.loc && generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\n    warn(codeFrame ? `${message}\\n${codeFrame}` : message);\n  } // The wildcard import results in a huge object with every export\n  // with keys that cannot be mangled, and can be quite heavy size-wise.\n  // In the global build we know `Vue` is available globally so we can avoid\n  // the wildcard object.\n\n\n  const render = new Function('Vue', code)(runtimeDom);\n  render._rc = true;\n  return compileCache[key] = render;\n}\n\nregisterRuntimeCompiler(compileToFunction);\nexport { compileToFunction as compile };","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/vue/dist/vue.esm-bundler.js"],"names":["runtimeDom","initCustomFormatter","warn","registerRuntimeCompiler","compile","isString","NOOP","extend","generateCodeFrame","initDev","process","env","NODE_ENV","compileCache","Object","create","compileToFunction","template","options","nodeType","innerHTML","key","cached","el","document","querySelector","code","hoistStatic","onError","undefined","onWarn","e","err","asWarning","message","codeFrame","loc","start","offset","end","render","Function","_rc"],"mappings":"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","sourcesContent":["import * as runtimeDom from '@vue/runtime-dom';\nimport { initCustomFormatter, warn, registerRuntimeCompiler } from '@vue/runtime-dom';\nexport * from '@vue/runtime-dom';\nimport { compile } from '@vue/compiler-dom';\nimport { isString, NOOP, extend, generateCodeFrame } from '@vue/shared';\n\nfunction initDev() {\r\n    {\r\n        initCustomFormatter();\r\n    }\r\n}\n\n// This entry is the \"full-build\" that includes both the runtime\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    initDev();\r\n}\r\nconst compileCache = Object.create(null);\r\nfunction compileToFunction(template, options) {\r\n    if (!isString(template)) {\r\n        if (template.nodeType) {\r\n            template = template.innerHTML;\r\n        }\r\n        else {\r\n            (process.env.NODE_ENV !== 'production') && warn(`invalid template option: `, template);\r\n            return NOOP;\r\n        }\r\n    }\r\n    const key = template;\r\n    const cached = compileCache[key];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    if (template[0] === '#') {\r\n        const el = document.querySelector(template);\r\n        if ((process.env.NODE_ENV !== 'production') && !el) {\r\n            warn(`Template element not found or is empty: ${template}`);\r\n        }\r\n        // __UNSAFE__\r\n        // Reason: potential execution of JS expressions in in-DOM template.\r\n        // The user must make sure the in-DOM template is trusted. If it's rendered\r\n        // by the server, the template should not contain any user data.\r\n        template = el ? el.innerHTML : ``;\r\n    }\r\n    const { code } = compile(template, extend({\r\n        hoistStatic: true,\r\n        onError: (process.env.NODE_ENV !== 'production') ? onError : undefined,\r\n        onWarn: (process.env.NODE_ENV !== 'production') ? e => onError(e, true) : NOOP\r\n    }, options));\r\n    function onError(err, asWarning = false) {\r\n        const message = asWarning\r\n            ? err.message\r\n            : `Template compilation error: ${err.message}`;\r\n        const codeFrame = err.loc &&\r\n            generateCodeFrame(template, err.loc.start.offset, err.loc.end.offset);\r\n        warn(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n    }\r\n    // The wildcard import results in a huge object with every export\r\n    // with keys that cannot be mangled, and can be quite heavy size-wise.\r\n    // In the global build we know `Vue` is available globally so we can avoid\r\n    // the wildcard object.\r\n    const render = (new Function('Vue', code)(runtimeDom));\r\n    render._rc = true;\r\n    return (compileCache[key] = render);\r\n}\r\nregisterRuntimeCompiler(compileToFunction);\n\nexport { compileToFunction as compile };\n"]},"metadata":{},"sourceType":"module"}