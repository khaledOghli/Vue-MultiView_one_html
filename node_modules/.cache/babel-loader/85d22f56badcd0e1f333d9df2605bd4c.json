{"ast":null,"code":"import { ref, toRefs, computed } from 'composition-api';\nexport default function useMultiselect(props, context, dep) {\n  const {\n    searchable,\n    disabled\n  } = toRefs(props); // ============ DEPENDENCIES ============\n\n  const input = dep.input;\n  const open = dep.open;\n  const close = dep.close;\n  const clearSearch = dep.clearSearch; // ================ DATA ================\n\n  const multiselect = ref(null);\n  const isActive = ref(false); // ============== COMPUTED ==============\n\n  const tabindex = computed(() => {\n    return searchable.value || disabled.value ? -1 : 0;\n  }); // =============== METHODS ==============\n\n  const blur = () => {\n    if (searchable.value) {\n      input.value.blur();\n    }\n\n    multiselect.value.blur();\n  };\n\n  const focus = () => {\n    if (searchable.value && !disabled.value) {\n      input.value.focus();\n    }\n  };\n\n  const handleFocus = () => {\n    focus();\n  };\n\n  const activate = () => {\n    if (disabled.value) {\n      return;\n    }\n\n    isActive.value = true;\n    open();\n  };\n\n  const deactivate = () => {\n    isActive.value = false;\n    setTimeout(() => {\n      if (!isActive.value) {\n        close();\n        clearSearch();\n      }\n    }, 1);\n  };\n\n  const handleCaretClick = () => {\n    deactivate();\n    blur();\n  };\n\n  return {\n    multiselect,\n    tabindex,\n    isActive,\n    blur,\n    focus,\n    handleFocus,\n    activate,\n    deactivate,\n    handleCaretClick\n  };\n}","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/@vueform/multiselect/src/composables/useMultiselect.js"],"names":["ref","toRefs","computed","useMultiselect","props","context","dep","searchable","disabled","input","open","close","clearSearch","multiselect","isActive","tabindex","value","blur","focus","handleFocus","activate","deactivate","setTimeout","handleCaretClick"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,QAAsC,iBAAtC;AAEA,eAAe,SAASC,cAAT,CAAyBC,KAAzB,EAAgCC,OAAhC,EAAyCC,GAAzC,EACf;AACE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BP,MAAM,CAACG,KAAD,CAAvC,CADF,CAGE;;AAEA,QAAMK,KAAK,GAAGH,GAAG,CAACG,KAAlB;AACA,QAAMC,IAAI,GAAGJ,GAAG,CAACI,IAAjB;AACA,QAAMC,KAAK,GAAGL,GAAG,CAACK,KAAlB;AACA,QAAMC,WAAW,GAAGN,GAAG,CAACM,WAAxB,CARF,CAUE;;AAEA,QAAMC,WAAW,GAAGb,GAAG,CAAC,IAAD,CAAvB;AAEA,QAAMc,QAAQ,GAAGd,GAAG,CAAC,KAAD,CAApB,CAdF,CAgBE;;AAEA,QAAMe,QAAQ,GAAGb,QAAQ,CAAC,MAAM;AAC9B,WAAOK,UAAU,CAACS,KAAX,IAAoBR,QAAQ,CAACQ,KAA7B,GAAqC,CAAC,CAAtC,GAA0C,CAAjD;AACD,GAFwB,CAAzB,CAlBF,CAsBE;;AAEA,QAAMC,IAAI,GAAG,MAAM;AACjB,QAAIV,UAAU,CAACS,KAAf,EAAsB;AACpBP,MAAAA,KAAK,CAACO,KAAN,CAAYC,IAAZ;AACD;;AAEDJ,IAAAA,WAAW,CAACG,KAAZ,CAAkBC,IAAlB;AACD,GAND;;AAQA,QAAMC,KAAK,GAAG,MAAM;AAClB,QAAIX,UAAU,CAACS,KAAX,IAAoB,CAACR,QAAQ,CAACQ,KAAlC,EAAyC;AACvCP,MAAAA,KAAK,CAACO,KAAN,CAAYE,KAAZ;AACD;AACF,GAJD;;AAMA,QAAMC,WAAW,GAAG,MAAM;AACxBD,IAAAA,KAAK;AACN,GAFD;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACrB,QAAIZ,QAAQ,CAACQ,KAAb,EAAoB;AAClB;AACD;;AAEDF,IAAAA,QAAQ,CAACE,KAAT,GAAiB,IAAjB;AAEAN,IAAAA,IAAI;AACL,GARD;;AAUA,QAAMW,UAAU,GAAG,MAAM;AACvBP,IAAAA,QAAQ,CAACE,KAAT,GAAiB,KAAjB;AAEAM,IAAAA,UAAU,CAAC,MAAM;AACf,UAAI,CAACR,QAAQ,CAACE,KAAd,EAAqB;AACnBL,QAAAA,KAAK;AACLC,QAAAA,WAAW;AACZ;AACF,KALS,EAKP,CALO,CAAV;AAMD,GATD;;AAWA,QAAMW,gBAAgB,GAAG,MAAM;AAC7BF,IAAAA,UAAU;AACVJ,IAAAA,IAAI;AACL,GAHD;;AAKA,SAAO;AACLJ,IAAAA,WADK;AAELE,IAAAA,QAFK;AAGLD,IAAAA,QAHK;AAILG,IAAAA,IAJK;AAKLC,IAAAA,KALK;AAMLC,IAAAA,WANK;AAOLC,IAAAA,QAPK;AAQLC,IAAAA,UARK;AASLE,IAAAA;AATK,GAAP;AAWD","sourcesContent":["import { ref, toRefs, computed } from 'composition-api'\n\nexport default function useMultiselect (props, context, dep)\n{\n  const { searchable, disabled } = toRefs(props)\n\n  // ============ DEPENDENCIES ============\n\n  const input = dep.input\n  const open = dep.open\n  const close = dep.close\n  const clearSearch = dep.clearSearch\n\n  // ================ DATA ================\n\n  const multiselect = ref(null)\n\n  const isActive = ref(false)\n\n  // ============== COMPUTED ==============\n\n  const tabindex = computed(() => {\n    return searchable.value || disabled.value ? -1 : 0\n  })\n\n  // =============== METHODS ==============\n\n  const blur = () => {\n    if (searchable.value) {\n      input.value.blur()\n    }\n\n    multiselect.value.blur()\n  }\n\n  const focus = () => {\n    if (searchable.value && !disabled.value) {\n      input.value.focus()\n    }\n  }\n\n  const handleFocus = () => {\n    focus()\n  }\n\n  const activate = () => {\n    if (disabled.value) {\n      return\n    }\n\n    isActive.value = true\n\n    open()\n  }\n\n  const deactivate = () => {\n    isActive.value = false\n\n    setTimeout(() => {\n      if (!isActive.value) {\n        close()\n        clearSearch()\n      }\n    }, 1)\n  }\n\n  const handleCaretClick = () => {\n    deactivate()\n    blur()\n  }\n\n  return {\n    multiselect,\n    tabindex,\n    isActive,\n    blur,\n    focus,\n    handleFocus,\n    activate,\n    deactivate,\n    handleCaretClick,\n  }\n}"]},"metadata":{},"sourceType":"module"}