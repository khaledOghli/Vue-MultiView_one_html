{"ast":null,"code":"import { ref, toRefs } from 'composition-api';\nexport default function usePointer(props, context, dep) {\n  const {\n    groupSelect,\n    mode,\n    groups\n  } = toRefs(props); // ================ DATA ================\n\n  const pointer = ref(null); // =============== METHODS ==============\n\n  const setPointer = option => {\n    if (option === undefined || option !== null && option.disabled) {\n      return;\n    }\n\n    if (groups.value && option && option.group && (mode.value === 'single' || !groupSelect.value)) {\n      return;\n    }\n\n    pointer.value = option;\n  };\n\n  const clearPointer = () => {\n    setPointer(null);\n  };\n\n  return {\n    pointer,\n    setPointer,\n    clearPointer\n  };\n}","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/@vueform/multiselect/src/composables/usePointer.js"],"names":["ref","toRefs","usePointer","props","context","dep","groupSelect","mode","groups","pointer","setPointer","option","undefined","disabled","value","group","clearPointer"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AAEA,eAAe,SAASC,UAAT,CAAqBC,KAArB,EAA4BC,OAA5B,EAAqCC,GAArC,EACf;AACE,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA;AAArB,MAAgCP,MAAM,CAACE,KAAD,CAA5C,CADF,CAGE;;AAEA,QAAMM,OAAO,GAAGT,GAAG,CAAC,IAAD,CAAnB,CALF,CAOE;;AAEA,QAAMU,UAAU,GAAIC,MAAD,IAAY;AAC7B,QAAIA,MAAM,KAAKC,SAAX,IAAyBD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,QAAvD,EAAkE;AAChE;AACD;;AAED,QAAIL,MAAM,CAACM,KAAP,IAAgBH,MAAhB,IAA0BA,MAAM,CAACI,KAAjC,KAA2CR,IAAI,CAACO,KAAL,KAAe,QAAf,IAA2B,CAACR,WAAW,CAACQ,KAAnF,CAAJ,EAA+F;AAC7F;AACD;;AAEDL,IAAAA,OAAO,CAACK,KAAR,GAAgBH,MAAhB;AACD,GAVD;;AAYA,QAAMK,YAAY,GAAG,MAAM;AACzBN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,SAAO;AACLD,IAAAA,OADK;AAELC,IAAAA,UAFK;AAGLM,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { ref, toRefs } from 'composition-api'\n\nexport default function usePointer (props, context, dep)\n{\n  const { groupSelect, mode, groups } = toRefs(props)\n\n  // ================ DATA ================\n\n  const pointer = ref(null)\n\n  // =============== METHODS ==============\n\n  const setPointer = (option) => {\n    if (option === undefined || (option !== null && option.disabled)) {\n      return\n    }\n\n    if (groups.value && option && option.group && (mode.value === 'single' || !groupSelect.value)) {\n      return\n    }\n\n    pointer.value = option\n  }\n\n  const clearPointer = () => {\n    setPointer(null)\n  }\n\n  return {\n    pointer,\n    setPointer,\n    clearPointer,\n  }\n}"]},"metadata":{},"sourceType":"module"}