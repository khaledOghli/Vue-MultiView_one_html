{"ast":null,"code":"import { computed, toRefs, ref } from 'composition-api';\nexport default function useValue(props, context) {\n  const {\n    value,\n    modelValue,\n    mode,\n    valueProp\n  } = toRefs(props); // ================ DATA ================\n  // internalValue\n\n  const iv = ref(mode.value !== 'single' ? [] : {}); // ============== COMPUTED ==============\n\n  /* istanbul ignore next */\n  // externalValue\n\n  const ev = context.expose !== undefined ? modelValue : value;\n  const plainValue = computed(() => {\n    return mode.value === 'single' ? iv.value[valueProp.value] : iv.value.map(v => v[valueProp.value]);\n  });\n  const textValue = computed(() => {\n    return mode.value !== 'single' ? iv.value.map(v => v[valueProp.value]).join(',') : iv.value[valueProp.value];\n  });\n  return {\n    iv,\n    internalValue: iv,\n    ev,\n    externalValue: ev,\n    textValue,\n    plainValue\n  };\n}","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/@vueform/multiselect/src/composables/useValue.js"],"names":["computed","toRefs","ref","useValue","props","context","value","modelValue","mode","valueProp","iv","ev","expose","undefined","plainValue","map","v","textValue","join","internalValue","externalValue"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,GAA3B,QAAsC,iBAAtC;AAEA,eAAe,SAASC,QAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EACf;AACE,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAAyCR,MAAM,CAACG,KAAD,CAArD,CADF,CAGE;AAEA;;AACA,QAAMM,EAAE,GAAGR,GAAG,CAACM,IAAI,CAACF,KAAL,KAAe,QAAf,GAA0B,EAA1B,GAA+B,EAAhC,CAAd,CANF,CAQE;;AAEA;AACA;;AACA,QAAMK,EAAE,GAAGN,OAAO,CAACO,MAAR,KAAmBC,SAAnB,GAA+BN,UAA/B,GAA4CD,KAAvD;AAEA,QAAMQ,UAAU,GAAGd,QAAQ,CAAC,MAAM;AAChC,WAAOQ,IAAI,CAACF,KAAL,KAAe,QAAf,GAA0BI,EAAE,CAACJ,KAAH,CAASG,SAAS,CAACH,KAAnB,CAA1B,GAAsDI,EAAE,CAACJ,KAAH,CAASS,GAAT,CAAaC,CAAC,IAAEA,CAAC,CAACP,SAAS,CAACH,KAAX,CAAjB,CAA7D;AACD,GAF0B,CAA3B;AAIA,QAAMW,SAAS,GAAGjB,QAAQ,CAAC,MAAM;AAC/B,WAAOQ,IAAI,CAACF,KAAL,KAAe,QAAf,GAA0BI,EAAE,CAACJ,KAAH,CAASS,GAAT,CAAaC,CAAC,IAAEA,CAAC,CAACP,SAAS,CAACH,KAAX,CAAjB,EAAoCY,IAApC,CAAyC,GAAzC,CAA1B,GAA0ER,EAAE,CAACJ,KAAH,CAASG,SAAS,CAACH,KAAnB,CAAjF;AACD,GAFyB,CAA1B;AAIA,SAAO;AACLI,IAAAA,EADK;AAELS,IAAAA,aAAa,EAAET,EAFV;AAGLC,IAAAA,EAHK;AAILS,IAAAA,aAAa,EAAET,EAJV;AAKLM,IAAAA,SALK;AAMLH,IAAAA;AANK,GAAP;AAQD","sourcesContent":["import { computed, toRefs, ref } from 'composition-api'\n\nexport default function useValue (props, context)\n{\n  const { value, modelValue, mode, valueProp } = toRefs(props)\n\n  // ================ DATA ================\n\n  // internalValue\n  const iv = ref(mode.value !== 'single' ? [] : {})\n\n  // ============== COMPUTED ==============\n\n  /* istanbul ignore next */\n  // externalValue\n  const ev = context.expose !== undefined ? modelValue : value\n\n  const plainValue = computed(() => {\n    return mode.value === 'single' ? iv.value[valueProp.value] : iv.value.map(v=>v[valueProp.value])\n  })\n\n  const textValue = computed(() => {\n    return mode.value !== 'single' ? iv.value.map(v=>v[valueProp.value]).join(',') : iv.value[valueProp.value]\n  })\n\n  return {\n    iv,\n    internalValue: iv,\n    ev,\n    externalValue: ev,\n    textValue,\n    plainValue,\n  }\n}"]},"metadata":{},"sourceType":"module"}