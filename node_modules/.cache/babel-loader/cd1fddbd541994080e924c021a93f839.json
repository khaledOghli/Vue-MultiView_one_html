{"ast":null,"code":"import { toRefs, computed } from 'composition-api';\nexport default function useKeyboard(props, context, dep) {\n  const {\n    mode,\n    addTagOn,\n    openDirection,\n    searchable,\n    showOptions,\n    valueProp,\n    groups: groupped,\n    addOptionOn: addOptionOn_,\n    createTag,\n    createOption: createOption_\n  } = toRefs(props); // ============ DEPENDENCIES ============\n\n  const iv = dep.iv;\n  const update = dep.update;\n  const search = dep.search;\n  const setPointer = dep.setPointer;\n  const selectPointer = dep.selectPointer;\n  const backwardPointer = dep.backwardPointer;\n  const forwardPointer = dep.forwardPointer;\n  const blur = dep.blur;\n  const fo = dep.fo; // ============== COMPUTED ==============\n  // no export\n\n  const createOption = computed(() => {\n    return createTag.value || createOption_.value || false;\n  }); // no export\n\n  const addOptionOn = computed(() => {\n    if (addTagOn.value !== undefined) {\n      return addTagOn.value;\n    } else if (addOptionOn_.value !== undefined) {\n      return addOptionOn_.value;\n    }\n\n    return ['enter'];\n  }); // =============== METHODS ==============\n  // no export\n\n  const preparePointer = () => {\n    // When options are hidden and creating tags is allowed\n    // no pointer will be set (because options are hidden).\n    // In such case we need to set the pointer manually to the \n    // first option, which equals to the option created from\n    // the search value.\n    if (mode.value === 'tags' && !showOptions.value && createOption.value && searchable.value && !groupped.value) {\n      setPointer(fo.value[fo.value.map(o => o[valueProp.value]).indexOf(search.value)]);\n    }\n  };\n\n  const handleKeydown = e => {\n    switch (e.key) {\n      case 'Backspace':\n        if (mode.value === 'single') {\n          return;\n        }\n\n        if (searchable.value && [null, ''].indexOf(search.value) === -1) {\n          return;\n        }\n\n        if (iv.value.length === 0) {\n          return;\n        }\n\n        update([...iv.value].slice(0, -1));\n        break;\n\n      case 'Enter':\n        e.preventDefault();\n\n        if (addOptionOn.value.indexOf('enter') === -1 && createOption.value) {\n          return;\n        }\n\n        preparePointer();\n        selectPointer();\n        break;\n\n      case ' ':\n        if (!createOption.value && !searchable.value) {\n          e.preventDefault();\n          preparePointer();\n          selectPointer();\n          return;\n        }\n\n        if (!createOption.value) {\n          return false;\n        }\n\n        if (addOptionOn.value.indexOf('space') === -1 && createOption.value) {\n          return;\n        }\n\n        e.preventDefault();\n        preparePointer();\n        selectPointer();\n        break;\n\n      case 'Tab':\n      case ';':\n      case ',':\n        if (addOptionOn.value.indexOf(e.key.toLowerCase()) === -1 || !createOption.value) {\n          return;\n        }\n\n        preparePointer();\n        selectPointer();\n        e.preventDefault();\n        break;\n\n      case 'Escape':\n        blur();\n        break;\n\n      case 'ArrowUp':\n        e.preventDefault();\n\n        if (!showOptions.value) {\n          return;\n        }\n\n        openDirection.value === 'top' ? forwardPointer() : backwardPointer();\n        break;\n\n      case 'ArrowDown':\n        e.preventDefault();\n\n        if (!showOptions.value) {\n          return;\n        }\n\n        openDirection.value === 'top' ? backwardPointer() : forwardPointer();\n        break;\n    }\n  };\n\n  return {\n    handleKeydown,\n    preparePointer\n  };\n}","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/@vueform/multiselect/src/composables/useKeyboard.js"],"names":["toRefs","computed","useKeyboard","props","context","dep","mode","addTagOn","openDirection","searchable","showOptions","valueProp","groups","groupped","addOptionOn","addOptionOn_","createTag","createOption","createOption_","iv","update","search","setPointer","selectPointer","backwardPointer","forwardPointer","blur","fo","value","undefined","preparePointer","map","o","indexOf","handleKeydown","e","key","length","slice","preventDefault","toLowerCase"],"mappings":"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","sourcesContent":["import { toRefs, computed } from 'composition-api'\n\nexport default function useKeyboard (props, context, dep)\n{\n  const {\n      mode, addTagOn, openDirection, searchable,\n      showOptions, valueProp, groups: groupped,\n      addOptionOn: addOptionOn_, createTag, createOption: createOption_,\n    } = toRefs(props)\n\n  // ============ DEPENDENCIES ============\n\n  const iv = dep.iv\n  const update = dep.update\n  const search = dep.search\n  const setPointer = dep.setPointer\n  const selectPointer = dep.selectPointer\n  const backwardPointer = dep.backwardPointer\n  const forwardPointer = dep.forwardPointer\n  const blur = dep.blur\n  const fo = dep.fo\n\n  // ============== COMPUTED ==============\n\n  // no export\n  const createOption = computed(() => {\n    return createTag.value || createOption_.value || false\n  })\n\n  // no export\n  const addOptionOn = computed(() => {\n    if (addTagOn.value !== undefined) {\n      return addTagOn.value\n    }\n    else if (addOptionOn_.value !== undefined) {\n      return addOptionOn_.value\n    }\n\n    return ['enter']\n  })\n\n  // =============== METHODS ==============\n\n  // no export\n  const preparePointer = () => {\n    // When options are hidden and creating tags is allowed\n    // no pointer will be set (because options are hidden).\n    // In such case we need to set the pointer manually to the \n    // first option, which equals to the option created from\n    // the search value.\n    if (mode.value === 'tags' && !showOptions.value && createOption.value && searchable.value && !groupped.value) {\n      setPointer(fo.value[fo.value.map(o => o[valueProp.value]).indexOf(search.value)])\n    }\n  }\n\n  const handleKeydown = (e) => {\n    switch (e.key) {\n      case 'Backspace':\n        if (mode.value === 'single') {\n          return\n        }\n\n        if (searchable.value && [null, ''].indexOf(search.value) === -1) {\n          return\n        }\n\n        if (iv.value.length === 0) {\n          return\n        }\n        \n        update([...iv.value].slice(0,-1))\n        break\n\n      case 'Enter':\n        e.preventDefault()\n\n        if (addOptionOn.value.indexOf('enter') === -1 && createOption.value) {\n          return\n        }\n        \n        preparePointer()\n        selectPointer()\n        break\n\n      case ' ':\n        if (!createOption.value && !searchable.value) {\n          e.preventDefault()\n          \n          preparePointer()\n          selectPointer()\n          return\n        }\n\n        if (!createOption.value) {\n          return false\n        } \n\n        if (addOptionOn.value.indexOf('space') === -1 && createOption.value) {\n          return\n        }\n\n        e.preventDefault()\n        \n        preparePointer()\n        selectPointer()\n        break\n      \n      case 'Tab':\n      case ';':\n      case ',':\n        if (addOptionOn.value.indexOf(e.key.toLowerCase()) === -1 || !createOption.value) {\n          return\n        }\n\n        preparePointer()\n        selectPointer()\n        e.preventDefault()\n        break\n\n      case 'Escape':\n        blur()\n        break\n\n      case 'ArrowUp':\n        e.preventDefault()\n\n        if (!showOptions.value) {\n          return\n        }\n\n        openDirection.value === 'top' ? forwardPointer() : backwardPointer()\n        break\n\n      case 'ArrowDown':\n        e.preventDefault()\n\n        if (!showOptions.value) {\n          return\n        }\n\n        openDirection.value === 'top' ? backwardPointer() : forwardPointer()\n        break\n    }\n  }\n\n  return {\n    handleKeydown,\n    preparePointer,\n  }\n}"]},"metadata":{},"sourceType":"module"}