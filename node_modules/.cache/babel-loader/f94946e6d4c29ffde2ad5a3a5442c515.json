{"ast":null,"code":"import { ref, toRefs } from 'composition-api';\nexport default function useDropdown(props, context, dep) {\n  const {\n    disabled\n  } = toRefs(props); // ================ DATA ================\n\n  const isOpen = ref(false); // =============== METHODS ==============\n\n  const open = () => {\n    if (isOpen.value || disabled.value) {\n      return;\n    }\n\n    isOpen.value = true;\n    context.emit('open');\n  };\n\n  const close = () => {\n    if (!isOpen.value) {\n      return;\n    }\n\n    isOpen.value = false;\n    context.emit('close');\n  };\n\n  return {\n    isOpen,\n    open,\n    close\n  };\n}","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/@vueform/multiselect/src/composables/useDropdown.js"],"names":["ref","toRefs","useDropdown","props","context","dep","disabled","isOpen","open","value","emit","close"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AAEA,eAAe,SAASC,WAAT,CAAsBC,KAAtB,EAA6BC,OAA7B,EAAsCC,GAAtC,EACf;AACE,QAAM;AAAEC,IAAAA;AAAF,MAAeL,MAAM,CAACE,KAAD,CAA3B,CADF,CAGE;;AAEA,QAAMI,MAAM,GAAGP,GAAG,CAAC,KAAD,CAAlB,CALF,CAOE;;AAEA,QAAMQ,IAAI,GAAG,MAAM;AACjB,QAAID,MAAM,CAACE,KAAP,IAAgBH,QAAQ,CAACG,KAA7B,EAAoC;AAClC;AACD;;AAEDF,IAAAA,MAAM,CAACE,KAAP,GAAe,IAAf;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,MAAb;AACD,GAPD;;AASA,QAAMC,KAAK,GAAG,MAAM;AAClB,QAAI,CAACJ,MAAM,CAACE,KAAZ,EAAmB;AACjB;AACD;;AAEDF,IAAAA,MAAM,CAACE,KAAP,GAAe,KAAf;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,OAAb;AACD,GAPD;;AASA,SAAO;AACLH,IAAAA,MADK;AAELC,IAAAA,IAFK;AAGLG,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["import { ref, toRefs } from 'composition-api'\n\nexport default function useDropdown (props, context, dep)\n{\n  const { disabled } = toRefs(props)\n\n  // ================ DATA ================\n\n  const isOpen = ref(false)\n\n  // =============== METHODS ==============\n\n  const open = () => {\n    if (isOpen.value || disabled.value) {\n      return\n    }\n\n    isOpen.value = true\n    context.emit('open')\n  }\n\n  const close = () => {\n    if (!isOpen.value) {\n      return\n    }\n\n    isOpen.value = false\n    context.emit('close')\n  }\n\n  return {\n    isOpen,\n    open,\n    close,\n  }\n}"]},"metadata":{},"sourceType":"module"}