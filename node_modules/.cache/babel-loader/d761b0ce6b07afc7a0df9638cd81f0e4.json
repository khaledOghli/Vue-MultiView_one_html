{"ast":null,"code":"import { ref, toRefs, computed, watch } from 'composition-api';\nexport default function useSearch(props, context, dep) {\n  // ================ DATA ================\n  const search = ref(null);\n  const input = ref(null); // =============== METHODS ==============\n\n  const clearSearch = () => {\n    search.value = '';\n  };\n\n  const handleSearchInput = e => {\n    search.value = e.target.value;\n  };\n\n  const handlePaste = e => {\n    context.emit('paste', e);\n  }; // ============== WATCHERS ==============\n\n\n  watch(search, val => {\n    context.emit('search-change', val);\n  });\n  return {\n    search,\n    input,\n    clearSearch,\n    handleSearchInput,\n    handlePaste\n  };\n}","map":{"version":3,"sources":["/Users/khaledoghli/Desktop/webpack/vue-js/hello-js/node_modules/@vueform/multiselect/src/composables/useSearch.js"],"names":["ref","toRefs","computed","watch","useSearch","props","context","dep","search","input","clearSearch","value","handleSearchInput","e","target","handlePaste","emit","val"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,QAAtB,EAAgCC,KAAhC,QAA6C,iBAA7C;AAEA,eAAe,SAASC,SAAT,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoCC,GAApC,EACf;AACE;AAEA,QAAMC,MAAM,GAAGR,GAAG,CAAC,IAAD,CAAlB;AAEA,QAAMS,KAAK,GAAGT,GAAG,CAAC,IAAD,CAAjB,CALF,CAQE;;AAEA,QAAMU,WAAW,GAAG,MAAM;AACxBF,IAAAA,MAAM,CAACG,KAAP,GAAe,EAAf;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BL,IAAAA,MAAM,CAACG,KAAP,GAAeE,CAAC,CAACC,MAAF,CAASH,KAAxB;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAIF,CAAD,IAAO;AACzBP,IAAAA,OAAO,CAACU,IAAR,CAAa,OAAb,EAAsBH,CAAtB;AACD,GAFD,CAlBF,CAsBE;;;AAEAV,EAAAA,KAAK,CAACK,MAAD,EAAUS,GAAD,IAAS;AACrBX,IAAAA,OAAO,CAACU,IAAR,CAAa,eAAb,EAA8BC,GAA9B;AACD,GAFI,CAAL;AAIA,SAAO;AACLT,IAAAA,MADK;AAELC,IAAAA,KAFK;AAGLC,IAAAA,WAHK;AAILE,IAAAA,iBAJK;AAKLG,IAAAA;AALK,GAAP;AAOD","sourcesContent":["import { ref, toRefs, computed, watch } from 'composition-api'\n\nexport default function useSearch (props, context, dep)\n{\n  // ================ DATA ================\n\n  const search = ref(null)\n\n  const input = ref(null)\n\n\n  // =============== METHODS ==============\n\n  const clearSearch = () => {\n    search.value = ''\n  }\n\n  const handleSearchInput = (e) => {\n    search.value = e.target.value\n  }\n\n  const handlePaste = (e) => {\n    context.emit('paste', e)\n  }\n\n  // ============== WATCHERS ==============\n\n  watch(search, (val) => {\n    context.emit('search-change', val)\n  })\n\n  return {\n    search,\n    input,\n    clearSearch,\n    handleSearchInput,\n    handlePaste,\n  }\n}"]},"metadata":{},"sourceType":"module"}